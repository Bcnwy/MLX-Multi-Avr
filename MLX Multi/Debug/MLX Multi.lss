
MLX Multi.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000094  00800100  00001a4c  00001ae0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001a4c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000056  00800194  00800194  00001b74  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001b74  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001bd0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000298  00000000  00000000  00001c10  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000063a1  00000000  00000000  00001ea8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000010c2  00000000  00000000  00008249  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000e63  00000000  00000000  0000930b  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000958  00000000  00000000  0000a170  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000196a  00000000  00000000  0000aac8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00002fc3  00000000  00000000  0000c432  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000510  00000000  00000000  0000f3f5  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 b7 00 	jmp	0x16e	; 0x16e <__ctors_end>
       4:	0c 94 df 00 	jmp	0x1be	; 0x1be <__bad_interrupt>
       8:	0c 94 df 00 	jmp	0x1be	; 0x1be <__bad_interrupt>
       c:	0c 94 df 00 	jmp	0x1be	; 0x1be <__bad_interrupt>
      10:	0c 94 df 00 	jmp	0x1be	; 0x1be <__bad_interrupt>
      14:	0c 94 df 00 	jmp	0x1be	; 0x1be <__bad_interrupt>
      18:	0c 94 df 00 	jmp	0x1be	; 0x1be <__bad_interrupt>
      1c:	0c 94 df 00 	jmp	0x1be	; 0x1be <__bad_interrupt>
      20:	0c 94 df 00 	jmp	0x1be	; 0x1be <__bad_interrupt>
      24:	0c 94 df 00 	jmp	0x1be	; 0x1be <__bad_interrupt>
      28:	0c 94 df 00 	jmp	0x1be	; 0x1be <__bad_interrupt>
      2c:	0c 94 df 00 	jmp	0x1be	; 0x1be <__bad_interrupt>
      30:	0c 94 df 00 	jmp	0x1be	; 0x1be <__bad_interrupt>
      34:	0c 94 08 02 	jmp	0x410	; 0x410 <__vector_13>
      38:	0c 94 e3 01 	jmp	0x3c6	; 0x3c6 <__vector_14>
      3c:	0c 94 df 00 	jmp	0x1be	; 0x1be <__bad_interrupt>
      40:	0c 94 df 00 	jmp	0x1be	; 0x1be <__bad_interrupt>
      44:	0c 94 df 00 	jmp	0x1be	; 0x1be <__bad_interrupt>
      48:	0c 94 df 00 	jmp	0x1be	; 0x1be <__bad_interrupt>
      4c:	0c 94 df 00 	jmp	0x1be	; 0x1be <__bad_interrupt>
      50:	0c 94 df 00 	jmp	0x1be	; 0x1be <__bad_interrupt>
      54:	0c 94 df 00 	jmp	0x1be	; 0x1be <__bad_interrupt>
      58:	0c 94 df 00 	jmp	0x1be	; 0x1be <__bad_interrupt>
      5c:	0c 94 df 00 	jmp	0x1be	; 0x1be <__bad_interrupt>
      60:	0c 94 df 00 	jmp	0x1be	; 0x1be <__bad_interrupt>
      64:	0c 94 df 00 	jmp	0x1be	; 0x1be <__bad_interrupt>

00000068 <__trampolines_end>:
      68:	6e 61       	ori	r22, 0x1E	; 30
      6a:	6e 00       	.word	0x006e	; ????

0000006c <__c.2177>:
      6c:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      7c:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
      8c:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
      9c:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
      ac:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
      bc:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
      cc:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
      dc:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
      ec:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
      fc:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     10c:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     11c:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     12c:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     13c:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     14c:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     15c:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

0000016a <__ctors_start>:
     16a:	74 04       	cpc	r7, r4
     16c:	57 05       	cpc	r21, r7

0000016e <__ctors_end>:
     16e:	11 24       	eor	r1, r1
     170:	1f be       	out	0x3f, r1	; 63
     172:	cf ef       	ldi	r28, 0xFF	; 255
     174:	d8 e0       	ldi	r29, 0x08	; 8
     176:	de bf       	out	0x3e, r29	; 62
     178:	cd bf       	out	0x3d, r28	; 61

0000017a <__do_copy_data>:
     17a:	11 e0       	ldi	r17, 0x01	; 1
     17c:	a0 e0       	ldi	r26, 0x00	; 0
     17e:	b1 e0       	ldi	r27, 0x01	; 1
     180:	ec e4       	ldi	r30, 0x4C	; 76
     182:	fa e1       	ldi	r31, 0x1A	; 26
     184:	02 c0       	rjmp	.+4      	; 0x18a <__do_copy_data+0x10>
     186:	05 90       	lpm	r0, Z+
     188:	0d 92       	st	X+, r0
     18a:	a4 39       	cpi	r26, 0x94	; 148
     18c:	b1 07       	cpc	r27, r17
     18e:	d9 f7       	brne	.-10     	; 0x186 <__do_copy_data+0xc>

00000190 <__do_clear_bss>:
     190:	21 e0       	ldi	r18, 0x01	; 1
     192:	a4 e9       	ldi	r26, 0x94	; 148
     194:	b1 e0       	ldi	r27, 0x01	; 1
     196:	01 c0       	rjmp	.+2      	; 0x19a <.do_clear_bss_start>

00000198 <.do_clear_bss_loop>:
     198:	1d 92       	st	X+, r1

0000019a <.do_clear_bss_start>:
     19a:	aa 3e       	cpi	r26, 0xEA	; 234
     19c:	b2 07       	cpc	r27, r18
     19e:	e1 f7       	brne	.-8      	; 0x198 <.do_clear_bss_loop>

000001a0 <__do_global_ctors>:
     1a0:	10 e0       	ldi	r17, 0x00	; 0
     1a2:	c7 eb       	ldi	r28, 0xB7	; 183
     1a4:	d0 e0       	ldi	r29, 0x00	; 0
     1a6:	04 c0       	rjmp	.+8      	; 0x1b0 <__do_global_ctors+0x10>
     1a8:	21 97       	sbiw	r28, 0x01	; 1
     1aa:	fe 01       	movw	r30, r28
     1ac:	0e 94 6c 0b 	call	0x16d8	; 0x16d8 <__tablejump2__>
     1b0:	c5 3b       	cpi	r28, 0xB5	; 181
     1b2:	d1 07       	cpc	r29, r17
     1b4:	c9 f7       	brne	.-14     	; 0x1a8 <__do_global_ctors+0x8>
     1b6:	0e 94 56 04 	call	0x8ac	; 0x8ac <main>
     1ba:	0c 94 24 0d 	jmp	0x1a48	; 0x1a48 <_exit>

000001be <__bad_interrupt>:
     1be:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001c2 <_ZN17Adafruit_MLX90614C1Eh>:
 ****************************************************/

#include "Adafruit_MLX90614.h"
#include "uart.h"
  
Adafruit_MLX90614::Adafruit_MLX90614(uint8_t i2caddr) {
     1c2:	1f 93       	push	r17
     1c4:	cf 93       	push	r28
     1c6:	df 93       	push	r29
     1c8:	ec 01       	movw	r28, r24
     1ca:	16 2f       	mov	r17, r22
	  }
 class I2c
 {
 public:
    I2c()
    {
     1cc:	18 86       	std	Y+8, r1	; 0x08
     1ce:	19 86       	std	Y+9, r1	; 0x09
	    i2c_init();
     1d0:	0e 94 8d 04 	call	0x91a	; 0x91a <i2c_init>
  _addr = i2caddr;
     1d4:	1a 87       	std	Y+10, r17	; 0x0a
}
     1d6:	df 91       	pop	r29
     1d8:	cf 91       	pop	r28
     1da:	1f 91       	pop	r17
     1dc:	08 95       	ret

000001de <_ZN17Adafruit_MLX906146read16Eh>:
  return temp;
}

/*********************************************************************/

uint16_t Adafruit_MLX90614::read16(uint8_t a) {
     1de:	0f 93       	push	r16
     1e0:	1f 93       	push	r17
     1e2:	cf 93       	push	r28
     1e4:	8c 01       	movw	r16, r24
     1e6:	c6 2f       	mov	r28, r22
  uint16_t ret;
  Wire.beginTransmission(_addr); // start transmission to device 
     1e8:	fc 01       	movw	r30, r24
     1ea:	82 85       	ldd	r24, Z+10	; 0x0a
    }
     void beginTransmission(uint8_t address)
     {
         m_bufferIndex = 0;
     1ec:	10 86       	std	Z+8, r1	; 0x08

         i2c_start((address << 1) | I2C_WRITE);
     1ee:	88 0f       	add	r24, r24
     1f0:	0e 94 96 04 	call	0x92c	; 0x92c <i2c_start>
     }

     void write(uint8_t byte)
     {
         if (m_bufferIndex == c_bufferSize)
     1f4:	f8 01       	movw	r30, r16
     1f6:	80 85       	ldd	r24, Z+8	; 0x08
     1f8:	88 30       	cpi	r24, 0x08	; 8
     1fa:	59 f0       	breq	.+22     	; 0x212 <_ZN17Adafruit_MLX906146read16Eh+0x34>
             return;

         m_buffer[m_bufferIndex++] = byte;
     1fc:	91 e0       	ldi	r25, 0x01	; 1
     1fe:	98 0f       	add	r25, r24
     200:	90 87       	std	Z+8, r25	; 0x08
     202:	e8 0f       	add	r30, r24
     204:	f1 1d       	adc	r31, r1
     206:	c0 83       	st	Z, r28
    }

    uint8_t endTransmission(bool stop = true)
    {
         for (uint8_t index = 0; index < m_bufferIndex; ++index) {
     208:	f8 01       	movw	r30, r16
     20a:	80 85       	ldd	r24, Z+8	; 0x08
     20c:	88 23       	and	r24, r24
     20e:	09 f4       	brne	.+2      	; 0x212 <_ZN17Adafruit_MLX906146read16Eh+0x34>
     210:	4e c0       	rjmp	.+156    	; 0x2ae <_ZN17Adafruit_MLX906146read16Eh+0xd0>
  return temp;
}

/*********************************************************************/

uint16_t Adafruit_MLX90614::read16(uint8_t a) {
     212:	c0 e0       	ldi	r28, 0x00	; 0
             if (i2c_write(m_buffer[index]) != 0)
     214:	f8 01       	movw	r30, r16
     216:	ec 0f       	add	r30, r28
     218:	f1 1d       	adc	r31, r1
     21a:	80 81       	ld	r24, Z
     21c:	0e 94 c1 04 	call	0x982	; 0x982 <i2c_write>
     220:	81 11       	cpse	r24, r1
     222:	45 c0       	rjmp	.+138    	; 0x2ae <_ZN17Adafruit_MLX906146read16Eh+0xd0>
         m_buffer[m_bufferIndex++] = byte;
    }

    uint8_t endTransmission(bool stop = true)
    {
         for (uint8_t index = 0; index < m_bufferIndex; ++index) {
     224:	cf 5f       	subi	r28, 0xFF	; 255
     226:	f8 01       	movw	r30, r16
     228:	80 85       	ldd	r24, Z+8	; 0x08
     22a:	c8 17       	cp	r28, r24
     22c:	98 f3       	brcs	.-26     	; 0x214 <_ZN17Adafruit_MLX906146read16Eh+0x36>
     22e:	3f c0       	rjmp	.+126    	; 0x2ae <_ZN17Adafruit_MLX906146read16Eh+0xd0>
         return m_bufferIndex;
     }

     uint8_t read()
     {
         if (m_bufferReadIndex == m_bufferIndex)
     230:	f8 01       	movw	r30, r16
     232:	91 85       	ldd	r25, Z+9	; 0x09
     234:	80 85       	ldd	r24, Z+8	; 0x08
     236:	98 17       	cp	r25, r24
     238:	b1 f0       	breq	.+44     	; 0x266 <_ZN17Adafruit_MLX906146read16Eh+0x88>
             return 0;
        return m_buffer[m_bufferReadIndex++];
     23a:	41 e0       	ldi	r20, 0x01	; 1
     23c:	49 0f       	add	r20, r25
     23e:	41 87       	std	Z+9, r20	; 0x09
     240:	e9 0f       	add	r30, r25
     242:	f1 1d       	adc	r31, r1
  Wire.beginTransmission(_addr); // start transmission to device 
  Wire.write(a); // sends register address to read from
  Wire.endTransmission(false); // end transmission
  
  Wire.requestFrom(_addr, (uint8_t)3);// send data n-bytes read
  ret = Wire.read(); // receive DATA
     244:	20 81       	ld	r18, Z
     246:	30 e0       	ldi	r19, 0x00	; 0
         return m_bufferIndex;
     }

     uint8_t read()
     {
         if (m_bufferReadIndex == m_bufferIndex)
     248:	84 17       	cp	r24, r20
     24a:	d1 f1       	breq	.+116    	; 0x2c0 <_ZN17Adafruit_MLX906146read16Eh+0xe2>
             return 0;
        return m_buffer[m_bufferReadIndex++];
     24c:	9e 5f       	subi	r25, 0xFE	; 254
     24e:	f8 01       	movw	r30, r16
     250:	91 87       	std	Z+9, r25	; 0x09
     252:	e4 0f       	add	r30, r20
     254:	f1 1d       	adc	r31, r1
  ret |= Wire.read() << 8; // receive DATA
     256:	40 81       	ld	r20, Z
     258:	34 2b       	or	r19, r20
         return m_bufferIndex;
     }

     uint8_t read()
     {
         if (m_bufferReadIndex == m_bufferIndex)
     25a:	98 17       	cp	r25, r24
     25c:	89 f1       	breq	.+98     	; 0x2c0 <_ZN17Adafruit_MLX906146read16Eh+0xe2>
             return 0;
        return m_buffer[m_bufferReadIndex++];
     25e:	9f 5f       	subi	r25, 0xFF	; 255
     260:	f8 01       	movw	r30, r16
     262:	91 87       	std	Z+9, r25	; 0x09
     264:	2d c0       	rjmp	.+90     	; 0x2c0 <_ZN17Adafruit_MLX906146read16Eh+0xe2>
     266:	20 e0       	ldi	r18, 0x00	; 0
     268:	30 e0       	ldi	r19, 0x00	; 0
     26a:	2a c0       	rjmp	.+84     	; 0x2c0 <_ZN17Adafruit_MLX906146read16Eh+0xe2>
         if (i2c_start((address << 1) | I2C_READ) != 0)
             return 0;

        m_bufferIndex = 0;
         while (--quantity > 0) {
             m_buffer[m_bufferIndex++] = i2c_readAck();
     26c:	81 e0       	ldi	r24, 0x01	; 1
     26e:	f8 01       	movw	r30, r16
     270:	80 87       	std	Z+8, r24	; 0x08
     272:	0e 94 d3 04 	call	0x9a6	; 0x9a6 <i2c_readAck>
     276:	f8 01       	movw	r30, r16
     278:	80 83       	st	Z, r24
     27a:	c0 85       	ldd	r28, Z+8	; 0x08
     27c:	81 e0       	ldi	r24, 0x01	; 1
     27e:	8c 0f       	add	r24, r28
     280:	80 87       	std	Z+8, r24	; 0x08
     282:	0e 94 d3 04 	call	0x9a6	; 0x9a6 <i2c_readAck>
     286:	f8 01       	movw	r30, r16
     288:	ec 0f       	add	r30, r28
     28a:	f1 1d       	adc	r31, r1
     28c:	80 83       	st	Z, r24
         }
         m_buffer[m_bufferIndex++] = i2c_readNak();
     28e:	f8 01       	movw	r30, r16
     290:	c0 85       	ldd	r28, Z+8	; 0x08
     292:	81 e0       	ldi	r24, 0x01	; 1
     294:	8c 0f       	add	r24, r28
     296:	80 87       	std	Z+8, r24	; 0x08
     298:	0e 94 de 04 	call	0x9bc	; 0x9bc <i2c_readNak>
     29c:	f8 01       	movw	r30, r16
     29e:	ec 0f       	add	r30, r28
     2a0:	f1 1d       	adc	r31, r1
     2a2:	80 83       	st	Z, r24
         m_bufferReadIndex = 0;
     2a4:	f8 01       	movw	r30, r16
     2a6:	11 86       	std	Z+9, r1	; 0x09

         if (stop)
             i2c_stop();
     2a8:	0e 94 bd 04 	call	0x97a	; 0x97a <i2c_stop>
     2ac:	c1 cf       	rjmp	.-126    	; 0x230 <_ZN17Adafruit_MLX906146read16Eh+0x52>
     {
        // quantity = Sensors::min(quantity, c_bufferSize);
         if (quantity == 0)
             return 0;

         if (i2c_start((address << 1) | I2C_READ) != 0)
     2ae:	f8 01       	movw	r30, r16
     2b0:	82 85       	ldd	r24, Z+10	; 0x0a
     2b2:	88 0f       	add	r24, r24
     2b4:	81 60       	ori	r24, 0x01	; 1
     2b6:	0e 94 96 04 	call	0x92c	; 0x92c <i2c_start>
     2ba:	88 23       	and	r24, r24
     2bc:	b9 f2       	breq	.-82     	; 0x26c <_ZN17Adafruit_MLX906146read16Eh+0x8e>
     2be:	b8 cf       	rjmp	.-144    	; 0x230 <_ZN17Adafruit_MLX906146read16Eh+0x52>

  uint8_t pec = Wire.read();

  return ret;
}
     2c0:	c9 01       	movw	r24, r18
     2c2:	cf 91       	pop	r28
     2c4:	1f 91       	pop	r17
     2c6:	0f 91       	pop	r16
     2c8:	08 95       	ret

000002ca <_ZN17Adafruit_MLX906148readTempEh>:
  return readTemp(MLX90614_TA);
}

float Adafruit_MLX90614::readTemp(uint8_t reg) {
  float temp;
  temp = read16(reg);
     2ca:	0e 94 ef 00 	call	0x1de	; 0x1de <_ZN17Adafruit_MLX906146read16Eh>
     2ce:	bc 01       	movw	r22, r24
     2d0:	80 e0       	ldi	r24, 0x00	; 0
     2d2:	90 e0       	ldi	r25, 0x00	; 0
     2d4:	0e 94 73 06 	call	0xce6	; 0xce6 <__floatunsisf>
  temp *= .02;
     2d8:	2a e0       	ldi	r18, 0x0A	; 10
     2da:	37 ed       	ldi	r19, 0xD7	; 215
     2dc:	43 ea       	ldi	r20, 0xA3	; 163
     2de:	5c e3       	ldi	r21, 0x3C	; 60
     2e0:	0e 94 2a 07 	call	0xe54	; 0xe54 <__mulsf3>
  temp  -= 273.15;
     2e4:	23 e3       	ldi	r18, 0x33	; 51
     2e6:	33 e9       	ldi	r19, 0x93	; 147
     2e8:	48 e8       	ldi	r20, 0x88	; 136
     2ea:	53 e4       	ldi	r21, 0x43	; 67
     2ec:	0e 94 5e 05 	call	0xabc	; 0xabc <__subsf3>
  return temp;
}
     2f0:	08 95       	ret

000002f2 <_ZN17Adafruit_MLX9061415readObjectTempCEv>:
  _addr = i2caddr;
}
//////////////////////////////////////////////////////

double Adafruit_MLX90614::readObjectTempC(void) {
  return readTemp(MLX90614_TOBJ1);
     2f2:	67 e0       	ldi	r22, 0x07	; 7
     2f4:	0e 94 65 01 	call	0x2ca	; 0x2ca <_ZN17Adafruit_MLX906148readTempEh>
}
     2f8:	08 95       	ret

000002fa <_ZN17Adafruit_MLX9061416readAmbientTempCEv>:


double Adafruit_MLX90614::readAmbientTempC(void) {
  return readTemp(MLX90614_TA);
     2fa:	66 e0       	ldi	r22, 0x06	; 6
     2fc:	0e 94 65 01 	call	0x2ca	; 0x2ca <_ZN17Adafruit_MLX906148readTempEh>
}
     300:	08 95       	ret

00000302 <_ZN7HC_SR044initEv>:
// Anything over 400/500 cm (23200/29410 us pulse) is "out of range"
const unsigned long MAX_DIST = 23200;
  
void HC_SR04::init() {
  // The Trigger pin will tell the sensor to range find
  DDRD = 0x20;
     302:	80 e2       	ldi	r24, 0x20	; 32
     304:	8a b9       	out	0x0a, r24	; 10
  PORTD = 0x00;
     306:	1b b8       	out	0x0b, r1	; 11
  clr_pin(PORTD, TRIG_PIN);  
     308:	5d 98       	cbi	0x0b, 5	; 11
     30a:	08 95       	ret

0000030c <_ZN7HC_SR044readEv>:
}
uint8_t HC_SR04::read(){
     30c:	cf 92       	push	r12
     30e:	df 92       	push	r13
     310:	ef 92       	push	r14
     312:	ff 92       	push	r15
     314:	0f 93       	push	r16
     316:	1f 93       	push	r17
     318:	cf 93       	push	r28
     31a:	8c 01       	movw	r16, r24
	float t1;
	float t2;
	float pulse_width;
	
	//set_micro(0);
	clr_pin(PORTD, TRIG_PIN);
     31c:	5d 98       	cbi	0x0b, 5	; 11
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     31e:	8a e0       	ldi	r24, 0x0A	; 10
     320:	8a 95       	dec	r24
     322:	f1 f7       	brne	.-4      	; 0x320 <_ZN7HC_SR044readEv+0x14>
     324:	00 c0       	rjmp	.+0      	; 0x326 <_ZN7HC_SR044readEv+0x1a>
	_delay_us(2);
	// Hold the trigger pin high for at least 10 us
	set_pin(PORTD, TRIG_PIN);
     326:	5d 9a       	sbi	0x0b, 5	; 11
     328:	ea e6       	ldi	r30, 0x6A	; 106
     32a:	ea 95       	dec	r30
     32c:	f1 f7       	brne	.-4      	; 0x32a <_ZN7HC_SR044readEv+0x1e>
     32e:	00 c0       	rjmp	.+0      	; 0x330 <_ZN7HC_SR044readEv+0x24>
	_delay_us(20);
	clr_pin(PORTD, TRIG_PIN);
     330:	5d 98       	cbi	0x0b, 5	; 11
	
	// Wait for pulse on echo pin
	while ((PIND & _BV(ECHO_PIN)) == 0 );
     332:	4e 9b       	sbis	0x09, 6	; 9
     334:	fe cf       	rjmp	.-4      	; 0x332 <_ZN7HC_SR044readEv+0x26>
	// Measure how long the echo pin was held high (pulse width)
	// Note: the micros() counter will overflow after ~70 min
	TCNT1 = 0;
     336:	e4 e8       	ldi	r30, 0x84	; 132
     338:	f0 e0       	ldi	r31, 0x00	; 0
     33a:	11 82       	std	Z+1, r1	; 0x01
     33c:	10 82       	st	Z, r1
	t1 = TCNT1 ;
     33e:	60 81       	ld	r22, Z
     340:	71 81       	ldd	r23, Z+1	; 0x01
     342:	80 e0       	ldi	r24, 0x00	; 0
     344:	90 e0       	ldi	r25, 0x00	; 0
     346:	0e 94 73 06 	call	0xce6	; 0xce6 <__floatunsisf>
     34a:	6b 01       	movw	r12, r22
     34c:	7c 01       	movw	r14, r24
	cli();
     34e:	f8 94       	cli

	while ((PIND & _BV(ECHO_PIN)) != 0);
     350:	99 b1       	in	r25, 0x09	; 9
     352:	c9 2f       	mov	r28, r25
     354:	c0 74       	andi	r28, 0x40	; 64
     356:	96 fd       	sbrc	r25, 6
     358:	fb cf       	rjmp	.-10     	; 0x350 <_ZN7HC_SR044readEv+0x44>
	sei();
     35a:	78 94       	sei
	t2 = TCNT1 ;
     35c:	40 91 84 00 	lds	r20, 0x0084
     360:	50 91 85 00 	lds	r21, 0x0085
     364:	ba 01       	movw	r22, r20
     366:	80 e0       	ldi	r24, 0x00	; 0
     368:	90 e0       	ldi	r25, 0x00	; 0
     36a:	0e 94 73 06 	call	0xce6	; 0xce6 <__floatunsisf>
	
	pulse_width = (t2 - t1)* 0.5;
     36e:	a7 01       	movw	r20, r14
     370:	96 01       	movw	r18, r12
     372:	0e 94 5e 05 	call	0xabc	; 0xabc <__subsf3>
     376:	20 e0       	ldi	r18, 0x00	; 0
     378:	30 e0       	ldi	r19, 0x00	; 0
     37a:	40 e0       	ldi	r20, 0x00	; 0
     37c:	5f e3       	ldi	r21, 0x3F	; 63
     37e:	0e 94 2a 07 	call	0xe54	; 0xe54 <__mulsf3>
     382:	6b 01       	movw	r12, r22
     384:	7c 01       	movw	r14, r24
	
	if ( pulse_width > MAX_DIST ) {
     386:	20 e0       	ldi	r18, 0x00	; 0
     388:	30 e4       	ldi	r19, 0x40	; 64
     38a:	45 eb       	ldi	r20, 0xB5	; 181
     38c:	56 e4       	ldi	r21, 0x46	; 70
     38e:	0e 94 25 07 	call	0xe4a	; 0xe4a <__gesf2>
     392:	18 16       	cp	r1, r24
     394:	74 f0       	brlt	.+28     	; 0x3b2 <_ZN7HC_SR044readEv+0xa6>
			return 1;
	}
	// Calculate distance in centimeters and inches. The constants
	// are found in the data-sheet, and calculated from the assumed speed 
	//of sound in air at sea level (~340 m/s).
	cm = pulse_width/ 58;
     396:	20 e0       	ldi	r18, 0x00	; 0
     398:	30 e0       	ldi	r19, 0x00	; 0
     39a:	48 e6       	ldi	r20, 0x68	; 104
     39c:	52 e4       	ldi	r21, 0x42	; 66
     39e:	c7 01       	movw	r24, r14
     3a0:	b6 01       	movw	r22, r12
     3a2:	0e 94 cb 05 	call	0xb96	; 0xb96 <__divsf3>
	Distance = cm;
     3a6:	f8 01       	movw	r30, r16
     3a8:	60 83       	st	Z, r22
     3aa:	71 83       	std	Z+1, r23	; 0x01
     3ac:	82 83       	std	Z+2, r24	; 0x02
     3ae:	93 83       	std	Z+3, r25	; 0x03
	return 0;
     3b0:	01 c0       	rjmp	.+2      	; 0x3b4 <_ZN7HC_SR044readEv+0xa8>
	pulse_width = (t2 - t1)* 0.5;
	
	if ( pulse_width > MAX_DIST ) {
		
			pulse_width =8888;
			return 1;
     3b2:	c1 e0       	ldi	r28, 0x01	; 1
	// are found in the data-sheet, and calculated from the assumed speed 
	//of sound in air at sea level (~340 m/s).
	cm = pulse_width/ 58;
	Distance = cm;
	return 0;
}
     3b4:	8c 2f       	mov	r24, r28
     3b6:	cf 91       	pop	r28
     3b8:	1f 91       	pop	r17
     3ba:	0f 91       	pop	r16
     3bc:	ff 90       	pop	r15
     3be:	ef 90       	pop	r14
     3c0:	df 90       	pop	r13
     3c2:	cf 90       	pop	r12
     3c4:	08 95       	ret

000003c6 <__vector_14>:

HC_SR04 Sonic;
VL53L0X TOF;
volatile unsigned long int count = 0; 
ISR(TIMER0_COMPA_vect)
{
     3c6:	1f 92       	push	r1
     3c8:	0f 92       	push	r0
     3ca:	0f b6       	in	r0, 0x3f	; 63
     3cc:	0f 92       	push	r0
     3ce:	11 24       	eor	r1, r1
     3d0:	8f 93       	push	r24
     3d2:	9f 93       	push	r25
     3d4:	af 93       	push	r26
     3d6:	bf 93       	push	r27
	count++;
     3d8:	80 91 94 01 	lds	r24, 0x0194
     3dc:	90 91 95 01 	lds	r25, 0x0195
     3e0:	a0 91 96 01 	lds	r26, 0x0196
     3e4:	b0 91 97 01 	lds	r27, 0x0197
     3e8:	01 96       	adiw	r24, 0x01	; 1
     3ea:	a1 1d       	adc	r26, r1
     3ec:	b1 1d       	adc	r27, r1
     3ee:	80 93 94 01 	sts	0x0194, r24
     3f2:	90 93 95 01 	sts	0x0195, r25
     3f6:	a0 93 96 01 	sts	0x0196, r26
     3fa:	b0 93 97 01 	sts	0x0197, r27
}
     3fe:	bf 91       	pop	r27
     400:	af 91       	pop	r26
     402:	9f 91       	pop	r25
     404:	8f 91       	pop	r24
     406:	0f 90       	pop	r0
     408:	0f be       	out	0x3f, r0	; 63
     40a:	0f 90       	pop	r0
     40c:	1f 90       	pop	r1
     40e:	18 95       	reti

00000410 <__vector_13>:

ISR(TIMER1_OVF_vect){
     410:	1f 92       	push	r1
     412:	0f 92       	push	r0
     414:	0f b6       	in	r0, 0x3f	; 63
     416:	0f 92       	push	r0
     418:	11 24       	eor	r1, r1
	//PORTB ^= _BV(PORTB5);
	//TIFR1 = 0;
}
     41a:	0f 90       	pop	r0
     41c:	0f be       	out	0x3f, r0	; 63
     41e:	0f 90       	pop	r0
     420:	1f 90       	pop	r1
     422:	18 95       	reti

00000424 <_Z5setupv>:
	return count;
}
/*********************************************************************/
void setup(void)
{		
	cli();
     424:	f8 94       	cli
	#endif // _DEBUG
	
	//DDRB |= _BV(PORTB5);
	//PORTB &= ~_BV(PORTB5);
	
	TCNT0 = 0;
     426:	16 bc       	out	0x26, r1	; 38
	TCNT1 = 0;
     428:	10 92 85 00 	sts	0x0085, r1
     42c:	10 92 84 00 	sts	0x0084, r1
	TCCR0A |= (1<<WGM01);
     430:	84 b5       	in	r24, 0x24	; 36
     432:	82 60       	ori	r24, 0x02	; 2
     434:	84 bd       	out	0x24, r24	; 36
	OCR0A = 249;
     436:	89 ef       	ldi	r24, 0xF9	; 249
     438:	87 bd       	out	0x27, r24	; 39
	TIMSK0 |= (1 << OCIE0A);
     43a:	ee e6       	ldi	r30, 0x6E	; 110
     43c:	f0 e0       	ldi	r31, 0x00	; 0
     43e:	80 81       	ld	r24, Z
     440:	82 60       	ori	r24, 0x02	; 2
     442:	80 83       	st	Z, r24
	TIMSK1 |= _BV(TOIE1);
     444:	ef e6       	ldi	r30, 0x6F	; 111
     446:	f0 e0       	ldi	r31, 0x00	; 0
     448:	80 81       	ld	r24, Z
     44a:	81 60       	ori	r24, 0x01	; 1
     44c:	80 83       	st	Z, r24
	TCCR0B |= (1<<CS01) | (1<<CS00);
     44e:	85 b5       	in	r24, 0x25	; 37
     450:	83 60       	ori	r24, 0x03	; 3
     452:	85 bd       	out	0x25, r24	; 37
	TCCR1B |= (1<<CS11);
     454:	e1 e8       	ldi	r30, 0x81	; 129
     456:	f0 e0       	ldi	r31, 0x00	; 0
     458:	80 81       	ld	r24, Z
     45a:	82 60       	ori	r24, 0x02	; 2
     45c:	80 83       	st	Z, r24
	sei();
     45e:	78 94       	sei
	Serial.init(9600);
     460:	60 e8       	ldi	r22, 0x80	; 128
     462:	75 e2       	ldi	r23, 0x25	; 37
     464:	88 ed       	ldi	r24, 0xD8	; 216
     466:	91 e0       	ldi	r25, 0x01	; 1
     468:	0e 94 e9 04 	call	0x9d2	; 0x9d2 <_ZN5USART4initEi>
	Sonic.init();
     46c:	84 ea       	ldi	r24, 0xA4	; 164
     46e:	91 e0       	ldi	r25, 0x01	; 1
     470:	0e 94 81 01 	call	0x302	; 0x302 <_ZN7HC_SR044initEv>
     474:	08 95       	ret

00000476 <_Z13IR_sensorReadv>:
	 	Serial.sendln("> TOF...");
	 	#endif // _DEBUG
}
/*********************************************************************/
void IR_sensorRead(void )
{
     476:	2f 92       	push	r2
     478:	3f 92       	push	r3
     47a:	4f 92       	push	r4
     47c:	5f 92       	push	r5
     47e:	6f 92       	push	r6
     480:	7f 92       	push	r7
     482:	8f 92       	push	r8
     484:	9f 92       	push	r9
     486:	af 92       	push	r10
     488:	bf 92       	push	r11
     48a:	cf 92       	push	r12
     48c:	df 92       	push	r13
     48e:	ef 92       	push	r14
     490:	ff 92       	push	r15
     492:	0f 93       	push	r16
     494:	1f 93       	push	r17
     496:	cf 93       	push	r28
     498:	df 93       	push	r29
     49a:	cd b7       	in	r28, 0x3d	; 61
     49c:	de b7       	in	r29, 0x3e	; 62
     49e:	c7 58       	subi	r28, 0x87	; 135
     4a0:	d2 40       	sbci	r29, 0x02	; 2
     4a2:	0f b6       	in	r0, 0x3f	; 63
     4a4:	f8 94       	cli
     4a6:	de bf       	out	0x3e, r29	; 62
     4a8:	0f be       	out	0x3f, r0	; 63
     4aa:	cd bf       	out	0x3d, r28	; 61
	char str[125], str_out[500] = {""};
     4ac:	19 82       	std	Y+1, r1	; 0x01
     4ae:	1a 82       	std	Y+2, r1	; 0x02
     4b0:	1b 82       	std	Y+3, r1	; 0x03
     4b2:	1c 82       	std	Y+4, r1	; 0x04
     4b4:	fe 01       	movw	r30, r28
     4b6:	35 96       	adiw	r30, 0x05	; 5
     4b8:	80 ef       	ldi	r24, 0xF0	; 240
     4ba:	91 e0       	ldi	r25, 0x01	; 1
     4bc:	df 01       	movw	r26, r30
     4be:	9c 01       	movw	r18, r24
     4c0:	1d 92       	st	X+, r1
     4c2:	21 50       	subi	r18, 0x01	; 1
     4c4:	30 40       	sbci	r19, 0x00	; 0
     4c6:	e1 f7       	brne	.-8      	; 0x4c0 <_Z13IR_sensorReadv+0x4a>
	double obj_1,obj_2,obj_3,obj_4,amb_1,amb_2,amb_3,amb_4,mDistance = 0;
	unsigned long int m_read_time = 0;

 	Sonic.read();
     4c8:	84 ea       	ldi	r24, 0xA4	; 164
     4ca:	91 e0       	ldi	r25, 0x01	; 1
     4cc:	0e 94 86 01 	call	0x30c	; 0x30c <_ZN7HC_SR044readEv>
	//TIFR1 = 0;
}
/*********************************************************************/
unsigned long int millis(void)
{
	return count;
     4d0:	c0 90 94 01 	lds	r12, 0x0194
     4d4:	d0 90 95 01 	lds	r13, 0x0195
     4d8:	e0 90 96 01 	lds	r14, 0x0196
     4dc:	f0 90 97 01 	lds	r15, 0x0197
// 	//Read 0x5A
 	m_read_time = millis();	
	#ifdef _DEBUG
		Serial.sendln("> Read 0x5A");
	#endif
	amb_1 = MLX_5a.readAmbientTempC();
     4e0:	8d ec       	ldi	r24, 0xCD	; 205
     4e2:	91 e0       	ldi	r25, 0x01	; 1
     4e4:	0e 94 7d 01 	call	0x2fa	; 0x2fa <_ZN17Adafruit_MLX9061416readAmbientTempCEv>
     4e8:	56 2e       	mov	r5, r22
     4ea:	47 2e       	mov	r4, r23
     4ec:	38 2e       	mov	r3, r24
     4ee:	29 2e       	mov	r2, r25
 	obj_1 = MLX_5a.readObjectTempC();
     4f0:	8d ec       	ldi	r24, 0xCD	; 205
     4f2:	91 e0       	ldi	r25, 0x01	; 1
     4f4:	0e 94 79 01 	call	0x2f2	; 0x2f2 <_ZN17Adafruit_MLX9061415readObjectTempCEv>
     4f8:	16 2f       	mov	r17, r22
     4fa:	07 2f       	mov	r16, r23
     4fc:	b8 2e       	mov	r11, r24
     4fe:	a9 2e       	mov	r10, r25

	#ifdef _DEBUG
		Serial.sendln("> Read 0x5B");
	#endif
// 	//Read 0x5B	
 	amb_2 = MLX_5b.readAmbientTempC();
     500:	82 ec       	ldi	r24, 0xC2	; 194
     502:	91 e0       	ldi	r25, 0x01	; 1
     504:	0e 94 7d 01 	call	0x2fa	; 0x2fa <_ZN17Adafruit_MLX9061416readAmbientTempCEv>
     508:	ce 58       	subi	r28, 0x8E	; 142
     50a:	dd 4f       	sbci	r29, 0xFD	; 253
     50c:	68 83       	st	Y, r22
     50e:	c2 57       	subi	r28, 0x72	; 114
     510:	d2 40       	sbci	r29, 0x02	; 2
     512:	cd 58       	subi	r28, 0x8D	; 141
     514:	dd 4f       	sbci	r29, 0xFD	; 253
     516:	78 83       	st	Y, r23
     518:	c3 57       	subi	r28, 0x73	; 115
     51a:	d2 40       	sbci	r29, 0x02	; 2
     51c:	cc 58       	subi	r28, 0x8C	; 140
     51e:	dd 4f       	sbci	r29, 0xFD	; 253
     520:	88 83       	st	Y, r24
     522:	c4 57       	subi	r28, 0x74	; 116
     524:	d2 40       	sbci	r29, 0x02	; 2
     526:	cb 58       	subi	r28, 0x8B	; 139
     528:	dd 4f       	sbci	r29, 0xFD	; 253
     52a:	98 83       	st	Y, r25
     52c:	c5 57       	subi	r28, 0x75	; 117
     52e:	d2 40       	sbci	r29, 0x02	; 2
	obj_2 = MLX_5b.readObjectTempC();
     530:	82 ec       	ldi	r24, 0xC2	; 194
     532:	91 e0       	ldi	r25, 0x01	; 1
     534:	0e 94 79 01 	call	0x2f2	; 0x2f2 <_ZN17Adafruit_MLX9061415readObjectTempCEv>
     538:	ca 58       	subi	r28, 0x8A	; 138
     53a:	dd 4f       	sbci	r29, 0xFD	; 253
     53c:	68 83       	st	Y, r22
     53e:	c6 57       	subi	r28, 0x76	; 118
     540:	d2 40       	sbci	r29, 0x02	; 2
     542:	c9 58       	subi	r28, 0x89	; 137
     544:	dd 4f       	sbci	r29, 0xFD	; 253
     546:	78 83       	st	Y, r23
     548:	c7 57       	subi	r28, 0x77	; 119
     54a:	d2 40       	sbci	r29, 0x02	; 2
     54c:	c8 58       	subi	r28, 0x88	; 136
     54e:	dd 4f       	sbci	r29, 0xFD	; 253
     550:	88 83       	st	Y, r24
     552:	c8 57       	subi	r28, 0x78	; 120
     554:	d2 40       	sbci	r29, 0x02	; 2
     556:	c7 58       	subi	r28, 0x87	; 135
     558:	dd 4f       	sbci	r29, 0xFD	; 253
     55a:	98 83       	st	Y, r25
     55c:	c9 57       	subi	r28, 0x79	; 121
     55e:	d2 40       	sbci	r29, 0x02	; 2
// 
	#ifdef _DEBUG
	Serial.sendln("> Read 0x5C");
	#endif
// 	//Read 0x5C	
	amb_3 = MLX_5c.readAmbientTempC();
     560:	87 eb       	ldi	r24, 0xB7	; 183
     562:	91 e0       	ldi	r25, 0x01	; 1
     564:	0e 94 7d 01 	call	0x2fa	; 0x2fa <_ZN17Adafruit_MLX9061416readAmbientTempCEv>
     568:	c6 58       	subi	r28, 0x86	; 134
     56a:	dd 4f       	sbci	r29, 0xFD	; 253
     56c:	68 83       	st	Y, r22
     56e:	ca 57       	subi	r28, 0x7A	; 122
     570:	d2 40       	sbci	r29, 0x02	; 2
     572:	c5 58       	subi	r28, 0x85	; 133
     574:	dd 4f       	sbci	r29, 0xFD	; 253
     576:	78 83       	st	Y, r23
     578:	cb 57       	subi	r28, 0x7B	; 123
     57a:	d2 40       	sbci	r29, 0x02	; 2
     57c:	c4 58       	subi	r28, 0x84	; 132
     57e:	dd 4f       	sbci	r29, 0xFD	; 253
     580:	88 83       	st	Y, r24
     582:	cc 57       	subi	r28, 0x7C	; 124
     584:	d2 40       	sbci	r29, 0x02	; 2
     586:	c3 58       	subi	r28, 0x83	; 131
     588:	dd 4f       	sbci	r29, 0xFD	; 253
     58a:	98 83       	st	Y, r25
     58c:	cd 57       	subi	r28, 0x7D	; 125
     58e:	d2 40       	sbci	r29, 0x02	; 2
 	obj_3 = MLX_5c.readObjectTempC();
     590:	87 eb       	ldi	r24, 0xB7	; 183
     592:	91 e0       	ldi	r25, 0x01	; 1
     594:	0e 94 79 01 	call	0x2f2	; 0x2f2 <_ZN17Adafruit_MLX9061415readObjectTempCEv>
     598:	c2 58       	subi	r28, 0x82	; 130
     59a:	dd 4f       	sbci	r29, 0xFD	; 253
     59c:	68 83       	st	Y, r22
     59e:	ce 57       	subi	r28, 0x7E	; 126
     5a0:	d2 40       	sbci	r29, 0x02	; 2
     5a2:	c1 58       	subi	r28, 0x81	; 129
     5a4:	dd 4f       	sbci	r29, 0xFD	; 253
     5a6:	78 83       	st	Y, r23
     5a8:	cf 57       	subi	r28, 0x7F	; 127
     5aa:	d2 40       	sbci	r29, 0x02	; 2
     5ac:	c0 58       	subi	r28, 0x80	; 128
     5ae:	dd 4f       	sbci	r29, 0xFD	; 253
     5b0:	88 83       	st	Y, r24
     5b2:	c0 58       	subi	r28, 0x80	; 128
     5b4:	d2 40       	sbci	r29, 0x02	; 2
     5b6:	cf 57       	subi	r28, 0x7F	; 127
     5b8:	dd 4f       	sbci	r29, 0xFD	; 253
     5ba:	98 83       	st	Y, r25
     5bc:	c1 58       	subi	r28, 0x81	; 129
     5be:	d2 40       	sbci	r29, 0x02	; 2
//
	#ifdef _DEBUG
	Serial.sendln("> Read 0x5C");
	#endif
// 	//Read 0x5D
	amb_4 = MLX_5d.readAmbientTempC();	
     5c0:	8c ea       	ldi	r24, 0xAC	; 172
     5c2:	91 e0       	ldi	r25, 0x01	; 1
     5c4:	0e 94 7d 01 	call	0x2fa	; 0x2fa <_ZN17Adafruit_MLX9061416readAmbientTempCEv>
     5c8:	ce 57       	subi	r28, 0x7E	; 126
     5ca:	dd 4f       	sbci	r29, 0xFD	; 253
     5cc:	68 83       	st	Y, r22
     5ce:	c2 58       	subi	r28, 0x82	; 130
     5d0:	d2 40       	sbci	r29, 0x02	; 2
     5d2:	cd 57       	subi	r28, 0x7D	; 125
     5d4:	dd 4f       	sbci	r29, 0xFD	; 253
     5d6:	78 83       	st	Y, r23
     5d8:	c3 58       	subi	r28, 0x83	; 131
     5da:	d2 40       	sbci	r29, 0x02	; 2
     5dc:	cc 57       	subi	r28, 0x7C	; 124
     5de:	dd 4f       	sbci	r29, 0xFD	; 253
     5e0:	88 83       	st	Y, r24
     5e2:	c4 58       	subi	r28, 0x84	; 132
     5e4:	d2 40       	sbci	r29, 0x02	; 2
     5e6:	cb 57       	subi	r28, 0x7B	; 123
     5e8:	dd 4f       	sbci	r29, 0xFD	; 253
     5ea:	98 83       	st	Y, r25
     5ec:	c5 58       	subi	r28, 0x85	; 133
     5ee:	d2 40       	sbci	r29, 0x02	; 2
	obj_4 = MLX_5d.readObjectTempC();
     5f0:	8c ea       	ldi	r24, 0xAC	; 172
     5f2:	91 e0       	ldi	r25, 0x01	; 1
     5f4:	0e 94 79 01 	call	0x2f2	; 0x2f2 <_ZN17Adafruit_MLX9061415readObjectTempCEv>
     5f8:	ca 57       	subi	r28, 0x7A	; 122
     5fa:	dd 4f       	sbci	r29, 0xFD	; 253
     5fc:	68 83       	st	Y, r22
     5fe:	c6 58       	subi	r28, 0x86	; 134
     600:	d2 40       	sbci	r29, 0x02	; 2
     602:	c9 57       	subi	r28, 0x79	; 121
     604:	dd 4f       	sbci	r29, 0xFD	; 253
     606:	78 83       	st	Y, r23
     608:	c7 58       	subi	r28, 0x87	; 135
     60a:	d2 40       	sbci	r29, 0x02	; 2
     60c:	78 2e       	mov	r7, r24
     60e:	69 2e       	mov	r6, r25
// 	
 	sprintf(str, "[{\"Sensor\":%d,\"Obj\":%0.1f,\"Amb\":%0.1f,\"Distance\":[%i,%.2f],\"uTime\":%lu}", 1, obj_1, amb_1, (int)Sonic.Distance,mDistance,m_read_time);
     610:	0f 2e       	mov	r0, r31
     612:	f4 ea       	ldi	r31, 0xA4	; 164
     614:	8f 2e       	mov	r8, r31
     616:	f1 e0       	ldi	r31, 0x01	; 1
     618:	9f 2e       	mov	r9, r31
     61a:	f0 2d       	mov	r31, r0
     61c:	d4 01       	movw	r26, r8
     61e:	6d 91       	ld	r22, X+
     620:	7d 91       	ld	r23, X+
     622:	8d 91       	ld	r24, X+
     624:	9c 91       	ld	r25, X
     626:	ff 92       	push	r15
     628:	ef 92       	push	r14
     62a:	df 92       	push	r13
     62c:	cf 92       	push	r12
     62e:	1f 92       	push	r1
     630:	1f 92       	push	r1
     632:	1f 92       	push	r1
     634:	1f 92       	push	r1
     636:	0e 94 3d 06 	call	0xc7a	; 0xc7a <__fixsfsi>
     63a:	7f 93       	push	r23
     63c:	6f 93       	push	r22
     63e:	2f 92       	push	r2
     640:	3f 92       	push	r3
     642:	4f 92       	push	r4
     644:	5f 92       	push	r5
     646:	af 92       	push	r10
     648:	bf 92       	push	r11
     64a:	0f 93       	push	r16
     64c:	1f 93       	push	r17
     64e:	1f 92       	push	r1
     650:	81 e0       	ldi	r24, 0x01	; 1
     652:	8f 93       	push	r24
     654:	80 e0       	ldi	r24, 0x00	; 0
     656:	91 e0       	ldi	r25, 0x01	; 1
     658:	9f 93       	push	r25
     65a:	8f 93       	push	r24
     65c:	8e 01       	movw	r16, r28
     65e:	0b 50       	subi	r16, 0x0B	; 11
     660:	1e 4f       	sbci	r17, 0xFE	; 254
     662:	1f 93       	push	r17
     664:	0f 93       	push	r16
     666:	0e 94 a3 0c 	call	0x1946	; 0x1946 <sprintf>
   	strcat(str_out,str);
     66a:	b8 01       	movw	r22, r16
     66c:	ce 01       	movw	r24, r28
     66e:	01 96       	adiw	r24, 0x01	; 1
     670:	0e 94 55 0c 	call	0x18aa	; 0x18aa <strcat>
		
	sprintf(str, "{\"Sensor\":%d,\"Obj\":%0.1f,\"Amb\":%0.1f,\"Distance\":[%i,%.2f],\"uTime\":%lu}", 2, obj_2, amb_2, (int)Sonic.Distance,mDistance,m_read_time);
     674:	f4 01       	movw	r30, r8
     676:	60 81       	ld	r22, Z
     678:	71 81       	ldd	r23, Z+1	; 0x01
     67a:	82 81       	ldd	r24, Z+2	; 0x02
     67c:	93 81       	ldd	r25, Z+3	; 0x03
     67e:	ff 92       	push	r15
     680:	ef 92       	push	r14
     682:	df 92       	push	r13
     684:	cf 92       	push	r12
     686:	1f 92       	push	r1
     688:	1f 92       	push	r1
     68a:	1f 92       	push	r1
     68c:	1f 92       	push	r1
     68e:	0e 94 3d 06 	call	0xc7a	; 0xc7a <__fixsfsi>
     692:	7f 93       	push	r23
     694:	6f 93       	push	r22
     696:	cb 58       	subi	r28, 0x8B	; 139
     698:	dd 4f       	sbci	r29, 0xFD	; 253
     69a:	f8 81       	ld	r31, Y
     69c:	c5 57       	subi	r28, 0x75	; 117
     69e:	d2 40       	sbci	r29, 0x02	; 2
     6a0:	ff 93       	push	r31
     6a2:	cc 58       	subi	r28, 0x8C	; 140
     6a4:	dd 4f       	sbci	r29, 0xFD	; 253
     6a6:	28 81       	ld	r18, Y
     6a8:	c4 57       	subi	r28, 0x74	; 116
     6aa:	d2 40       	sbci	r29, 0x02	; 2
     6ac:	2f 93       	push	r18
     6ae:	cd 58       	subi	r28, 0x8D	; 141
     6b0:	dd 4f       	sbci	r29, 0xFD	; 253
     6b2:	38 81       	ld	r19, Y
     6b4:	c3 57       	subi	r28, 0x73	; 115
     6b6:	d2 40       	sbci	r29, 0x02	; 2
     6b8:	3f 93       	push	r19
     6ba:	ce 58       	subi	r28, 0x8E	; 142
     6bc:	dd 4f       	sbci	r29, 0xFD	; 253
     6be:	88 81       	ld	r24, Y
     6c0:	c2 57       	subi	r28, 0x72	; 114
     6c2:	d2 40       	sbci	r29, 0x02	; 2
     6c4:	8f 93       	push	r24
     6c6:	c7 58       	subi	r28, 0x87	; 135
     6c8:	dd 4f       	sbci	r29, 0xFD	; 253
     6ca:	98 81       	ld	r25, Y
     6cc:	c9 57       	subi	r28, 0x79	; 121
     6ce:	d2 40       	sbci	r29, 0x02	; 2
     6d0:	9f 93       	push	r25
     6d2:	c8 58       	subi	r28, 0x88	; 136
     6d4:	dd 4f       	sbci	r29, 0xFD	; 253
     6d6:	a8 81       	ld	r26, Y
     6d8:	c8 57       	subi	r28, 0x78	; 120
     6da:	d2 40       	sbci	r29, 0x02	; 2
     6dc:	af 93       	push	r26
     6de:	c9 58       	subi	r28, 0x89	; 137
     6e0:	dd 4f       	sbci	r29, 0xFD	; 253
     6e2:	b8 81       	ld	r27, Y
     6e4:	c7 57       	subi	r28, 0x77	; 119
     6e6:	d2 40       	sbci	r29, 0x02	; 2
     6e8:	bf 93       	push	r27
     6ea:	ca 58       	subi	r28, 0x8A	; 138
     6ec:	dd 4f       	sbci	r29, 0xFD	; 253
     6ee:	e8 81       	ld	r30, Y
     6f0:	c6 57       	subi	r28, 0x76	; 118
     6f2:	d2 40       	sbci	r29, 0x02	; 2
     6f4:	ef 93       	push	r30
     6f6:	1f 92       	push	r1
     6f8:	82 e0       	ldi	r24, 0x02	; 2
     6fa:	8f 93       	push	r24
     6fc:	0f 2e       	mov	r0, r31
     6fe:	f1 e0       	ldi	r31, 0x01	; 1
     700:	af 2e       	mov	r10, r31
     702:	f1 e0       	ldi	r31, 0x01	; 1
     704:	bf 2e       	mov	r11, r31
     706:	f0 2d       	mov	r31, r0
     708:	bf 92       	push	r11
     70a:	af 92       	push	r10
     70c:	1f 93       	push	r17
     70e:	0f 93       	push	r16
     710:	0e 94 a3 0c 	call	0x1946	; 0x1946 <sprintf>
	strcat(str_out,str);
     714:	0f b6       	in	r0, 0x3f	; 63
     716:	f8 94       	cli
     718:	de bf       	out	0x3e, r29	; 62
     71a:	0f be       	out	0x3f, r0	; 63
     71c:	cd bf       	out	0x3d, r28	; 61
     71e:	b8 01       	movw	r22, r16
     720:	ce 01       	movw	r24, r28
     722:	01 96       	adiw	r24, 0x01	; 1
     724:	0e 94 55 0c 	call	0x18aa	; 0x18aa <strcat>

	sprintf(str, "{\"Sensor\":%d,\"Obj\":%0.1f,\"Amb\":%0.1f,\"Distance\":[%i,%.2f],\"uTime\":%lu}", 3, obj_3, amb_3, (int)Sonic.Distance,mDistance,m_read_time);
     728:	d4 01       	movw	r26, r8
     72a:	6d 91       	ld	r22, X+
     72c:	7d 91       	ld	r23, X+
     72e:	8d 91       	ld	r24, X+
     730:	9c 91       	ld	r25, X
     732:	ff 92       	push	r15
     734:	ef 92       	push	r14
     736:	df 92       	push	r13
     738:	cf 92       	push	r12
     73a:	1f 92       	push	r1
     73c:	1f 92       	push	r1
     73e:	1f 92       	push	r1
     740:	1f 92       	push	r1
     742:	0e 94 3d 06 	call	0xc7a	; 0xc7a <__fixsfsi>
     746:	7f 93       	push	r23
     748:	6f 93       	push	r22
     74a:	c3 58       	subi	r28, 0x83	; 131
     74c:	dd 4f       	sbci	r29, 0xFD	; 253
     74e:	b8 81       	ld	r27, Y
     750:	cd 57       	subi	r28, 0x7D	; 125
     752:	d2 40       	sbci	r29, 0x02	; 2
     754:	bf 93       	push	r27
     756:	c4 58       	subi	r28, 0x84	; 132
     758:	dd 4f       	sbci	r29, 0xFD	; 253
     75a:	e8 81       	ld	r30, Y
     75c:	cc 57       	subi	r28, 0x7C	; 124
     75e:	d2 40       	sbci	r29, 0x02	; 2
     760:	ef 93       	push	r30
     762:	c5 58       	subi	r28, 0x85	; 133
     764:	dd 4f       	sbci	r29, 0xFD	; 253
     766:	f8 81       	ld	r31, Y
     768:	cb 57       	subi	r28, 0x7B	; 123
     76a:	d2 40       	sbci	r29, 0x02	; 2
     76c:	ff 93       	push	r31
     76e:	c6 58       	subi	r28, 0x86	; 134
     770:	dd 4f       	sbci	r29, 0xFD	; 253
     772:	28 81       	ld	r18, Y
     774:	ca 57       	subi	r28, 0x7A	; 122
     776:	d2 40       	sbci	r29, 0x02	; 2
     778:	2f 93       	push	r18
     77a:	cf 57       	subi	r28, 0x7F	; 127
     77c:	dd 4f       	sbci	r29, 0xFD	; 253
     77e:	38 81       	ld	r19, Y
     780:	c1 58       	subi	r28, 0x81	; 129
     782:	d2 40       	sbci	r29, 0x02	; 2
     784:	3f 93       	push	r19
     786:	c0 58       	subi	r28, 0x80	; 128
     788:	dd 4f       	sbci	r29, 0xFD	; 253
     78a:	88 81       	ld	r24, Y
     78c:	c0 58       	subi	r28, 0x80	; 128
     78e:	d2 40       	sbci	r29, 0x02	; 2
     790:	8f 93       	push	r24
     792:	c1 58       	subi	r28, 0x81	; 129
     794:	dd 4f       	sbci	r29, 0xFD	; 253
     796:	98 81       	ld	r25, Y
     798:	cf 57       	subi	r28, 0x7F	; 127
     79a:	d2 40       	sbci	r29, 0x02	; 2
     79c:	9f 93       	push	r25
     79e:	c2 58       	subi	r28, 0x82	; 130
     7a0:	dd 4f       	sbci	r29, 0xFD	; 253
     7a2:	a8 81       	ld	r26, Y
     7a4:	ce 57       	subi	r28, 0x7E	; 126
     7a6:	d2 40       	sbci	r29, 0x02	; 2
     7a8:	af 93       	push	r26
     7aa:	1f 92       	push	r1
     7ac:	83 e0       	ldi	r24, 0x03	; 3
     7ae:	8f 93       	push	r24
     7b0:	bf 92       	push	r11
     7b2:	af 92       	push	r10
     7b4:	1f 93       	push	r17
     7b6:	0f 93       	push	r16
     7b8:	0e 94 a3 0c 	call	0x1946	; 0x1946 <sprintf>
	strcat(str_out,str);
     7bc:	b8 01       	movw	r22, r16
     7be:	ce 01       	movw	r24, r28
     7c0:	01 96       	adiw	r24, 0x01	; 1
     7c2:	0e 94 55 0c 	call	0x18aa	; 0x18aa <strcat>
//  	
	sprintf(str, "{\"Sensor\":%d,\"Obj\":%0.1f,\"Amb\":%0.1f,\"Distance\":[%i,%.2f],\"uTime\":%lu}]", 4, obj_4, amb_4, (int)Sonic.Distance,mDistance,m_read_time);
     7c6:	f4 01       	movw	r30, r8
     7c8:	60 81       	ld	r22, Z
     7ca:	71 81       	ldd	r23, Z+1	; 0x01
     7cc:	82 81       	ldd	r24, Z+2	; 0x02
     7ce:	93 81       	ldd	r25, Z+3	; 0x03
     7d0:	ff 92       	push	r15
     7d2:	ef 92       	push	r14
     7d4:	df 92       	push	r13
     7d6:	cf 92       	push	r12
     7d8:	1f 92       	push	r1
     7da:	1f 92       	push	r1
     7dc:	1f 92       	push	r1
     7de:	1f 92       	push	r1
     7e0:	0e 94 3d 06 	call	0xc7a	; 0xc7a <__fixsfsi>
     7e4:	7f 93       	push	r23
     7e6:	6f 93       	push	r22
     7e8:	cb 57       	subi	r28, 0x7B	; 123
     7ea:	dd 4f       	sbci	r29, 0xFD	; 253
     7ec:	f8 81       	ld	r31, Y
     7ee:	c5 58       	subi	r28, 0x85	; 133
     7f0:	d2 40       	sbci	r29, 0x02	; 2
     7f2:	ff 93       	push	r31
     7f4:	cc 57       	subi	r28, 0x7C	; 124
     7f6:	dd 4f       	sbci	r29, 0xFD	; 253
     7f8:	28 81       	ld	r18, Y
     7fa:	c4 58       	subi	r28, 0x84	; 132
     7fc:	d2 40       	sbci	r29, 0x02	; 2
     7fe:	2f 93       	push	r18
     800:	cd 57       	subi	r28, 0x7D	; 125
     802:	dd 4f       	sbci	r29, 0xFD	; 253
     804:	38 81       	ld	r19, Y
     806:	c3 58       	subi	r28, 0x83	; 131
     808:	d2 40       	sbci	r29, 0x02	; 2
     80a:	3f 93       	push	r19
     80c:	ce 57       	subi	r28, 0x7E	; 126
     80e:	dd 4f       	sbci	r29, 0xFD	; 253
     810:	88 81       	ld	r24, Y
     812:	c2 58       	subi	r28, 0x82	; 130
     814:	d2 40       	sbci	r29, 0x02	; 2
     816:	8f 93       	push	r24
     818:	6f 92       	push	r6
     81a:	7f 92       	push	r7
     81c:	c9 57       	subi	r28, 0x79	; 121
     81e:	dd 4f       	sbci	r29, 0xFD	; 253
     820:	98 81       	ld	r25, Y
     822:	c7 58       	subi	r28, 0x87	; 135
     824:	d2 40       	sbci	r29, 0x02	; 2
     826:	9f 93       	push	r25
     828:	ca 57       	subi	r28, 0x7A	; 122
     82a:	dd 4f       	sbci	r29, 0xFD	; 253
     82c:	a8 81       	ld	r26, Y
     82e:	c6 58       	subi	r28, 0x86	; 134
     830:	d2 40       	sbci	r29, 0x02	; 2
     832:	af 93       	push	r26
     834:	1f 92       	push	r1
     836:	84 e0       	ldi	r24, 0x04	; 4
     838:	8f 93       	push	r24
     83a:	88 e4       	ldi	r24, 0x48	; 72
     83c:	91 e0       	ldi	r25, 0x01	; 1
     83e:	9f 93       	push	r25
     840:	8f 93       	push	r24
     842:	1f 93       	push	r17
     844:	0f 93       	push	r16
     846:	0e 94 a3 0c 	call	0x1946	; 0x1946 <sprintf>
	strcat(str_out,str);
     84a:	0f b6       	in	r0, 0x3f	; 63
     84c:	f8 94       	cli
     84e:	de bf       	out	0x3e, r29	; 62
     850:	0f be       	out	0x3f, r0	; 63
     852:	cd bf       	out	0x3d, r28	; 61
     854:	b8 01       	movw	r22, r16
     856:	ce 01       	movw	r24, r28
     858:	01 96       	adiw	r24, 0x01	; 1
     85a:	0e 94 55 0c 	call	0x18aa	; 0x18aa <strcat>
		//void send_int(int d);
		void send(double data, int base);
		//void send(uint32_t str);
			
		void sendln(void) {send("\r\n");};
		void sendln(const char* c) {send(c);send("\r\n");};
     85e:	be 01       	movw	r22, r28
     860:	6f 5f       	subi	r22, 0xFF	; 255
     862:	7f 4f       	sbci	r23, 0xFF	; 255
     864:	88 ed       	ldi	r24, 0xD8	; 216
     866:	91 e0       	ldi	r25, 0x01	; 1
     868:	0e 94 3b 05 	call	0xa76	; 0xa76 <_ZN5USART4sendEPKc>
     86c:	60 e9       	ldi	r22, 0x90	; 144
     86e:	71 e0       	ldi	r23, 0x01	; 1
     870:	88 ed       	ldi	r24, 0xD8	; 216
     872:	91 e0       	ldi	r25, 0x01	; 1
     874:	0e 94 3b 05 	call	0xa76	; 0xa76 <_ZN5USART4sendEPKc>
	
	Serial.sendln(str_out);

}
     878:	c9 57       	subi	r28, 0x79	; 121
     87a:	dd 4f       	sbci	r29, 0xFD	; 253
     87c:	0f b6       	in	r0, 0x3f	; 63
     87e:	f8 94       	cli
     880:	de bf       	out	0x3e, r29	; 62
     882:	0f be       	out	0x3f, r0	; 63
     884:	cd bf       	out	0x3d, r28	; 61
     886:	df 91       	pop	r29
     888:	cf 91       	pop	r28
     88a:	1f 91       	pop	r17
     88c:	0f 91       	pop	r16
     88e:	ff 90       	pop	r15
     890:	ef 90       	pop	r14
     892:	df 90       	pop	r13
     894:	cf 90       	pop	r12
     896:	bf 90       	pop	r11
     898:	af 90       	pop	r10
     89a:	9f 90       	pop	r9
     89c:	8f 90       	pop	r8
     89e:	7f 90       	pop	r7
     8a0:	6f 90       	pop	r6
     8a2:	5f 90       	pop	r5
     8a4:	4f 90       	pop	r4
     8a6:	3f 90       	pop	r3
     8a8:	2f 90       	pop	r2
     8aa:	08 95       	ret

000008ac <main>:
/*********************************************************************/
int main(void)
{	
	setup();
     8ac:	0e 94 12 02 	call	0x424	; 0x424 <_Z5setupv>
	//TIFR1 = 0;
}
/*********************************************************************/
unsigned long int millis(void)
{
	return count;
     8b0:	c0 90 94 01 	lds	r12, 0x0194
     8b4:	d0 90 95 01 	lds	r13, 0x0195
     8b8:	e0 90 96 01 	lds	r14, 0x0196
     8bc:	f0 90 97 01 	lds	r15, 0x0197
		unsigned long int start_time;
	    start_time = millis();	
		#ifdef _DEBUG
			Serial.sendln("> Read Sensors...");
		#endif
		IR_sensorRead();
     8c0:	0e 94 3b 02 	call	0x476	; 0x476 <_Z13IR_sensorReadv>
	//TIFR1 = 0;
}
/*********************************************************************/
unsigned long int millis(void)
{
	return count;
     8c4:	80 91 94 01 	lds	r24, 0x0194
     8c8:	90 91 95 01 	lds	r25, 0x0195
     8cc:	a0 91 96 01 	lds	r26, 0x0196
     8d0:	b0 91 97 01 	lds	r27, 0x0197
		#ifdef _DEBUG
			Serial.sendln("> Read Sensors...");
		#endif
		IR_sensorRead();
		//_delay_ms(250);
		while((millis()-start_time) <= 250);
     8d4:	8c 19       	sub	r24, r12
     8d6:	9d 09       	sbc	r25, r13
     8d8:	ae 09       	sbc	r26, r14
     8da:	bf 09       	sbc	r27, r15
     8dc:	8b 3f       	cpi	r24, 0xFB	; 251
     8de:	91 05       	cpc	r25, r1
     8e0:	a1 05       	cpc	r26, r1
     8e2:	b1 05       	cpc	r27, r1
     8e4:	78 f3       	brcs	.-34     	; 0x8c4 <main+0x18>
     8e6:	e4 cf       	rjmp	.-56     	; 0x8b0 <main+0x4>

000008e8 <_GLOBAL__sub_I_MLX_5a>:
#include "uart.h"
#include "Adafruit_MLX90614.h"
#include "HCSR04.h"
#include "VL53L0X.h"

Adafruit_MLX90614 MLX_5a(0x5A);
     8e8:	6a e5       	ldi	r22, 0x5A	; 90
     8ea:	8d ec       	ldi	r24, 0xCD	; 205
     8ec:	91 e0       	ldi	r25, 0x01	; 1
     8ee:	0e 94 e1 00 	call	0x1c2	; 0x1c2 <_ZN17Adafruit_MLX90614C1Eh>
Adafruit_MLX90614 MLX_5b(0x5B);
     8f2:	6b e5       	ldi	r22, 0x5B	; 91
     8f4:	82 ec       	ldi	r24, 0xC2	; 194
     8f6:	91 e0       	ldi	r25, 0x01	; 1
     8f8:	0e 94 e1 00 	call	0x1c2	; 0x1c2 <_ZN17Adafruit_MLX90614C1Eh>
Adafruit_MLX90614 MLX_5c(0x5C);
     8fc:	6c e5       	ldi	r22, 0x5C	; 92
     8fe:	87 eb       	ldi	r24, 0xB7	; 183
     900:	91 e0       	ldi	r25, 0x01	; 1
     902:	0e 94 e1 00 	call	0x1c2	; 0x1c2 <_ZN17Adafruit_MLX90614C1Eh>
Adafruit_MLX90614 MLX_5d(0x5D);
     906:	6d e5       	ldi	r22, 0x5D	; 93
     908:	8c ea       	ldi	r24, 0xAC	; 172
     90a:	91 e0       	ldi	r25, 0x01	; 1
     90c:	0e 94 e1 00 	call	0x1c2	; 0x1c2 <_ZN17Adafruit_MLX90614C1Eh>
//Adafruit_MLX90614 MLX_5e(0x5E);

HC_SR04 Sonic;
VL53L0X TOF;
     910:	88 e9       	ldi	r24, 0x98	; 152
     912:	91 e0       	ldi	r25, 0x01	; 1
     914:	0e 94 50 05 	call	0xaa0	; 0xaa0 <_ZN7VL53L0XC1Ev>
     918:	08 95       	ret

0000091a <i2c_init>:
 Initialization of the I2C bus interface. Need to be called only once
*************************************************************************/
void i2c_init(void)
{
  /* initialize TWI clock: 100 kHz clock, TWPS = 0 => prescaler = 1 */
  DDRC = 0;
     91a:	17 b8       	out	0x07, r1	; 7
  PORTC = (1 << PORTC4) | (1 << PORTC5);//enable pull up
     91c:	80 e3       	ldi	r24, 0x30	; 48
     91e:	88 b9       	out	0x08, r24	; 8
  TWSR = 0;                         /* no prescaler */
     920:	10 92 b9 00 	sts	0x00B9, r1
  TWBR = ((F_CPU/SCL_CLOCK)-16)/2;  /* must be > 10 for stable operation */
     924:	88 e4       	ldi	r24, 0x48	; 72
     926:	80 93 b8 00 	sts	0x00B8, r24
     92a:	08 95       	ret

0000092c <i2c_start>:
unsigned char i2c_start(unsigned char address)
{
    uint8_t   twst;

	// send START condition
	TWCR = (1<<TWINT) | (1<<TWSTA) | (1<<TWEN);
     92c:	94 ea       	ldi	r25, 0xA4	; 164
     92e:	90 93 bc 00 	sts	0x00BC, r25

	// wait until transmission completed
	while(!(TWCR & (1<<TWINT)));
     932:	ec eb       	ldi	r30, 0xBC	; 188
     934:	f0 e0       	ldi	r31, 0x00	; 0
     936:	90 81       	ld	r25, Z
     938:	99 23       	and	r25, r25
     93a:	ec f7       	brge	.-6      	; 0x936 <i2c_start+0xa>

	// check value of TWI Status Register. Mask prescaler bits.
	twst = TW_STATUS & 0xF8;
     93c:	90 91 b9 00 	lds	r25, 0x00B9
     940:	98 7f       	andi	r25, 0xF8	; 248
	if ( (twst != TW_START) && (twst != TW_REP_START)) return 1;
     942:	98 30       	cpi	r25, 0x08	; 8
     944:	11 f0       	breq	.+4      	; 0x94a <i2c_start+0x1e>
     946:	90 31       	cpi	r25, 0x10	; 16
     948:	a1 f4       	brne	.+40     	; 0x972 <i2c_start+0x46>

	// send device address
	TWDR = address;
     94a:	80 93 bb 00 	sts	0x00BB, r24
	TWCR = (1<<TWINT) | (1<<TWEN);
     94e:	84 e8       	ldi	r24, 0x84	; 132
     950:	80 93 bc 00 	sts	0x00BC, r24

	// wail until transmission completed and ACK/NACK has been received
	while(!(TWCR & (1<<TWINT)));
     954:	ec eb       	ldi	r30, 0xBC	; 188
     956:	f0 e0       	ldi	r31, 0x00	; 0
     958:	80 81       	ld	r24, Z
     95a:	88 23       	and	r24, r24
     95c:	ec f7       	brge	.-6      	; 0x958 <i2c_start+0x2c>

	// check value of TWI Status Register. Mask prescaler bits.
	twst = TW_STATUS & 0xF8;
     95e:	90 91 b9 00 	lds	r25, 0x00B9
     962:	98 7f       	andi	r25, 0xF8	; 248
	if ( (twst != TW_MT_SLA_ACK) && (twst != TW_MR_SLA_ACK) ) return 1;
     964:	98 31       	cpi	r25, 0x18	; 24
     966:	39 f0       	breq	.+14     	; 0x976 <i2c_start+0x4a>
     968:	81 e0       	ldi	r24, 0x01	; 1
     96a:	90 34       	cpi	r25, 0x40	; 64
     96c:	29 f4       	brne	.+10     	; 0x978 <i2c_start+0x4c>
     96e:	80 e0       	ldi	r24, 0x00	; 0
     970:	08 95       	ret
	// wait until transmission completed
	while(!(TWCR & (1<<TWINT)));

	// check value of TWI Status Register. Mask prescaler bits.
	twst = TW_STATUS & 0xF8;
	if ( (twst != TW_START) && (twst != TW_REP_START)) return 1;
     972:	81 e0       	ldi	r24, 0x01	; 1
     974:	08 95       	ret

	// check value of TWI Status Register. Mask prescaler bits.
	twst = TW_STATUS & 0xF8;
	if ( (twst != TW_MT_SLA_ACK) && (twst != TW_MR_SLA_ACK) ) return 1;

	return 0;
     976:	80 e0       	ldi	r24, 0x00	; 0

}/* i2c_start */
     978:	08 95       	ret

0000097a <i2c_stop>:
 Terminates the data transfer and releases the I2C bus
*************************************************************************/
void i2c_stop(void)
{
    /* send stop condition */
	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWSTO);
     97a:	84 e9       	ldi	r24, 0x94	; 148
     97c:	80 93 bc 00 	sts	0x00BC, r24
     980:	08 95       	ret

00000982 <i2c_write>:
unsigned char i2c_write( unsigned char data )
{	
    uint8_t   twst;
    
	// send data to the previously addressed device
	TWDR = data;
     982:	80 93 bb 00 	sts	0x00BB, r24
	TWCR = (1<<TWINT) | (1<<TWEN);
     986:	84 e8       	ldi	r24, 0x84	; 132
     988:	80 93 bc 00 	sts	0x00BC, r24

	// wait until transmission completed
	while(!(TWCR & (1<<TWINT)));
     98c:	ec eb       	ldi	r30, 0xBC	; 188
     98e:	f0 e0       	ldi	r31, 0x00	; 0
     990:	80 81       	ld	r24, Z
     992:	88 23       	and	r24, r24
     994:	ec f7       	brge	.-6      	; 0x990 <i2c_write+0xe>

	// check value of TWI Status Register. Mask prescaler bits
	twst = TW_STATUS & 0xF8;
     996:	90 91 b9 00 	lds	r25, 0x00B9
     99a:	98 7f       	andi	r25, 0xF8	; 248
	if( twst != TW_MT_DATA_ACK) return 1;
     99c:	81 e0       	ldi	r24, 0x01	; 1
     99e:	98 32       	cpi	r25, 0x28	; 40
     9a0:	09 f4       	brne	.+2      	; 0x9a4 <i2c_write+0x22>
     9a2:	80 e0       	ldi	r24, 0x00	; 0
	return 0;

}/* i2c_write */
     9a4:	08 95       	ret

000009a6 <i2c_readAck>:
 
 Return:  byte read from I2C device
*************************************************************************/
unsigned char i2c_readAck(void)
{
	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWEA);
     9a6:	84 ec       	ldi	r24, 0xC4	; 196
     9a8:	80 93 bc 00 	sts	0x00BC, r24
	while(!(TWCR & (1<<TWINT)));    
     9ac:	ec eb       	ldi	r30, 0xBC	; 188
     9ae:	f0 e0       	ldi	r31, 0x00	; 0
     9b0:	80 81       	ld	r24, Z
     9b2:	88 23       	and	r24, r24
     9b4:	ec f7       	brge	.-6      	; 0x9b0 <i2c_readAck+0xa>
    return TWDR;
     9b6:	80 91 bb 00 	lds	r24, 0x00BB
}/* i2c_readAck */
     9ba:	08 95       	ret

000009bc <i2c_readNak>:
 
 Return:  byte read from I2C device
*************************************************************************/
unsigned char i2c_readNak(void)
{
	TWCR = (1<<TWINT) | (1<<TWEN);
     9bc:	84 e8       	ldi	r24, 0x84	; 132
     9be:	80 93 bc 00 	sts	0x00BC, r24
	while(!(TWCR & (1<<TWINT)));
     9c2:	ec eb       	ldi	r30, 0xBC	; 188
     9c4:	f0 e0       	ldi	r31, 0x00	; 0
     9c6:	80 81       	ld	r24, Z
     9c8:	88 23       	and	r24, r24
     9ca:	ec f7       	brge	.-6      	; 0x9c6 <i2c_readNak+0xa>
    return TWDR;
     9cc:	80 91 bb 00 	lds	r24, 0x00BB
}/* i2c_readNak */
     9d0:	08 95       	ret

000009d2 <_ZN5USART4initEi>:
USART Serial; //Initialize new instance of the serial class
//Setup Baud rate in header file
//set to 8 bits, no stop bit, no parity

/*********************************************************************/
void USART::init(int BAUDRATE){
     9d2:	0f 93       	push	r16
     9d4:	1f 93       	push	r17
	UBRR0H = (uint8_t)(BAUD_PRESCALLER>>8);
     9d6:	8b 01       	movw	r16, r22
     9d8:	77 0f       	add	r23, r23
     9da:	22 0b       	sbc	r18, r18
     9dc:	33 0b       	sbc	r19, r19
     9de:	d9 01       	movw	r26, r18
     9e0:	c8 01       	movw	r24, r16
     9e2:	80 58       	subi	r24, 0x80	; 128
     9e4:	9b 47       	sbci	r25, 0x7B	; 123
     9e6:	a1 4e       	sbci	r26, 0xE1	; 225
     9e8:	bf 4f       	sbci	r27, 0xFF	; 255
     9ea:	88 0f       	add	r24, r24
     9ec:	99 1f       	adc	r25, r25
     9ee:	aa 1f       	adc	r26, r26
     9f0:	bb 1f       	adc	r27, r27
     9f2:	88 0f       	add	r24, r24
     9f4:	99 1f       	adc	r25, r25
     9f6:	aa 1f       	adc	r26, r26
     9f8:	bb 1f       	adc	r27, r27
     9fa:	bc 01       	movw	r22, r24
     9fc:	cd 01       	movw	r24, r26
     9fe:	66 0f       	add	r22, r22
     a00:	77 1f       	adc	r23, r23
     a02:	88 1f       	adc	r24, r24
     a04:	99 1f       	adc	r25, r25
     a06:	00 0f       	add	r16, r16
     a08:	11 1f       	adc	r17, r17
     a0a:	22 1f       	adc	r18, r18
     a0c:	33 1f       	adc	r19, r19
     a0e:	00 0f       	add	r16, r16
     a10:	11 1f       	adc	r17, r17
     a12:	22 1f       	adc	r18, r18
     a14:	33 1f       	adc	r19, r19
     a16:	a9 01       	movw	r20, r18
     a18:	98 01       	movw	r18, r16
     a1a:	22 0f       	add	r18, r18
     a1c:	33 1f       	adc	r19, r19
     a1e:	44 1f       	adc	r20, r20
     a20:	55 1f       	adc	r21, r21
     a22:	22 0f       	add	r18, r18
     a24:	33 1f       	adc	r19, r19
     a26:	44 1f       	adc	r20, r20
     a28:	55 1f       	adc	r21, r21
     a2a:	0e 94 13 0b 	call	0x1626	; 0x1626 <__udivmodsi4>
     a2e:	da 01       	movw	r26, r20
     a30:	c9 01       	movw	r24, r18
     a32:	01 97       	sbiw	r24, 0x01	; 1
     a34:	a1 09       	sbc	r26, r1
     a36:	b1 09       	sbc	r27, r1
     a38:	89 2f       	mov	r24, r25
     a3a:	9a 2f       	mov	r25, r26
     a3c:	ab 2f       	mov	r26, r27
     a3e:	bb 27       	eor	r27, r27
     a40:	80 93 c5 00 	sts	0x00C5, r24
	UBRR0L = (uint8_t)(BAUD_PRESCALLER);
     a44:	21 50       	subi	r18, 0x01	; 1
     a46:	20 93 c4 00 	sts	0x00C4, r18
	UCSR0B = (1<<RXEN0)|(1<<TXEN0);
     a4a:	e1 ec       	ldi	r30, 0xC1	; 193
     a4c:	f0 e0       	ldi	r31, 0x00	; 0
     a4e:	88 e1       	ldi	r24, 0x18	; 24
     a50:	80 83       	st	Z, r24
	UCSR0C = (1<<UCSZ00)|(1<<UCSZ01);
     a52:	86 e0       	ldi	r24, 0x06	; 6
     a54:	80 93 c2 00 	sts	0x00C2, r24

	UCSR0B |= (1 << RXCIE0); // Enable the USART Receive Complete interrupt (USART_RXC)
     a58:	80 81       	ld	r24, Z
     a5a:	80 68       	ori	r24, 0x80	; 128
     a5c:	80 83       	st	Z, r24
	sei();
     a5e:	78 94       	sei
}
     a60:	1f 91       	pop	r17
     a62:	0f 91       	pop	r16
     a64:	08 95       	ret

00000a66 <_ZN5USART4sendEh>:
 return UDR0;// read buffer
}
/*********************************************************************/
void USART::send(uint8_t data){

	while(!(UCSR0A & (1<<UDRE0))); //wait until buffer is empty
     a66:	e0 ec       	ldi	r30, 0xC0	; 192
     a68:	f0 e0       	ldi	r31, 0x00	; 0
     a6a:	80 81       	ld	r24, Z
     a6c:	85 ff       	sbrs	r24, 5
     a6e:	fd cf       	rjmp	.-6      	; 0xa6a <_ZN5USART4sendEh+0x4>
	UDR0 = data; //Load data into buffer
     a70:	60 93 c6 00 	sts	0x00C6, r22
     a74:	08 95       	ret

00000a76 <_ZN5USART4sendEPKc>:
}
/*********************************************************************/
//send one char at a time
void USART::send(const char* StringPtr)
{
     a76:	0f 93       	push	r16
     a78:	1f 93       	push	r17
     a7a:	cf 93       	push	r28
     a7c:	df 93       	push	r29
     a7e:	eb 01       	movw	r28, r22
	//st = millis();
	while(*StringPtr != 0x00)
     a80:	68 81       	ld	r22, Y
     a82:	66 23       	and	r22, r22
     a84:	41 f0       	breq	.+16     	; 0xa96 <_ZN5USART4sendEPKc+0x20>
     a86:	8c 01       	movw	r16, r24
     a88:	21 96       	adiw	r28, 0x01	; 1
		void init(int BAUDRATE = 9600); 
		bool available(void);
		unsigned char read(void);
		bool flush(void);
		void send(uint8_t data);
		void send(char data) {send((uint8_t)data); };
     a8a:	c8 01       	movw	r24, r16
     a8c:	0e 94 33 05 	call	0xa66	; 0xa66 <_ZN5USART4sendEh>
     a90:	69 91       	ld	r22, Y+
     a92:	61 11       	cpse	r22, r1
     a94:	fa cf       	rjmp	.-12     	; 0xa8a <_ZN5USART4sendEPKc+0x14>
	{
		send(*StringPtr++);
	}
	//ft = millis();
}
     a96:	df 91       	pop	r29
     a98:	cf 91       	pop	r28
     a9a:	1f 91       	pop	r17
     a9c:	0f 91       	pop	r16
     a9e:	08 95       	ret

00000aa0 <_ZN7VL53L0XC1Ev>:
// PLL_period_ps = 1655; macro_period_vclks = 2304
#define calcMacroPeriod(vcsel_period_pclks) ((((uint32_t)2304 * (vcsel_period_pclks) * 1655) + 500) / 1000)

// Constructors ////////////////////////////////////////////////////////////////

VL53L0X::VL53L0X(void)
     aa0:	fc 01       	movw	r30, r24
  : address(ADDRESS_DEFAULT)
  , io_timeout(0) // no timeout
  , did_timeout(false)
     aa2:	89 e2       	ldi	r24, 0x29	; 41
     aa4:	81 83       	std	Z+1, r24	; 0x01
     aa6:	13 82       	std	Z+3, r1	; 0x03
     aa8:	12 82       	std	Z+2, r1	; 0x02
     aaa:	14 82       	std	Z+4, r1	; 0x04
     aac:	08 95       	ret

00000aae <_GLOBAL__sub_I_Wire>:
	  }
 class I2c
 {
 public:
    I2c()
    {
     aae:	e0 ee       	ldi	r30, 0xE0	; 224
     ab0:	f1 e0       	ldi	r31, 0x01	; 1
     ab2:	10 86       	std	Z+8, r1	; 0x08
     ab4:	11 86       	std	Z+9, r1	; 0x09
	    i2c_init();
     ab6:	0e 94 8d 04 	call	0x91a	; 0x91a <i2c_init>
     aba:	08 95       	ret

00000abc <__subsf3>:
     abc:	50 58       	subi	r21, 0x80	; 128

00000abe <__addsf3>:
     abe:	bb 27       	eor	r27, r27
     ac0:	aa 27       	eor	r26, r26
     ac2:	0e 94 76 05 	call	0xaec	; 0xaec <__addsf3x>
     ac6:	0c 94 eb 06 	jmp	0xdd6	; 0xdd6 <__fp_round>
     aca:	0e 94 dd 06 	call	0xdba	; 0xdba <__fp_pscA>
     ace:	38 f0       	brcs	.+14     	; 0xade <__addsf3+0x20>
     ad0:	0e 94 e4 06 	call	0xdc8	; 0xdc8 <__fp_pscB>
     ad4:	20 f0       	brcs	.+8      	; 0xade <__addsf3+0x20>
     ad6:	39 f4       	brne	.+14     	; 0xae6 <__addsf3+0x28>
     ad8:	9f 3f       	cpi	r25, 0xFF	; 255
     ada:	19 f4       	brne	.+6      	; 0xae2 <__addsf3+0x24>
     adc:	26 f4       	brtc	.+8      	; 0xae6 <__addsf3+0x28>
     ade:	0c 94 da 06 	jmp	0xdb4	; 0xdb4 <__fp_nan>
     ae2:	0e f4       	brtc	.+2      	; 0xae6 <__addsf3+0x28>
     ae4:	e0 95       	com	r30
     ae6:	e7 fb       	bst	r30, 7
     ae8:	0c 94 d4 06 	jmp	0xda8	; 0xda8 <__fp_inf>

00000aec <__addsf3x>:
     aec:	e9 2f       	mov	r30, r25
     aee:	0e 94 fc 06 	call	0xdf8	; 0xdf8 <__fp_split3>
     af2:	58 f3       	brcs	.-42     	; 0xaca <__addsf3+0xc>
     af4:	ba 17       	cp	r27, r26
     af6:	62 07       	cpc	r22, r18
     af8:	73 07       	cpc	r23, r19
     afa:	84 07       	cpc	r24, r20
     afc:	95 07       	cpc	r25, r21
     afe:	20 f0       	brcs	.+8      	; 0xb08 <__addsf3x+0x1c>
     b00:	79 f4       	brne	.+30     	; 0xb20 <__addsf3x+0x34>
     b02:	a6 f5       	brtc	.+104    	; 0xb6c <__addsf3x+0x80>
     b04:	0c 94 1e 07 	jmp	0xe3c	; 0xe3c <__fp_zero>
     b08:	0e f4       	brtc	.+2      	; 0xb0c <__addsf3x+0x20>
     b0a:	e0 95       	com	r30
     b0c:	0b 2e       	mov	r0, r27
     b0e:	ba 2f       	mov	r27, r26
     b10:	a0 2d       	mov	r26, r0
     b12:	0b 01       	movw	r0, r22
     b14:	b9 01       	movw	r22, r18
     b16:	90 01       	movw	r18, r0
     b18:	0c 01       	movw	r0, r24
     b1a:	ca 01       	movw	r24, r20
     b1c:	a0 01       	movw	r20, r0
     b1e:	11 24       	eor	r1, r1
     b20:	ff 27       	eor	r31, r31
     b22:	59 1b       	sub	r21, r25
     b24:	99 f0       	breq	.+38     	; 0xb4c <__addsf3x+0x60>
     b26:	59 3f       	cpi	r21, 0xF9	; 249
     b28:	50 f4       	brcc	.+20     	; 0xb3e <__addsf3x+0x52>
     b2a:	50 3e       	cpi	r21, 0xE0	; 224
     b2c:	68 f1       	brcs	.+90     	; 0xb88 <__addsf3x+0x9c>
     b2e:	1a 16       	cp	r1, r26
     b30:	f0 40       	sbci	r31, 0x00	; 0
     b32:	a2 2f       	mov	r26, r18
     b34:	23 2f       	mov	r18, r19
     b36:	34 2f       	mov	r19, r20
     b38:	44 27       	eor	r20, r20
     b3a:	58 5f       	subi	r21, 0xF8	; 248
     b3c:	f3 cf       	rjmp	.-26     	; 0xb24 <__addsf3x+0x38>
     b3e:	46 95       	lsr	r20
     b40:	37 95       	ror	r19
     b42:	27 95       	ror	r18
     b44:	a7 95       	ror	r26
     b46:	f0 40       	sbci	r31, 0x00	; 0
     b48:	53 95       	inc	r21
     b4a:	c9 f7       	brne	.-14     	; 0xb3e <__addsf3x+0x52>
     b4c:	7e f4       	brtc	.+30     	; 0xb6c <__addsf3x+0x80>
     b4e:	1f 16       	cp	r1, r31
     b50:	ba 0b       	sbc	r27, r26
     b52:	62 0b       	sbc	r22, r18
     b54:	73 0b       	sbc	r23, r19
     b56:	84 0b       	sbc	r24, r20
     b58:	ba f0       	brmi	.+46     	; 0xb88 <__addsf3x+0x9c>
     b5a:	91 50       	subi	r25, 0x01	; 1
     b5c:	a1 f0       	breq	.+40     	; 0xb86 <__addsf3x+0x9a>
     b5e:	ff 0f       	add	r31, r31
     b60:	bb 1f       	adc	r27, r27
     b62:	66 1f       	adc	r22, r22
     b64:	77 1f       	adc	r23, r23
     b66:	88 1f       	adc	r24, r24
     b68:	c2 f7       	brpl	.-16     	; 0xb5a <__addsf3x+0x6e>
     b6a:	0e c0       	rjmp	.+28     	; 0xb88 <__addsf3x+0x9c>
     b6c:	ba 0f       	add	r27, r26
     b6e:	62 1f       	adc	r22, r18
     b70:	73 1f       	adc	r23, r19
     b72:	84 1f       	adc	r24, r20
     b74:	48 f4       	brcc	.+18     	; 0xb88 <__addsf3x+0x9c>
     b76:	87 95       	ror	r24
     b78:	77 95       	ror	r23
     b7a:	67 95       	ror	r22
     b7c:	b7 95       	ror	r27
     b7e:	f7 95       	ror	r31
     b80:	9e 3f       	cpi	r25, 0xFE	; 254
     b82:	08 f0       	brcs	.+2      	; 0xb86 <__addsf3x+0x9a>
     b84:	b0 cf       	rjmp	.-160    	; 0xae6 <__addsf3+0x28>
     b86:	93 95       	inc	r25
     b88:	88 0f       	add	r24, r24
     b8a:	08 f0       	brcs	.+2      	; 0xb8e <__addsf3x+0xa2>
     b8c:	99 27       	eor	r25, r25
     b8e:	ee 0f       	add	r30, r30
     b90:	97 95       	ror	r25
     b92:	87 95       	ror	r24
     b94:	08 95       	ret

00000b96 <__divsf3>:
     b96:	0e 94 df 05 	call	0xbbe	; 0xbbe <__divsf3x>
     b9a:	0c 94 eb 06 	jmp	0xdd6	; 0xdd6 <__fp_round>
     b9e:	0e 94 e4 06 	call	0xdc8	; 0xdc8 <__fp_pscB>
     ba2:	58 f0       	brcs	.+22     	; 0xbba <__divsf3+0x24>
     ba4:	0e 94 dd 06 	call	0xdba	; 0xdba <__fp_pscA>
     ba8:	40 f0       	brcs	.+16     	; 0xbba <__divsf3+0x24>
     baa:	29 f4       	brne	.+10     	; 0xbb6 <__divsf3+0x20>
     bac:	5f 3f       	cpi	r21, 0xFF	; 255
     bae:	29 f0       	breq	.+10     	; 0xbba <__divsf3+0x24>
     bb0:	0c 94 d4 06 	jmp	0xda8	; 0xda8 <__fp_inf>
     bb4:	51 11       	cpse	r21, r1
     bb6:	0c 94 1f 07 	jmp	0xe3e	; 0xe3e <__fp_szero>
     bba:	0c 94 da 06 	jmp	0xdb4	; 0xdb4 <__fp_nan>

00000bbe <__divsf3x>:
     bbe:	0e 94 fc 06 	call	0xdf8	; 0xdf8 <__fp_split3>
     bc2:	68 f3       	brcs	.-38     	; 0xb9e <__divsf3+0x8>

00000bc4 <__divsf3_pse>:
     bc4:	99 23       	and	r25, r25
     bc6:	b1 f3       	breq	.-20     	; 0xbb4 <__divsf3+0x1e>
     bc8:	55 23       	and	r21, r21
     bca:	91 f3       	breq	.-28     	; 0xbb0 <__divsf3+0x1a>
     bcc:	95 1b       	sub	r25, r21
     bce:	55 0b       	sbc	r21, r21
     bd0:	bb 27       	eor	r27, r27
     bd2:	aa 27       	eor	r26, r26
     bd4:	62 17       	cp	r22, r18
     bd6:	73 07       	cpc	r23, r19
     bd8:	84 07       	cpc	r24, r20
     bda:	38 f0       	brcs	.+14     	; 0xbea <__divsf3_pse+0x26>
     bdc:	9f 5f       	subi	r25, 0xFF	; 255
     bde:	5f 4f       	sbci	r21, 0xFF	; 255
     be0:	22 0f       	add	r18, r18
     be2:	33 1f       	adc	r19, r19
     be4:	44 1f       	adc	r20, r20
     be6:	aa 1f       	adc	r26, r26
     be8:	a9 f3       	breq	.-22     	; 0xbd4 <__divsf3_pse+0x10>
     bea:	35 d0       	rcall	.+106    	; 0xc56 <__divsf3_pse+0x92>
     bec:	0e 2e       	mov	r0, r30
     bee:	3a f0       	brmi	.+14     	; 0xbfe <__divsf3_pse+0x3a>
     bf0:	e0 e8       	ldi	r30, 0x80	; 128
     bf2:	32 d0       	rcall	.+100    	; 0xc58 <__divsf3_pse+0x94>
     bf4:	91 50       	subi	r25, 0x01	; 1
     bf6:	50 40       	sbci	r21, 0x00	; 0
     bf8:	e6 95       	lsr	r30
     bfa:	00 1c       	adc	r0, r0
     bfc:	ca f7       	brpl	.-14     	; 0xbf0 <__divsf3_pse+0x2c>
     bfe:	2b d0       	rcall	.+86     	; 0xc56 <__divsf3_pse+0x92>
     c00:	fe 2f       	mov	r31, r30
     c02:	29 d0       	rcall	.+82     	; 0xc56 <__divsf3_pse+0x92>
     c04:	66 0f       	add	r22, r22
     c06:	77 1f       	adc	r23, r23
     c08:	88 1f       	adc	r24, r24
     c0a:	bb 1f       	adc	r27, r27
     c0c:	26 17       	cp	r18, r22
     c0e:	37 07       	cpc	r19, r23
     c10:	48 07       	cpc	r20, r24
     c12:	ab 07       	cpc	r26, r27
     c14:	b0 e8       	ldi	r27, 0x80	; 128
     c16:	09 f0       	breq	.+2      	; 0xc1a <__divsf3_pse+0x56>
     c18:	bb 0b       	sbc	r27, r27
     c1a:	80 2d       	mov	r24, r0
     c1c:	bf 01       	movw	r22, r30
     c1e:	ff 27       	eor	r31, r31
     c20:	93 58       	subi	r25, 0x83	; 131
     c22:	5f 4f       	sbci	r21, 0xFF	; 255
     c24:	3a f0       	brmi	.+14     	; 0xc34 <__divsf3_pse+0x70>
     c26:	9e 3f       	cpi	r25, 0xFE	; 254
     c28:	51 05       	cpc	r21, r1
     c2a:	78 f0       	brcs	.+30     	; 0xc4a <__divsf3_pse+0x86>
     c2c:	0c 94 d4 06 	jmp	0xda8	; 0xda8 <__fp_inf>
     c30:	0c 94 1f 07 	jmp	0xe3e	; 0xe3e <__fp_szero>
     c34:	5f 3f       	cpi	r21, 0xFF	; 255
     c36:	e4 f3       	brlt	.-8      	; 0xc30 <__divsf3_pse+0x6c>
     c38:	98 3e       	cpi	r25, 0xE8	; 232
     c3a:	d4 f3       	brlt	.-12     	; 0xc30 <__divsf3_pse+0x6c>
     c3c:	86 95       	lsr	r24
     c3e:	77 95       	ror	r23
     c40:	67 95       	ror	r22
     c42:	b7 95       	ror	r27
     c44:	f7 95       	ror	r31
     c46:	9f 5f       	subi	r25, 0xFF	; 255
     c48:	c9 f7       	brne	.-14     	; 0xc3c <__divsf3_pse+0x78>
     c4a:	88 0f       	add	r24, r24
     c4c:	91 1d       	adc	r25, r1
     c4e:	96 95       	lsr	r25
     c50:	87 95       	ror	r24
     c52:	97 f9       	bld	r25, 7
     c54:	08 95       	ret
     c56:	e1 e0       	ldi	r30, 0x01	; 1
     c58:	66 0f       	add	r22, r22
     c5a:	77 1f       	adc	r23, r23
     c5c:	88 1f       	adc	r24, r24
     c5e:	bb 1f       	adc	r27, r27
     c60:	62 17       	cp	r22, r18
     c62:	73 07       	cpc	r23, r19
     c64:	84 07       	cpc	r24, r20
     c66:	ba 07       	cpc	r27, r26
     c68:	20 f0       	brcs	.+8      	; 0xc72 <__divsf3_pse+0xae>
     c6a:	62 1b       	sub	r22, r18
     c6c:	73 0b       	sbc	r23, r19
     c6e:	84 0b       	sbc	r24, r20
     c70:	ba 0b       	sbc	r27, r26
     c72:	ee 1f       	adc	r30, r30
     c74:	88 f7       	brcc	.-30     	; 0xc58 <__divsf3_pse+0x94>
     c76:	e0 95       	com	r30
     c78:	08 95       	ret

00000c7a <__fixsfsi>:
     c7a:	0e 94 44 06 	call	0xc88	; 0xc88 <__fixunssfsi>
     c7e:	68 94       	set
     c80:	b1 11       	cpse	r27, r1
     c82:	0c 94 1f 07 	jmp	0xe3e	; 0xe3e <__fp_szero>
     c86:	08 95       	ret

00000c88 <__fixunssfsi>:
     c88:	0e 94 04 07 	call	0xe08	; 0xe08 <__fp_splitA>
     c8c:	88 f0       	brcs	.+34     	; 0xcb0 <__fixunssfsi+0x28>
     c8e:	9f 57       	subi	r25, 0x7F	; 127
     c90:	98 f0       	brcs	.+38     	; 0xcb8 <__fixunssfsi+0x30>
     c92:	b9 2f       	mov	r27, r25
     c94:	99 27       	eor	r25, r25
     c96:	b7 51       	subi	r27, 0x17	; 23
     c98:	b0 f0       	brcs	.+44     	; 0xcc6 <__fixunssfsi+0x3e>
     c9a:	e1 f0       	breq	.+56     	; 0xcd4 <__fixunssfsi+0x4c>
     c9c:	66 0f       	add	r22, r22
     c9e:	77 1f       	adc	r23, r23
     ca0:	88 1f       	adc	r24, r24
     ca2:	99 1f       	adc	r25, r25
     ca4:	1a f0       	brmi	.+6      	; 0xcac <__fixunssfsi+0x24>
     ca6:	ba 95       	dec	r27
     ca8:	c9 f7       	brne	.-14     	; 0xc9c <__fixunssfsi+0x14>
     caa:	14 c0       	rjmp	.+40     	; 0xcd4 <__fixunssfsi+0x4c>
     cac:	b1 30       	cpi	r27, 0x01	; 1
     cae:	91 f0       	breq	.+36     	; 0xcd4 <__fixunssfsi+0x4c>
     cb0:	0e 94 1e 07 	call	0xe3c	; 0xe3c <__fp_zero>
     cb4:	b1 e0       	ldi	r27, 0x01	; 1
     cb6:	08 95       	ret
     cb8:	0c 94 1e 07 	jmp	0xe3c	; 0xe3c <__fp_zero>
     cbc:	67 2f       	mov	r22, r23
     cbe:	78 2f       	mov	r23, r24
     cc0:	88 27       	eor	r24, r24
     cc2:	b8 5f       	subi	r27, 0xF8	; 248
     cc4:	39 f0       	breq	.+14     	; 0xcd4 <__fixunssfsi+0x4c>
     cc6:	b9 3f       	cpi	r27, 0xF9	; 249
     cc8:	cc f3       	brlt	.-14     	; 0xcbc <__fixunssfsi+0x34>
     cca:	86 95       	lsr	r24
     ccc:	77 95       	ror	r23
     cce:	67 95       	ror	r22
     cd0:	b3 95       	inc	r27
     cd2:	d9 f7       	brne	.-10     	; 0xcca <__fixunssfsi+0x42>
     cd4:	3e f4       	brtc	.+14     	; 0xce4 <__fixunssfsi+0x5c>
     cd6:	90 95       	com	r25
     cd8:	80 95       	com	r24
     cda:	70 95       	com	r23
     cdc:	61 95       	neg	r22
     cde:	7f 4f       	sbci	r23, 0xFF	; 255
     ce0:	8f 4f       	sbci	r24, 0xFF	; 255
     ce2:	9f 4f       	sbci	r25, 0xFF	; 255
     ce4:	08 95       	ret

00000ce6 <__floatunsisf>:
     ce6:	e8 94       	clt
     ce8:	09 c0       	rjmp	.+18     	; 0xcfc <__floatsisf+0x12>

00000cea <__floatsisf>:
     cea:	97 fb       	bst	r25, 7
     cec:	3e f4       	brtc	.+14     	; 0xcfc <__floatsisf+0x12>
     cee:	90 95       	com	r25
     cf0:	80 95       	com	r24
     cf2:	70 95       	com	r23
     cf4:	61 95       	neg	r22
     cf6:	7f 4f       	sbci	r23, 0xFF	; 255
     cf8:	8f 4f       	sbci	r24, 0xFF	; 255
     cfa:	9f 4f       	sbci	r25, 0xFF	; 255
     cfc:	99 23       	and	r25, r25
     cfe:	a9 f0       	breq	.+42     	; 0xd2a <__floatsisf+0x40>
     d00:	f9 2f       	mov	r31, r25
     d02:	96 e9       	ldi	r25, 0x96	; 150
     d04:	bb 27       	eor	r27, r27
     d06:	93 95       	inc	r25
     d08:	f6 95       	lsr	r31
     d0a:	87 95       	ror	r24
     d0c:	77 95       	ror	r23
     d0e:	67 95       	ror	r22
     d10:	b7 95       	ror	r27
     d12:	f1 11       	cpse	r31, r1
     d14:	f8 cf       	rjmp	.-16     	; 0xd06 <__floatsisf+0x1c>
     d16:	fa f4       	brpl	.+62     	; 0xd56 <__floatsisf+0x6c>
     d18:	bb 0f       	add	r27, r27
     d1a:	11 f4       	brne	.+4      	; 0xd20 <__floatsisf+0x36>
     d1c:	60 ff       	sbrs	r22, 0
     d1e:	1b c0       	rjmp	.+54     	; 0xd56 <__floatsisf+0x6c>
     d20:	6f 5f       	subi	r22, 0xFF	; 255
     d22:	7f 4f       	sbci	r23, 0xFF	; 255
     d24:	8f 4f       	sbci	r24, 0xFF	; 255
     d26:	9f 4f       	sbci	r25, 0xFF	; 255
     d28:	16 c0       	rjmp	.+44     	; 0xd56 <__floatsisf+0x6c>
     d2a:	88 23       	and	r24, r24
     d2c:	11 f0       	breq	.+4      	; 0xd32 <__floatsisf+0x48>
     d2e:	96 e9       	ldi	r25, 0x96	; 150
     d30:	11 c0       	rjmp	.+34     	; 0xd54 <__floatsisf+0x6a>
     d32:	77 23       	and	r23, r23
     d34:	21 f0       	breq	.+8      	; 0xd3e <__floatsisf+0x54>
     d36:	9e e8       	ldi	r25, 0x8E	; 142
     d38:	87 2f       	mov	r24, r23
     d3a:	76 2f       	mov	r23, r22
     d3c:	05 c0       	rjmp	.+10     	; 0xd48 <__floatsisf+0x5e>
     d3e:	66 23       	and	r22, r22
     d40:	71 f0       	breq	.+28     	; 0xd5e <__floatsisf+0x74>
     d42:	96 e8       	ldi	r25, 0x86	; 134
     d44:	86 2f       	mov	r24, r22
     d46:	70 e0       	ldi	r23, 0x00	; 0
     d48:	60 e0       	ldi	r22, 0x00	; 0
     d4a:	2a f0       	brmi	.+10     	; 0xd56 <__floatsisf+0x6c>
     d4c:	9a 95       	dec	r25
     d4e:	66 0f       	add	r22, r22
     d50:	77 1f       	adc	r23, r23
     d52:	88 1f       	adc	r24, r24
     d54:	da f7       	brpl	.-10     	; 0xd4c <__floatsisf+0x62>
     d56:	88 0f       	add	r24, r24
     d58:	96 95       	lsr	r25
     d5a:	87 95       	ror	r24
     d5c:	97 f9       	bld	r25, 7
     d5e:	08 95       	ret

00000d60 <__fp_cmp>:
     d60:	99 0f       	add	r25, r25
     d62:	00 08       	sbc	r0, r0
     d64:	55 0f       	add	r21, r21
     d66:	aa 0b       	sbc	r26, r26
     d68:	e0 e8       	ldi	r30, 0x80	; 128
     d6a:	fe ef       	ldi	r31, 0xFE	; 254
     d6c:	16 16       	cp	r1, r22
     d6e:	17 06       	cpc	r1, r23
     d70:	e8 07       	cpc	r30, r24
     d72:	f9 07       	cpc	r31, r25
     d74:	c0 f0       	brcs	.+48     	; 0xda6 <__fp_cmp+0x46>
     d76:	12 16       	cp	r1, r18
     d78:	13 06       	cpc	r1, r19
     d7a:	e4 07       	cpc	r30, r20
     d7c:	f5 07       	cpc	r31, r21
     d7e:	98 f0       	brcs	.+38     	; 0xda6 <__fp_cmp+0x46>
     d80:	62 1b       	sub	r22, r18
     d82:	73 0b       	sbc	r23, r19
     d84:	84 0b       	sbc	r24, r20
     d86:	95 0b       	sbc	r25, r21
     d88:	39 f4       	brne	.+14     	; 0xd98 <__fp_cmp+0x38>
     d8a:	0a 26       	eor	r0, r26
     d8c:	61 f0       	breq	.+24     	; 0xda6 <__fp_cmp+0x46>
     d8e:	23 2b       	or	r18, r19
     d90:	24 2b       	or	r18, r20
     d92:	25 2b       	or	r18, r21
     d94:	21 f4       	brne	.+8      	; 0xd9e <__fp_cmp+0x3e>
     d96:	08 95       	ret
     d98:	0a 26       	eor	r0, r26
     d9a:	09 f4       	brne	.+2      	; 0xd9e <__fp_cmp+0x3e>
     d9c:	a1 40       	sbci	r26, 0x01	; 1
     d9e:	a6 95       	lsr	r26
     da0:	8f ef       	ldi	r24, 0xFF	; 255
     da2:	81 1d       	adc	r24, r1
     da4:	81 1d       	adc	r24, r1
     da6:	08 95       	ret

00000da8 <__fp_inf>:
     da8:	97 f9       	bld	r25, 7
     daa:	9f 67       	ori	r25, 0x7F	; 127
     dac:	80 e8       	ldi	r24, 0x80	; 128
     dae:	70 e0       	ldi	r23, 0x00	; 0
     db0:	60 e0       	ldi	r22, 0x00	; 0
     db2:	08 95       	ret

00000db4 <__fp_nan>:
     db4:	9f ef       	ldi	r25, 0xFF	; 255
     db6:	80 ec       	ldi	r24, 0xC0	; 192
     db8:	08 95       	ret

00000dba <__fp_pscA>:
     dba:	00 24       	eor	r0, r0
     dbc:	0a 94       	dec	r0
     dbe:	16 16       	cp	r1, r22
     dc0:	17 06       	cpc	r1, r23
     dc2:	18 06       	cpc	r1, r24
     dc4:	09 06       	cpc	r0, r25
     dc6:	08 95       	ret

00000dc8 <__fp_pscB>:
     dc8:	00 24       	eor	r0, r0
     dca:	0a 94       	dec	r0
     dcc:	12 16       	cp	r1, r18
     dce:	13 06       	cpc	r1, r19
     dd0:	14 06       	cpc	r1, r20
     dd2:	05 06       	cpc	r0, r21
     dd4:	08 95       	ret

00000dd6 <__fp_round>:
     dd6:	09 2e       	mov	r0, r25
     dd8:	03 94       	inc	r0
     dda:	00 0c       	add	r0, r0
     ddc:	11 f4       	brne	.+4      	; 0xde2 <__fp_round+0xc>
     dde:	88 23       	and	r24, r24
     de0:	52 f0       	brmi	.+20     	; 0xdf6 <__fp_round+0x20>
     de2:	bb 0f       	add	r27, r27
     de4:	40 f4       	brcc	.+16     	; 0xdf6 <__fp_round+0x20>
     de6:	bf 2b       	or	r27, r31
     de8:	11 f4       	brne	.+4      	; 0xdee <__fp_round+0x18>
     dea:	60 ff       	sbrs	r22, 0
     dec:	04 c0       	rjmp	.+8      	; 0xdf6 <__fp_round+0x20>
     dee:	6f 5f       	subi	r22, 0xFF	; 255
     df0:	7f 4f       	sbci	r23, 0xFF	; 255
     df2:	8f 4f       	sbci	r24, 0xFF	; 255
     df4:	9f 4f       	sbci	r25, 0xFF	; 255
     df6:	08 95       	ret

00000df8 <__fp_split3>:
     df8:	57 fd       	sbrc	r21, 7
     dfa:	90 58       	subi	r25, 0x80	; 128
     dfc:	44 0f       	add	r20, r20
     dfe:	55 1f       	adc	r21, r21
     e00:	59 f0       	breq	.+22     	; 0xe18 <__fp_splitA+0x10>
     e02:	5f 3f       	cpi	r21, 0xFF	; 255
     e04:	71 f0       	breq	.+28     	; 0xe22 <__fp_splitA+0x1a>
     e06:	47 95       	ror	r20

00000e08 <__fp_splitA>:
     e08:	88 0f       	add	r24, r24
     e0a:	97 fb       	bst	r25, 7
     e0c:	99 1f       	adc	r25, r25
     e0e:	61 f0       	breq	.+24     	; 0xe28 <__fp_splitA+0x20>
     e10:	9f 3f       	cpi	r25, 0xFF	; 255
     e12:	79 f0       	breq	.+30     	; 0xe32 <__fp_splitA+0x2a>
     e14:	87 95       	ror	r24
     e16:	08 95       	ret
     e18:	12 16       	cp	r1, r18
     e1a:	13 06       	cpc	r1, r19
     e1c:	14 06       	cpc	r1, r20
     e1e:	55 1f       	adc	r21, r21
     e20:	f2 cf       	rjmp	.-28     	; 0xe06 <__fp_split3+0xe>
     e22:	46 95       	lsr	r20
     e24:	f1 df       	rcall	.-30     	; 0xe08 <__fp_splitA>
     e26:	08 c0       	rjmp	.+16     	; 0xe38 <__fp_splitA+0x30>
     e28:	16 16       	cp	r1, r22
     e2a:	17 06       	cpc	r1, r23
     e2c:	18 06       	cpc	r1, r24
     e2e:	99 1f       	adc	r25, r25
     e30:	f1 cf       	rjmp	.-30     	; 0xe14 <__fp_splitA+0xc>
     e32:	86 95       	lsr	r24
     e34:	71 05       	cpc	r23, r1
     e36:	61 05       	cpc	r22, r1
     e38:	08 94       	sec
     e3a:	08 95       	ret

00000e3c <__fp_zero>:
     e3c:	e8 94       	clt

00000e3e <__fp_szero>:
     e3e:	bb 27       	eor	r27, r27
     e40:	66 27       	eor	r22, r22
     e42:	77 27       	eor	r23, r23
     e44:	cb 01       	movw	r24, r22
     e46:	97 f9       	bld	r25, 7
     e48:	08 95       	ret

00000e4a <__gesf2>:
     e4a:	0e 94 b0 06 	call	0xd60	; 0xd60 <__fp_cmp>
     e4e:	08 f4       	brcc	.+2      	; 0xe52 <__gesf2+0x8>
     e50:	8f ef       	ldi	r24, 0xFF	; 255
     e52:	08 95       	ret

00000e54 <__mulsf3>:
     e54:	0e 94 3d 07 	call	0xe7a	; 0xe7a <__mulsf3x>
     e58:	0c 94 eb 06 	jmp	0xdd6	; 0xdd6 <__fp_round>
     e5c:	0e 94 dd 06 	call	0xdba	; 0xdba <__fp_pscA>
     e60:	38 f0       	brcs	.+14     	; 0xe70 <__mulsf3+0x1c>
     e62:	0e 94 e4 06 	call	0xdc8	; 0xdc8 <__fp_pscB>
     e66:	20 f0       	brcs	.+8      	; 0xe70 <__mulsf3+0x1c>
     e68:	95 23       	and	r25, r21
     e6a:	11 f0       	breq	.+4      	; 0xe70 <__mulsf3+0x1c>
     e6c:	0c 94 d4 06 	jmp	0xda8	; 0xda8 <__fp_inf>
     e70:	0c 94 da 06 	jmp	0xdb4	; 0xdb4 <__fp_nan>
     e74:	11 24       	eor	r1, r1
     e76:	0c 94 1f 07 	jmp	0xe3e	; 0xe3e <__fp_szero>

00000e7a <__mulsf3x>:
     e7a:	0e 94 fc 06 	call	0xdf8	; 0xdf8 <__fp_split3>
     e7e:	70 f3       	brcs	.-36     	; 0xe5c <__mulsf3+0x8>

00000e80 <__mulsf3_pse>:
     e80:	95 9f       	mul	r25, r21
     e82:	c1 f3       	breq	.-16     	; 0xe74 <__mulsf3+0x20>
     e84:	95 0f       	add	r25, r21
     e86:	50 e0       	ldi	r21, 0x00	; 0
     e88:	55 1f       	adc	r21, r21
     e8a:	62 9f       	mul	r22, r18
     e8c:	f0 01       	movw	r30, r0
     e8e:	72 9f       	mul	r23, r18
     e90:	bb 27       	eor	r27, r27
     e92:	f0 0d       	add	r31, r0
     e94:	b1 1d       	adc	r27, r1
     e96:	63 9f       	mul	r22, r19
     e98:	aa 27       	eor	r26, r26
     e9a:	f0 0d       	add	r31, r0
     e9c:	b1 1d       	adc	r27, r1
     e9e:	aa 1f       	adc	r26, r26
     ea0:	64 9f       	mul	r22, r20
     ea2:	66 27       	eor	r22, r22
     ea4:	b0 0d       	add	r27, r0
     ea6:	a1 1d       	adc	r26, r1
     ea8:	66 1f       	adc	r22, r22
     eaa:	82 9f       	mul	r24, r18
     eac:	22 27       	eor	r18, r18
     eae:	b0 0d       	add	r27, r0
     eb0:	a1 1d       	adc	r26, r1
     eb2:	62 1f       	adc	r22, r18
     eb4:	73 9f       	mul	r23, r19
     eb6:	b0 0d       	add	r27, r0
     eb8:	a1 1d       	adc	r26, r1
     eba:	62 1f       	adc	r22, r18
     ebc:	83 9f       	mul	r24, r19
     ebe:	a0 0d       	add	r26, r0
     ec0:	61 1d       	adc	r22, r1
     ec2:	22 1f       	adc	r18, r18
     ec4:	74 9f       	mul	r23, r20
     ec6:	33 27       	eor	r19, r19
     ec8:	a0 0d       	add	r26, r0
     eca:	61 1d       	adc	r22, r1
     ecc:	23 1f       	adc	r18, r19
     ece:	84 9f       	mul	r24, r20
     ed0:	60 0d       	add	r22, r0
     ed2:	21 1d       	adc	r18, r1
     ed4:	82 2f       	mov	r24, r18
     ed6:	76 2f       	mov	r23, r22
     ed8:	6a 2f       	mov	r22, r26
     eda:	11 24       	eor	r1, r1
     edc:	9f 57       	subi	r25, 0x7F	; 127
     ede:	50 40       	sbci	r21, 0x00	; 0
     ee0:	9a f0       	brmi	.+38     	; 0xf08 <__mulsf3_pse+0x88>
     ee2:	f1 f0       	breq	.+60     	; 0xf20 <__mulsf3_pse+0xa0>
     ee4:	88 23       	and	r24, r24
     ee6:	4a f0       	brmi	.+18     	; 0xefa <__mulsf3_pse+0x7a>
     ee8:	ee 0f       	add	r30, r30
     eea:	ff 1f       	adc	r31, r31
     eec:	bb 1f       	adc	r27, r27
     eee:	66 1f       	adc	r22, r22
     ef0:	77 1f       	adc	r23, r23
     ef2:	88 1f       	adc	r24, r24
     ef4:	91 50       	subi	r25, 0x01	; 1
     ef6:	50 40       	sbci	r21, 0x00	; 0
     ef8:	a9 f7       	brne	.-22     	; 0xee4 <__mulsf3_pse+0x64>
     efa:	9e 3f       	cpi	r25, 0xFE	; 254
     efc:	51 05       	cpc	r21, r1
     efe:	80 f0       	brcs	.+32     	; 0xf20 <__mulsf3_pse+0xa0>
     f00:	0c 94 d4 06 	jmp	0xda8	; 0xda8 <__fp_inf>
     f04:	0c 94 1f 07 	jmp	0xe3e	; 0xe3e <__fp_szero>
     f08:	5f 3f       	cpi	r21, 0xFF	; 255
     f0a:	e4 f3       	brlt	.-8      	; 0xf04 <__mulsf3_pse+0x84>
     f0c:	98 3e       	cpi	r25, 0xE8	; 232
     f0e:	d4 f3       	brlt	.-12     	; 0xf04 <__mulsf3_pse+0x84>
     f10:	86 95       	lsr	r24
     f12:	77 95       	ror	r23
     f14:	67 95       	ror	r22
     f16:	b7 95       	ror	r27
     f18:	f7 95       	ror	r31
     f1a:	e7 95       	ror	r30
     f1c:	9f 5f       	subi	r25, 0xFF	; 255
     f1e:	c1 f7       	brne	.-16     	; 0xf10 <__mulsf3_pse+0x90>
     f20:	fe 2b       	or	r31, r30
     f22:	88 0f       	add	r24, r24
     f24:	91 1d       	adc	r25, r1
     f26:	96 95       	lsr	r25
     f28:	87 95       	ror	r24
     f2a:	97 f9       	bld	r25, 7
     f2c:	08 95       	ret

00000f2e <vfprintf>:
     f2e:	a3 e1       	ldi	r26, 0x13	; 19
     f30:	b0 e0       	ldi	r27, 0x00	; 0
     f32:	ed e9       	ldi	r30, 0x9D	; 157
     f34:	f7 e0       	ldi	r31, 0x07	; 7
     f36:	0c 94 35 0b 	jmp	0x166a	; 0x166a <__prologue_saves__>
     f3a:	6c 01       	movw	r12, r24
     f3c:	4b 01       	movw	r8, r22
     f3e:	2a 01       	movw	r4, r20
     f40:	fc 01       	movw	r30, r24
     f42:	17 82       	std	Z+7, r1	; 0x07
     f44:	16 82       	std	Z+6, r1	; 0x06
     f46:	83 81       	ldd	r24, Z+3	; 0x03
     f48:	81 ff       	sbrs	r24, 1
     f4a:	43 c3       	rjmp	.+1670   	; 0x15d2 <vfprintf+0x6a4>
     f4c:	ae 01       	movw	r20, r28
     f4e:	4f 5f       	subi	r20, 0xFF	; 255
     f50:	5f 4f       	sbci	r21, 0xFF	; 255
     f52:	3a 01       	movw	r6, r20
     f54:	f6 01       	movw	r30, r12
     f56:	93 81       	ldd	r25, Z+3	; 0x03
     f58:	f4 01       	movw	r30, r8
     f5a:	93 fd       	sbrc	r25, 3
     f5c:	85 91       	lpm	r24, Z+
     f5e:	93 ff       	sbrs	r25, 3
     f60:	81 91       	ld	r24, Z+
     f62:	4f 01       	movw	r8, r30
     f64:	88 23       	and	r24, r24
     f66:	09 f4       	brne	.+2      	; 0xf6a <vfprintf+0x3c>
     f68:	30 c3       	rjmp	.+1632   	; 0x15ca <vfprintf+0x69c>
     f6a:	85 32       	cpi	r24, 0x25	; 37
     f6c:	39 f4       	brne	.+14     	; 0xf7c <vfprintf+0x4e>
     f6e:	93 fd       	sbrc	r25, 3
     f70:	85 91       	lpm	r24, Z+
     f72:	93 ff       	sbrs	r25, 3
     f74:	81 91       	ld	r24, Z+
     f76:	4f 01       	movw	r8, r30
     f78:	85 32       	cpi	r24, 0x25	; 37
     f7a:	39 f4       	brne	.+14     	; 0xf8a <vfprintf+0x5c>
     f7c:	b6 01       	movw	r22, r12
     f7e:	90 e0       	ldi	r25, 0x00	; 0
     f80:	0e 94 6b 0c 	call	0x18d6	; 0x18d6 <fputc>
     f84:	52 01       	movw	r10, r4
     f86:	25 01       	movw	r4, r10
     f88:	e5 cf       	rjmp	.-54     	; 0xf54 <vfprintf+0x26>
     f8a:	10 e0       	ldi	r17, 0x00	; 0
     f8c:	f1 2c       	mov	r15, r1
     f8e:	20 e0       	ldi	r18, 0x00	; 0
     f90:	20 32       	cpi	r18, 0x20	; 32
     f92:	a0 f4       	brcc	.+40     	; 0xfbc <vfprintf+0x8e>
     f94:	8b 32       	cpi	r24, 0x2B	; 43
     f96:	69 f0       	breq	.+26     	; 0xfb2 <vfprintf+0x84>
     f98:	30 f4       	brcc	.+12     	; 0xfa6 <vfprintf+0x78>
     f9a:	80 32       	cpi	r24, 0x20	; 32
     f9c:	59 f0       	breq	.+22     	; 0xfb4 <vfprintf+0x86>
     f9e:	83 32       	cpi	r24, 0x23	; 35
     fa0:	69 f4       	brne	.+26     	; 0xfbc <vfprintf+0x8e>
     fa2:	20 61       	ori	r18, 0x10	; 16
     fa4:	2c c0       	rjmp	.+88     	; 0xffe <vfprintf+0xd0>
     fa6:	8d 32       	cpi	r24, 0x2D	; 45
     fa8:	39 f0       	breq	.+14     	; 0xfb8 <vfprintf+0x8a>
     faa:	80 33       	cpi	r24, 0x30	; 48
     fac:	39 f4       	brne	.+14     	; 0xfbc <vfprintf+0x8e>
     fae:	21 60       	ori	r18, 0x01	; 1
     fb0:	26 c0       	rjmp	.+76     	; 0xffe <vfprintf+0xd0>
     fb2:	22 60       	ori	r18, 0x02	; 2
     fb4:	24 60       	ori	r18, 0x04	; 4
     fb6:	23 c0       	rjmp	.+70     	; 0xffe <vfprintf+0xd0>
     fb8:	28 60       	ori	r18, 0x08	; 8
     fba:	21 c0       	rjmp	.+66     	; 0xffe <vfprintf+0xd0>
     fbc:	27 fd       	sbrc	r18, 7
     fbe:	27 c0       	rjmp	.+78     	; 0x100e <vfprintf+0xe0>
     fc0:	30 ed       	ldi	r19, 0xD0	; 208
     fc2:	38 0f       	add	r19, r24
     fc4:	3a 30       	cpi	r19, 0x0A	; 10
     fc6:	78 f4       	brcc	.+30     	; 0xfe6 <vfprintf+0xb8>
     fc8:	26 ff       	sbrs	r18, 6
     fca:	06 c0       	rjmp	.+12     	; 0xfd8 <vfprintf+0xaa>
     fcc:	fa e0       	ldi	r31, 0x0A	; 10
     fce:	1f 9f       	mul	r17, r31
     fd0:	30 0d       	add	r19, r0
     fd2:	11 24       	eor	r1, r1
     fd4:	13 2f       	mov	r17, r19
     fd6:	13 c0       	rjmp	.+38     	; 0xffe <vfprintf+0xd0>
     fd8:	4a e0       	ldi	r20, 0x0A	; 10
     fda:	f4 9e       	mul	r15, r20
     fdc:	30 0d       	add	r19, r0
     fde:	11 24       	eor	r1, r1
     fe0:	f3 2e       	mov	r15, r19
     fe2:	20 62       	ori	r18, 0x20	; 32
     fe4:	0c c0       	rjmp	.+24     	; 0xffe <vfprintf+0xd0>
     fe6:	8e 32       	cpi	r24, 0x2E	; 46
     fe8:	21 f4       	brne	.+8      	; 0xff2 <vfprintf+0xc4>
     fea:	26 fd       	sbrc	r18, 6
     fec:	ee c2       	rjmp	.+1500   	; 0x15ca <vfprintf+0x69c>
     fee:	20 64       	ori	r18, 0x40	; 64
     ff0:	06 c0       	rjmp	.+12     	; 0xffe <vfprintf+0xd0>
     ff2:	8c 36       	cpi	r24, 0x6C	; 108
     ff4:	11 f4       	brne	.+4      	; 0xffa <vfprintf+0xcc>
     ff6:	20 68       	ori	r18, 0x80	; 128
     ff8:	02 c0       	rjmp	.+4      	; 0xffe <vfprintf+0xd0>
     ffa:	88 36       	cpi	r24, 0x68	; 104
     ffc:	41 f4       	brne	.+16     	; 0x100e <vfprintf+0xe0>
     ffe:	f4 01       	movw	r30, r8
    1000:	93 fd       	sbrc	r25, 3
    1002:	85 91       	lpm	r24, Z+
    1004:	93 ff       	sbrs	r25, 3
    1006:	81 91       	ld	r24, Z+
    1008:	4f 01       	movw	r8, r30
    100a:	81 11       	cpse	r24, r1
    100c:	c1 cf       	rjmp	.-126    	; 0xf90 <vfprintf+0x62>
    100e:	9b eb       	ldi	r25, 0xBB	; 187
    1010:	98 0f       	add	r25, r24
    1012:	93 30       	cpi	r25, 0x03	; 3
    1014:	18 f4       	brcc	.+6      	; 0x101c <vfprintf+0xee>
    1016:	20 61       	ori	r18, 0x10	; 16
    1018:	80 5e       	subi	r24, 0xE0	; 224
    101a:	06 c0       	rjmp	.+12     	; 0x1028 <vfprintf+0xfa>
    101c:	9b e9       	ldi	r25, 0x9B	; 155
    101e:	98 0f       	add	r25, r24
    1020:	93 30       	cpi	r25, 0x03	; 3
    1022:	08 f0       	brcs	.+2      	; 0x1026 <vfprintf+0xf8>
    1024:	71 c1       	rjmp	.+738    	; 0x1308 <vfprintf+0x3da>
    1026:	2f 7e       	andi	r18, 0xEF	; 239
    1028:	26 ff       	sbrs	r18, 6
    102a:	16 e0       	ldi	r17, 0x06	; 6
    102c:	2f 73       	andi	r18, 0x3F	; 63
    102e:	32 2e       	mov	r3, r18
    1030:	85 36       	cpi	r24, 0x65	; 101
    1032:	19 f4       	brne	.+6      	; 0x103a <vfprintf+0x10c>
    1034:	20 64       	ori	r18, 0x40	; 64
    1036:	32 2e       	mov	r3, r18
    1038:	08 c0       	rjmp	.+16     	; 0x104a <vfprintf+0x11c>
    103a:	86 36       	cpi	r24, 0x66	; 102
    103c:	21 f4       	brne	.+8      	; 0x1046 <vfprintf+0x118>
    103e:	f2 2f       	mov	r31, r18
    1040:	f0 68       	ori	r31, 0x80	; 128
    1042:	3f 2e       	mov	r3, r31
    1044:	02 c0       	rjmp	.+4      	; 0x104a <vfprintf+0x11c>
    1046:	11 11       	cpse	r17, r1
    1048:	11 50       	subi	r17, 0x01	; 1
    104a:	37 fe       	sbrs	r3, 7
    104c:	07 c0       	rjmp	.+14     	; 0x105c <vfprintf+0x12e>
    104e:	1c 33       	cpi	r17, 0x3C	; 60
    1050:	50 f4       	brcc	.+20     	; 0x1066 <vfprintf+0x138>
    1052:	ee 24       	eor	r14, r14
    1054:	e3 94       	inc	r14
    1056:	e1 0e       	add	r14, r17
    1058:	27 e0       	ldi	r18, 0x07	; 7
    105a:	0b c0       	rjmp	.+22     	; 0x1072 <vfprintf+0x144>
    105c:	18 30       	cpi	r17, 0x08	; 8
    105e:	38 f0       	brcs	.+14     	; 0x106e <vfprintf+0x140>
    1060:	27 e0       	ldi	r18, 0x07	; 7
    1062:	17 e0       	ldi	r17, 0x07	; 7
    1064:	05 c0       	rjmp	.+10     	; 0x1070 <vfprintf+0x142>
    1066:	27 e0       	ldi	r18, 0x07	; 7
    1068:	4c e3       	ldi	r20, 0x3C	; 60
    106a:	e4 2e       	mov	r14, r20
    106c:	02 c0       	rjmp	.+4      	; 0x1072 <vfprintf+0x144>
    106e:	21 2f       	mov	r18, r17
    1070:	e1 2c       	mov	r14, r1
    1072:	52 01       	movw	r10, r4
    1074:	44 e0       	ldi	r20, 0x04	; 4
    1076:	a4 0e       	add	r10, r20
    1078:	b1 1c       	adc	r11, r1
    107a:	f2 01       	movw	r30, r4
    107c:	60 81       	ld	r22, Z
    107e:	71 81       	ldd	r23, Z+1	; 0x01
    1080:	82 81       	ldd	r24, Z+2	; 0x02
    1082:	93 81       	ldd	r25, Z+3	; 0x03
    1084:	0e 2d       	mov	r16, r14
    1086:	a3 01       	movw	r20, r6
    1088:	0e 94 72 0b 	call	0x16e4	; 0x16e4 <__ftoa_engine>
    108c:	2c 01       	movw	r4, r24
    108e:	09 81       	ldd	r16, Y+1	; 0x01
    1090:	00 ff       	sbrs	r16, 0
    1092:	02 c0       	rjmp	.+4      	; 0x1098 <vfprintf+0x16a>
    1094:	03 ff       	sbrs	r16, 3
    1096:	07 c0       	rjmp	.+14     	; 0x10a6 <vfprintf+0x178>
    1098:	31 fc       	sbrc	r3, 1
    109a:	08 c0       	rjmp	.+16     	; 0x10ac <vfprintf+0x17e>
    109c:	32 fe       	sbrs	r3, 2
    109e:	09 c0       	rjmp	.+18     	; 0x10b2 <vfprintf+0x184>
    10a0:	30 e2       	ldi	r19, 0x20	; 32
    10a2:	23 2e       	mov	r2, r19
    10a4:	07 c0       	rjmp	.+14     	; 0x10b4 <vfprintf+0x186>
    10a6:	2d e2       	ldi	r18, 0x2D	; 45
    10a8:	22 2e       	mov	r2, r18
    10aa:	04 c0       	rjmp	.+8      	; 0x10b4 <vfprintf+0x186>
    10ac:	9b e2       	ldi	r25, 0x2B	; 43
    10ae:	29 2e       	mov	r2, r25
    10b0:	01 c0       	rjmp	.+2      	; 0x10b4 <vfprintf+0x186>
    10b2:	21 2c       	mov	r2, r1
    10b4:	80 2f       	mov	r24, r16
    10b6:	8c 70       	andi	r24, 0x0C	; 12
    10b8:	19 f0       	breq	.+6      	; 0x10c0 <vfprintf+0x192>
    10ba:	21 10       	cpse	r2, r1
    10bc:	68 c2       	rjmp	.+1232   	; 0x158e <vfprintf+0x660>
    10be:	a8 c2       	rjmp	.+1360   	; 0x1610 <vfprintf+0x6e2>
    10c0:	37 fe       	sbrs	r3, 7
    10c2:	0f c0       	rjmp	.+30     	; 0x10e2 <vfprintf+0x1b4>
    10c4:	e4 0c       	add	r14, r4
    10c6:	04 ff       	sbrs	r16, 4
    10c8:	04 c0       	rjmp	.+8      	; 0x10d2 <vfprintf+0x1a4>
    10ca:	8a 81       	ldd	r24, Y+2	; 0x02
    10cc:	81 33       	cpi	r24, 0x31	; 49
    10ce:	09 f4       	brne	.+2      	; 0x10d2 <vfprintf+0x1a4>
    10d0:	ea 94       	dec	r14
    10d2:	1e 14       	cp	r1, r14
    10d4:	74 f5       	brge	.+92     	; 0x1132 <vfprintf+0x204>
    10d6:	f8 e0       	ldi	r31, 0x08	; 8
    10d8:	fe 15       	cp	r31, r14
    10da:	78 f5       	brcc	.+94     	; 0x113a <vfprintf+0x20c>
    10dc:	88 e0       	ldi	r24, 0x08	; 8
    10de:	e8 2e       	mov	r14, r24
    10e0:	2c c0       	rjmp	.+88     	; 0x113a <vfprintf+0x20c>
    10e2:	36 fc       	sbrc	r3, 6
    10e4:	2a c0       	rjmp	.+84     	; 0x113a <vfprintf+0x20c>
    10e6:	81 2f       	mov	r24, r17
    10e8:	90 e0       	ldi	r25, 0x00	; 0
    10ea:	84 15       	cp	r24, r4
    10ec:	95 05       	cpc	r25, r5
    10ee:	9c f0       	brlt	.+38     	; 0x1116 <vfprintf+0x1e8>
    10f0:	2c ef       	ldi	r18, 0xFC	; 252
    10f2:	42 16       	cp	r4, r18
    10f4:	2f ef       	ldi	r18, 0xFF	; 255
    10f6:	52 06       	cpc	r5, r18
    10f8:	74 f0       	brlt	.+28     	; 0x1116 <vfprintf+0x1e8>
    10fa:	43 2d       	mov	r20, r3
    10fc:	40 68       	ori	r20, 0x80	; 128
    10fe:	34 2e       	mov	r3, r20
    1100:	0a c0       	rjmp	.+20     	; 0x1116 <vfprintf+0x1e8>
    1102:	e2 e0       	ldi	r30, 0x02	; 2
    1104:	f0 e0       	ldi	r31, 0x00	; 0
    1106:	ec 0f       	add	r30, r28
    1108:	fd 1f       	adc	r31, r29
    110a:	e1 0f       	add	r30, r17
    110c:	f1 1d       	adc	r31, r1
    110e:	80 81       	ld	r24, Z
    1110:	80 33       	cpi	r24, 0x30	; 48
    1112:	19 f4       	brne	.+6      	; 0x111a <vfprintf+0x1ec>
    1114:	11 50       	subi	r17, 0x01	; 1
    1116:	11 11       	cpse	r17, r1
    1118:	f4 cf       	rjmp	.-24     	; 0x1102 <vfprintf+0x1d4>
    111a:	37 fe       	sbrs	r3, 7
    111c:	0e c0       	rjmp	.+28     	; 0x113a <vfprintf+0x20c>
    111e:	ee 24       	eor	r14, r14
    1120:	e3 94       	inc	r14
    1122:	e1 0e       	add	r14, r17
    1124:	81 2f       	mov	r24, r17
    1126:	90 e0       	ldi	r25, 0x00	; 0
    1128:	48 16       	cp	r4, r24
    112a:	59 06       	cpc	r5, r25
    112c:	2c f4       	brge	.+10     	; 0x1138 <vfprintf+0x20a>
    112e:	14 19       	sub	r17, r4
    1130:	04 c0       	rjmp	.+8      	; 0x113a <vfprintf+0x20c>
    1132:	ee 24       	eor	r14, r14
    1134:	e3 94       	inc	r14
    1136:	01 c0       	rjmp	.+2      	; 0x113a <vfprintf+0x20c>
    1138:	10 e0       	ldi	r17, 0x00	; 0
    113a:	37 fe       	sbrs	r3, 7
    113c:	06 c0       	rjmp	.+12     	; 0x114a <vfprintf+0x21c>
    113e:	14 14       	cp	r1, r4
    1140:	15 04       	cpc	r1, r5
    1142:	34 f4       	brge	.+12     	; 0x1150 <vfprintf+0x222>
    1144:	c2 01       	movw	r24, r4
    1146:	01 96       	adiw	r24, 0x01	; 1
    1148:	05 c0       	rjmp	.+10     	; 0x1154 <vfprintf+0x226>
    114a:	85 e0       	ldi	r24, 0x05	; 5
    114c:	90 e0       	ldi	r25, 0x00	; 0
    114e:	02 c0       	rjmp	.+4      	; 0x1154 <vfprintf+0x226>
    1150:	81 e0       	ldi	r24, 0x01	; 1
    1152:	90 e0       	ldi	r25, 0x00	; 0
    1154:	21 10       	cpse	r2, r1
    1156:	01 96       	adiw	r24, 0x01	; 1
    1158:	11 23       	and	r17, r17
    115a:	31 f0       	breq	.+12     	; 0x1168 <vfprintf+0x23a>
    115c:	21 2f       	mov	r18, r17
    115e:	30 e0       	ldi	r19, 0x00	; 0
    1160:	2f 5f       	subi	r18, 0xFF	; 255
    1162:	3f 4f       	sbci	r19, 0xFF	; 255
    1164:	82 0f       	add	r24, r18
    1166:	93 1f       	adc	r25, r19
    1168:	2f 2d       	mov	r18, r15
    116a:	30 e0       	ldi	r19, 0x00	; 0
    116c:	82 17       	cp	r24, r18
    116e:	93 07       	cpc	r25, r19
    1170:	14 f4       	brge	.+4      	; 0x1176 <vfprintf+0x248>
    1172:	f8 1a       	sub	r15, r24
    1174:	01 c0       	rjmp	.+2      	; 0x1178 <vfprintf+0x24a>
    1176:	f1 2c       	mov	r15, r1
    1178:	83 2d       	mov	r24, r3
    117a:	89 70       	andi	r24, 0x09	; 9
    117c:	49 f4       	brne	.+18     	; 0x1190 <vfprintf+0x262>
    117e:	ff 20       	and	r15, r15
    1180:	39 f0       	breq	.+14     	; 0x1190 <vfprintf+0x262>
    1182:	b6 01       	movw	r22, r12
    1184:	80 e2       	ldi	r24, 0x20	; 32
    1186:	90 e0       	ldi	r25, 0x00	; 0
    1188:	0e 94 6b 0c 	call	0x18d6	; 0x18d6 <fputc>
    118c:	fa 94       	dec	r15
    118e:	f7 cf       	rjmp	.-18     	; 0x117e <vfprintf+0x250>
    1190:	22 20       	and	r2, r2
    1192:	29 f0       	breq	.+10     	; 0x119e <vfprintf+0x270>
    1194:	b6 01       	movw	r22, r12
    1196:	82 2d       	mov	r24, r2
    1198:	90 e0       	ldi	r25, 0x00	; 0
    119a:	0e 94 6b 0c 	call	0x18d6	; 0x18d6 <fputc>
    119e:	33 fc       	sbrc	r3, 3
    11a0:	09 c0       	rjmp	.+18     	; 0x11b4 <vfprintf+0x286>
    11a2:	ff 20       	and	r15, r15
    11a4:	39 f0       	breq	.+14     	; 0x11b4 <vfprintf+0x286>
    11a6:	b6 01       	movw	r22, r12
    11a8:	80 e3       	ldi	r24, 0x30	; 48
    11aa:	90 e0       	ldi	r25, 0x00	; 0
    11ac:	0e 94 6b 0c 	call	0x18d6	; 0x18d6 <fputc>
    11b0:	fa 94       	dec	r15
    11b2:	f7 cf       	rjmp	.-18     	; 0x11a2 <vfprintf+0x274>
    11b4:	37 fe       	sbrs	r3, 7
    11b6:	5a c0       	rjmp	.+180    	; 0x126c <vfprintf+0x33e>
    11b8:	94 2d       	mov	r25, r4
    11ba:	85 2d       	mov	r24, r5
    11bc:	57 fe       	sbrs	r5, 7
    11be:	02 c0       	rjmp	.+4      	; 0x11c4 <vfprintf+0x296>
    11c0:	90 e0       	ldi	r25, 0x00	; 0
    11c2:	80 e0       	ldi	r24, 0x00	; 0
    11c4:	29 2e       	mov	r2, r25
    11c6:	38 2e       	mov	r3, r24
    11c8:	20 e0       	ldi	r18, 0x00	; 0
    11ca:	30 e0       	ldi	r19, 0x00	; 0
    11cc:	a2 01       	movw	r20, r4
    11ce:	4e 19       	sub	r20, r14
    11d0:	51 09       	sbc	r21, r1
    11d2:	5d 87       	std	Y+13, r21	; 0x0d
    11d4:	4c 87       	std	Y+12, r20	; 0x0c
    11d6:	a2 01       	movw	r20, r4
    11d8:	42 19       	sub	r20, r2
    11da:	53 09       	sbc	r21, r3
    11dc:	5f 87       	std	Y+15, r21	; 0x0f
    11de:	4e 87       	std	Y+14, r20	; 0x0e
    11e0:	61 2f       	mov	r22, r17
    11e2:	70 e0       	ldi	r23, 0x00	; 0
    11e4:	44 27       	eor	r20, r20
    11e6:	55 27       	eor	r21, r21
    11e8:	46 1b       	sub	r20, r22
    11ea:	57 0b       	sbc	r21, r23
    11ec:	59 8b       	std	Y+17, r21	; 0x11
    11ee:	48 8b       	std	Y+16, r20	; 0x10
    11f0:	5f ef       	ldi	r21, 0xFF	; 255
    11f2:	25 16       	cp	r2, r21
    11f4:	35 06       	cpc	r3, r21
    11f6:	49 f4       	brne	.+18     	; 0x120a <vfprintf+0x2dc>
    11f8:	b6 01       	movw	r22, r12
    11fa:	8e e2       	ldi	r24, 0x2E	; 46
    11fc:	90 e0       	ldi	r25, 0x00	; 0
    11fe:	2a 8b       	std	Y+18, r18	; 0x12
    1200:	3b 8b       	std	Y+19, r19	; 0x13
    1202:	0e 94 6b 0c 	call	0x18d6	; 0x18d6 <fputc>
    1206:	3b 89       	ldd	r19, Y+19	; 0x13
    1208:	2a 89       	ldd	r18, Y+18	; 0x12
    120a:	42 14       	cp	r4, r2
    120c:	53 04       	cpc	r5, r3
    120e:	6c f0       	brlt	.+26     	; 0x122a <vfprintf+0x2fc>
    1210:	4c 85       	ldd	r20, Y+12	; 0x0c
    1212:	5d 85       	ldd	r21, Y+13	; 0x0d
    1214:	42 15       	cp	r20, r2
    1216:	53 05       	cpc	r21, r3
    1218:	44 f4       	brge	.+16     	; 0x122a <vfprintf+0x2fc>
    121a:	ee 85       	ldd	r30, Y+14	; 0x0e
    121c:	ff 85       	ldd	r31, Y+15	; 0x0f
    121e:	e2 0f       	add	r30, r18
    1220:	f3 1f       	adc	r31, r19
    1222:	e6 0d       	add	r30, r6
    1224:	f7 1d       	adc	r31, r7
    1226:	81 81       	ldd	r24, Z+1	; 0x01
    1228:	01 c0       	rjmp	.+2      	; 0x122c <vfprintf+0x2fe>
    122a:	80 e3       	ldi	r24, 0x30	; 48
    122c:	51 e0       	ldi	r21, 0x01	; 1
    122e:	25 1a       	sub	r2, r21
    1230:	31 08       	sbc	r3, r1
    1232:	2f 5f       	subi	r18, 0xFF	; 255
    1234:	3f 4f       	sbci	r19, 0xFF	; 255
    1236:	48 89       	ldd	r20, Y+16	; 0x10
    1238:	59 89       	ldd	r21, Y+17	; 0x11
    123a:	24 16       	cp	r2, r20
    123c:	35 06       	cpc	r3, r21
    123e:	4c f0       	brlt	.+18     	; 0x1252 <vfprintf+0x324>
    1240:	b6 01       	movw	r22, r12
    1242:	90 e0       	ldi	r25, 0x00	; 0
    1244:	2a 8b       	std	Y+18, r18	; 0x12
    1246:	3b 8b       	std	Y+19, r19	; 0x13
    1248:	0e 94 6b 0c 	call	0x18d6	; 0x18d6 <fputc>
    124c:	2a 89       	ldd	r18, Y+18	; 0x12
    124e:	3b 89       	ldd	r19, Y+19	; 0x13
    1250:	cf cf       	rjmp	.-98     	; 0x11f0 <vfprintf+0x2c2>
    1252:	24 14       	cp	r2, r4
    1254:	35 04       	cpc	r3, r5
    1256:	39 f4       	brne	.+14     	; 0x1266 <vfprintf+0x338>
    1258:	9a 81       	ldd	r25, Y+2	; 0x02
    125a:	96 33       	cpi	r25, 0x36	; 54
    125c:	18 f4       	brcc	.+6      	; 0x1264 <vfprintf+0x336>
    125e:	95 33       	cpi	r25, 0x35	; 53
    1260:	11 f4       	brne	.+4      	; 0x1266 <vfprintf+0x338>
    1262:	04 ff       	sbrs	r16, 4
    1264:	81 e3       	ldi	r24, 0x31	; 49
    1266:	b6 01       	movw	r22, r12
    1268:	90 e0       	ldi	r25, 0x00	; 0
    126a:	4b c0       	rjmp	.+150    	; 0x1302 <vfprintf+0x3d4>
    126c:	8a 81       	ldd	r24, Y+2	; 0x02
    126e:	81 33       	cpi	r24, 0x31	; 49
    1270:	09 f0       	breq	.+2      	; 0x1274 <vfprintf+0x346>
    1272:	0f 7e       	andi	r16, 0xEF	; 239
    1274:	b6 01       	movw	r22, r12
    1276:	90 e0       	ldi	r25, 0x00	; 0
    1278:	0e 94 6b 0c 	call	0x18d6	; 0x18d6 <fputc>
    127c:	11 11       	cpse	r17, r1
    127e:	05 c0       	rjmp	.+10     	; 0x128a <vfprintf+0x35c>
    1280:	34 fc       	sbrc	r3, 4
    1282:	18 c0       	rjmp	.+48     	; 0x12b4 <vfprintf+0x386>
    1284:	85 e6       	ldi	r24, 0x65	; 101
    1286:	90 e0       	ldi	r25, 0x00	; 0
    1288:	17 c0       	rjmp	.+46     	; 0x12b8 <vfprintf+0x38a>
    128a:	b6 01       	movw	r22, r12
    128c:	8e e2       	ldi	r24, 0x2E	; 46
    128e:	90 e0       	ldi	r25, 0x00	; 0
    1290:	0e 94 6b 0c 	call	0x18d6	; 0x18d6 <fputc>
    1294:	82 e0       	ldi	r24, 0x02	; 2
    1296:	ee 24       	eor	r14, r14
    1298:	e3 94       	inc	r14
    129a:	e8 0e       	add	r14, r24
    129c:	f3 01       	movw	r30, r6
    129e:	e8 0f       	add	r30, r24
    12a0:	f1 1d       	adc	r31, r1
    12a2:	80 81       	ld	r24, Z
    12a4:	b6 01       	movw	r22, r12
    12a6:	90 e0       	ldi	r25, 0x00	; 0
    12a8:	0e 94 6b 0c 	call	0x18d6	; 0x18d6 <fputc>
    12ac:	11 50       	subi	r17, 0x01	; 1
    12ae:	8e 2d       	mov	r24, r14
    12b0:	91 f7       	brne	.-28     	; 0x1296 <vfprintf+0x368>
    12b2:	e6 cf       	rjmp	.-52     	; 0x1280 <vfprintf+0x352>
    12b4:	85 e4       	ldi	r24, 0x45	; 69
    12b6:	90 e0       	ldi	r25, 0x00	; 0
    12b8:	b6 01       	movw	r22, r12
    12ba:	0e 94 6b 0c 	call	0x18d6	; 0x18d6 <fputc>
    12be:	57 fc       	sbrc	r5, 7
    12c0:	05 c0       	rjmp	.+10     	; 0x12cc <vfprintf+0x39e>
    12c2:	41 14       	cp	r4, r1
    12c4:	51 04       	cpc	r5, r1
    12c6:	39 f4       	brne	.+14     	; 0x12d6 <vfprintf+0x3a8>
    12c8:	04 ff       	sbrs	r16, 4
    12ca:	05 c0       	rjmp	.+10     	; 0x12d6 <vfprintf+0x3a8>
    12cc:	51 94       	neg	r5
    12ce:	41 94       	neg	r4
    12d0:	51 08       	sbc	r5, r1
    12d2:	8d e2       	ldi	r24, 0x2D	; 45
    12d4:	01 c0       	rjmp	.+2      	; 0x12d8 <vfprintf+0x3aa>
    12d6:	8b e2       	ldi	r24, 0x2B	; 43
    12d8:	b6 01       	movw	r22, r12
    12da:	90 e0       	ldi	r25, 0x00	; 0
    12dc:	0e 94 6b 0c 	call	0x18d6	; 0x18d6 <fputc>
    12e0:	80 e3       	ldi	r24, 0x30	; 48
    12e2:	9a e0       	ldi	r25, 0x0A	; 10
    12e4:	49 16       	cp	r4, r25
    12e6:	51 04       	cpc	r5, r1
    12e8:	2c f0       	brlt	.+10     	; 0x12f4 <vfprintf+0x3c6>
    12ea:	8f 5f       	subi	r24, 0xFF	; 255
    12ec:	5a e0       	ldi	r21, 0x0A	; 10
    12ee:	45 1a       	sub	r4, r21
    12f0:	51 08       	sbc	r5, r1
    12f2:	f7 cf       	rjmp	.-18     	; 0x12e2 <vfprintf+0x3b4>
    12f4:	b6 01       	movw	r22, r12
    12f6:	90 e0       	ldi	r25, 0x00	; 0
    12f8:	0e 94 6b 0c 	call	0x18d6	; 0x18d6 <fputc>
    12fc:	b6 01       	movw	r22, r12
    12fe:	c2 01       	movw	r24, r4
    1300:	c0 96       	adiw	r24, 0x30	; 48
    1302:	0e 94 6b 0c 	call	0x18d6	; 0x18d6 <fputc>
    1306:	57 c1       	rjmp	.+686    	; 0x15b6 <vfprintf+0x688>
    1308:	83 36       	cpi	r24, 0x63	; 99
    130a:	31 f0       	breq	.+12     	; 0x1318 <vfprintf+0x3ea>
    130c:	83 37       	cpi	r24, 0x73	; 115
    130e:	79 f0       	breq	.+30     	; 0x132e <vfprintf+0x400>
    1310:	83 35       	cpi	r24, 0x53	; 83
    1312:	09 f0       	breq	.+2      	; 0x1316 <vfprintf+0x3e8>
    1314:	58 c0       	rjmp	.+176    	; 0x13c6 <vfprintf+0x498>
    1316:	21 c0       	rjmp	.+66     	; 0x135a <vfprintf+0x42c>
    1318:	52 01       	movw	r10, r4
    131a:	e2 e0       	ldi	r30, 0x02	; 2
    131c:	ae 0e       	add	r10, r30
    131e:	b1 1c       	adc	r11, r1
    1320:	f2 01       	movw	r30, r4
    1322:	80 81       	ld	r24, Z
    1324:	89 83       	std	Y+1, r24	; 0x01
    1326:	01 e0       	ldi	r16, 0x01	; 1
    1328:	10 e0       	ldi	r17, 0x00	; 0
    132a:	23 01       	movw	r4, r6
    132c:	14 c0       	rjmp	.+40     	; 0x1356 <vfprintf+0x428>
    132e:	52 01       	movw	r10, r4
    1330:	f2 e0       	ldi	r31, 0x02	; 2
    1332:	af 0e       	add	r10, r31
    1334:	b1 1c       	adc	r11, r1
    1336:	f2 01       	movw	r30, r4
    1338:	40 80       	ld	r4, Z
    133a:	51 80       	ldd	r5, Z+1	; 0x01
    133c:	26 ff       	sbrs	r18, 6
    133e:	03 c0       	rjmp	.+6      	; 0x1346 <vfprintf+0x418>
    1340:	61 2f       	mov	r22, r17
    1342:	70 e0       	ldi	r23, 0x00	; 0
    1344:	02 c0       	rjmp	.+4      	; 0x134a <vfprintf+0x41c>
    1346:	6f ef       	ldi	r22, 0xFF	; 255
    1348:	7f ef       	ldi	r23, 0xFF	; 255
    134a:	c2 01       	movw	r24, r4
    134c:	2a 8b       	std	Y+18, r18	; 0x12
    134e:	0e 94 60 0c 	call	0x18c0	; 0x18c0 <strnlen>
    1352:	8c 01       	movw	r16, r24
    1354:	2a 89       	ldd	r18, Y+18	; 0x12
    1356:	2f 77       	andi	r18, 0x7F	; 127
    1358:	15 c0       	rjmp	.+42     	; 0x1384 <vfprintf+0x456>
    135a:	52 01       	movw	r10, r4
    135c:	f2 e0       	ldi	r31, 0x02	; 2
    135e:	af 0e       	add	r10, r31
    1360:	b1 1c       	adc	r11, r1
    1362:	f2 01       	movw	r30, r4
    1364:	40 80       	ld	r4, Z
    1366:	51 80       	ldd	r5, Z+1	; 0x01
    1368:	26 ff       	sbrs	r18, 6
    136a:	03 c0       	rjmp	.+6      	; 0x1372 <vfprintf+0x444>
    136c:	61 2f       	mov	r22, r17
    136e:	70 e0       	ldi	r23, 0x00	; 0
    1370:	02 c0       	rjmp	.+4      	; 0x1376 <vfprintf+0x448>
    1372:	6f ef       	ldi	r22, 0xFF	; 255
    1374:	7f ef       	ldi	r23, 0xFF	; 255
    1376:	c2 01       	movw	r24, r4
    1378:	2a 8b       	std	Y+18, r18	; 0x12
    137a:	0e 94 4a 0c 	call	0x1894	; 0x1894 <strnlen_P>
    137e:	8c 01       	movw	r16, r24
    1380:	2a 89       	ldd	r18, Y+18	; 0x12
    1382:	20 68       	ori	r18, 0x80	; 128
    1384:	32 2e       	mov	r3, r18
    1386:	23 fd       	sbrc	r18, 3
    1388:	1a c0       	rjmp	.+52     	; 0x13be <vfprintf+0x490>
    138a:	8f 2d       	mov	r24, r15
    138c:	90 e0       	ldi	r25, 0x00	; 0
    138e:	08 17       	cp	r16, r24
    1390:	19 07       	cpc	r17, r25
    1392:	a8 f4       	brcc	.+42     	; 0x13be <vfprintf+0x490>
    1394:	b6 01       	movw	r22, r12
    1396:	80 e2       	ldi	r24, 0x20	; 32
    1398:	90 e0       	ldi	r25, 0x00	; 0
    139a:	0e 94 6b 0c 	call	0x18d6	; 0x18d6 <fputc>
    139e:	fa 94       	dec	r15
    13a0:	f4 cf       	rjmp	.-24     	; 0x138a <vfprintf+0x45c>
    13a2:	f2 01       	movw	r30, r4
    13a4:	37 fc       	sbrc	r3, 7
    13a6:	85 91       	lpm	r24, Z+
    13a8:	37 fe       	sbrs	r3, 7
    13aa:	81 91       	ld	r24, Z+
    13ac:	2f 01       	movw	r4, r30
    13ae:	b6 01       	movw	r22, r12
    13b0:	90 e0       	ldi	r25, 0x00	; 0
    13b2:	0e 94 6b 0c 	call	0x18d6	; 0x18d6 <fputc>
    13b6:	f1 10       	cpse	r15, r1
    13b8:	fa 94       	dec	r15
    13ba:	01 50       	subi	r16, 0x01	; 1
    13bc:	11 09       	sbc	r17, r1
    13be:	01 15       	cp	r16, r1
    13c0:	11 05       	cpc	r17, r1
    13c2:	79 f7       	brne	.-34     	; 0x13a2 <vfprintf+0x474>
    13c4:	f8 c0       	rjmp	.+496    	; 0x15b6 <vfprintf+0x688>
    13c6:	84 36       	cpi	r24, 0x64	; 100
    13c8:	11 f0       	breq	.+4      	; 0x13ce <vfprintf+0x4a0>
    13ca:	89 36       	cpi	r24, 0x69	; 105
    13cc:	59 f5       	brne	.+86     	; 0x1424 <vfprintf+0x4f6>
    13ce:	52 01       	movw	r10, r4
    13d0:	27 ff       	sbrs	r18, 7
    13d2:	09 c0       	rjmp	.+18     	; 0x13e6 <vfprintf+0x4b8>
    13d4:	f4 e0       	ldi	r31, 0x04	; 4
    13d6:	af 0e       	add	r10, r31
    13d8:	b1 1c       	adc	r11, r1
    13da:	f2 01       	movw	r30, r4
    13dc:	60 81       	ld	r22, Z
    13de:	71 81       	ldd	r23, Z+1	; 0x01
    13e0:	82 81       	ldd	r24, Z+2	; 0x02
    13e2:	93 81       	ldd	r25, Z+3	; 0x03
    13e4:	0a c0       	rjmp	.+20     	; 0x13fa <vfprintf+0x4cc>
    13e6:	f2 e0       	ldi	r31, 0x02	; 2
    13e8:	af 0e       	add	r10, r31
    13ea:	b1 1c       	adc	r11, r1
    13ec:	f2 01       	movw	r30, r4
    13ee:	60 81       	ld	r22, Z
    13f0:	71 81       	ldd	r23, Z+1	; 0x01
    13f2:	07 2e       	mov	r0, r23
    13f4:	00 0c       	add	r0, r0
    13f6:	88 0b       	sbc	r24, r24
    13f8:	99 0b       	sbc	r25, r25
    13fa:	2f 76       	andi	r18, 0x6F	; 111
    13fc:	32 2e       	mov	r3, r18
    13fe:	97 ff       	sbrs	r25, 7
    1400:	09 c0       	rjmp	.+18     	; 0x1414 <vfprintf+0x4e6>
    1402:	90 95       	com	r25
    1404:	80 95       	com	r24
    1406:	70 95       	com	r23
    1408:	61 95       	neg	r22
    140a:	7f 4f       	sbci	r23, 0xFF	; 255
    140c:	8f 4f       	sbci	r24, 0xFF	; 255
    140e:	9f 4f       	sbci	r25, 0xFF	; 255
    1410:	20 68       	ori	r18, 0x80	; 128
    1412:	32 2e       	mov	r3, r18
    1414:	2a e0       	ldi	r18, 0x0A	; 10
    1416:	30 e0       	ldi	r19, 0x00	; 0
    1418:	a3 01       	movw	r20, r6
    141a:	0e 94 c6 0c 	call	0x198c	; 0x198c <__ultoa_invert>
    141e:	e8 2e       	mov	r14, r24
    1420:	e6 18       	sub	r14, r6
    1422:	3f c0       	rjmp	.+126    	; 0x14a2 <vfprintf+0x574>
    1424:	02 2f       	mov	r16, r18
    1426:	85 37       	cpi	r24, 0x75	; 117
    1428:	21 f4       	brne	.+8      	; 0x1432 <vfprintf+0x504>
    142a:	0f 7e       	andi	r16, 0xEF	; 239
    142c:	2a e0       	ldi	r18, 0x0A	; 10
    142e:	30 e0       	ldi	r19, 0x00	; 0
    1430:	1d c0       	rjmp	.+58     	; 0x146c <vfprintf+0x53e>
    1432:	09 7f       	andi	r16, 0xF9	; 249
    1434:	8f 36       	cpi	r24, 0x6F	; 111
    1436:	91 f0       	breq	.+36     	; 0x145c <vfprintf+0x52e>
    1438:	18 f4       	brcc	.+6      	; 0x1440 <vfprintf+0x512>
    143a:	88 35       	cpi	r24, 0x58	; 88
    143c:	59 f0       	breq	.+22     	; 0x1454 <vfprintf+0x526>
    143e:	c5 c0       	rjmp	.+394    	; 0x15ca <vfprintf+0x69c>
    1440:	80 37       	cpi	r24, 0x70	; 112
    1442:	19 f0       	breq	.+6      	; 0x144a <vfprintf+0x51c>
    1444:	88 37       	cpi	r24, 0x78	; 120
    1446:	11 f0       	breq	.+4      	; 0x144c <vfprintf+0x51e>
    1448:	c0 c0       	rjmp	.+384    	; 0x15ca <vfprintf+0x69c>
    144a:	00 61       	ori	r16, 0x10	; 16
    144c:	04 ff       	sbrs	r16, 4
    144e:	09 c0       	rjmp	.+18     	; 0x1462 <vfprintf+0x534>
    1450:	04 60       	ori	r16, 0x04	; 4
    1452:	07 c0       	rjmp	.+14     	; 0x1462 <vfprintf+0x534>
    1454:	24 ff       	sbrs	r18, 4
    1456:	08 c0       	rjmp	.+16     	; 0x1468 <vfprintf+0x53a>
    1458:	06 60       	ori	r16, 0x06	; 6
    145a:	06 c0       	rjmp	.+12     	; 0x1468 <vfprintf+0x53a>
    145c:	28 e0       	ldi	r18, 0x08	; 8
    145e:	30 e0       	ldi	r19, 0x00	; 0
    1460:	05 c0       	rjmp	.+10     	; 0x146c <vfprintf+0x53e>
    1462:	20 e1       	ldi	r18, 0x10	; 16
    1464:	30 e0       	ldi	r19, 0x00	; 0
    1466:	02 c0       	rjmp	.+4      	; 0x146c <vfprintf+0x53e>
    1468:	20 e1       	ldi	r18, 0x10	; 16
    146a:	32 e0       	ldi	r19, 0x02	; 2
    146c:	52 01       	movw	r10, r4
    146e:	07 ff       	sbrs	r16, 7
    1470:	09 c0       	rjmp	.+18     	; 0x1484 <vfprintf+0x556>
    1472:	f4 e0       	ldi	r31, 0x04	; 4
    1474:	af 0e       	add	r10, r31
    1476:	b1 1c       	adc	r11, r1
    1478:	f2 01       	movw	r30, r4
    147a:	60 81       	ld	r22, Z
    147c:	71 81       	ldd	r23, Z+1	; 0x01
    147e:	82 81       	ldd	r24, Z+2	; 0x02
    1480:	93 81       	ldd	r25, Z+3	; 0x03
    1482:	08 c0       	rjmp	.+16     	; 0x1494 <vfprintf+0x566>
    1484:	f2 e0       	ldi	r31, 0x02	; 2
    1486:	af 0e       	add	r10, r31
    1488:	b1 1c       	adc	r11, r1
    148a:	f2 01       	movw	r30, r4
    148c:	60 81       	ld	r22, Z
    148e:	71 81       	ldd	r23, Z+1	; 0x01
    1490:	80 e0       	ldi	r24, 0x00	; 0
    1492:	90 e0       	ldi	r25, 0x00	; 0
    1494:	a3 01       	movw	r20, r6
    1496:	0e 94 c6 0c 	call	0x198c	; 0x198c <__ultoa_invert>
    149a:	e8 2e       	mov	r14, r24
    149c:	e6 18       	sub	r14, r6
    149e:	0f 77       	andi	r16, 0x7F	; 127
    14a0:	30 2e       	mov	r3, r16
    14a2:	36 fe       	sbrs	r3, 6
    14a4:	0b c0       	rjmp	.+22     	; 0x14bc <vfprintf+0x58e>
    14a6:	33 2d       	mov	r19, r3
    14a8:	3e 7f       	andi	r19, 0xFE	; 254
    14aa:	e1 16       	cp	r14, r17
    14ac:	50 f4       	brcc	.+20     	; 0x14c2 <vfprintf+0x594>
    14ae:	34 fe       	sbrs	r3, 4
    14b0:	0a c0       	rjmp	.+20     	; 0x14c6 <vfprintf+0x598>
    14b2:	32 fc       	sbrc	r3, 2
    14b4:	08 c0       	rjmp	.+16     	; 0x14c6 <vfprintf+0x598>
    14b6:	33 2d       	mov	r19, r3
    14b8:	3e 7e       	andi	r19, 0xEE	; 238
    14ba:	05 c0       	rjmp	.+10     	; 0x14c6 <vfprintf+0x598>
    14bc:	0e 2d       	mov	r16, r14
    14be:	33 2d       	mov	r19, r3
    14c0:	03 c0       	rjmp	.+6      	; 0x14c8 <vfprintf+0x59a>
    14c2:	0e 2d       	mov	r16, r14
    14c4:	01 c0       	rjmp	.+2      	; 0x14c8 <vfprintf+0x59a>
    14c6:	01 2f       	mov	r16, r17
    14c8:	34 ff       	sbrs	r19, 4
    14ca:	0c c0       	rjmp	.+24     	; 0x14e4 <vfprintf+0x5b6>
    14cc:	fe 01       	movw	r30, r28
    14ce:	ee 0d       	add	r30, r14
    14d0:	f1 1d       	adc	r31, r1
    14d2:	80 81       	ld	r24, Z
    14d4:	80 33       	cpi	r24, 0x30	; 48
    14d6:	11 f4       	brne	.+4      	; 0x14dc <vfprintf+0x5ae>
    14d8:	39 7e       	andi	r19, 0xE9	; 233
    14da:	08 c0       	rjmp	.+16     	; 0x14ec <vfprintf+0x5be>
    14dc:	32 ff       	sbrs	r19, 2
    14de:	05 c0       	rjmp	.+10     	; 0x14ea <vfprintf+0x5bc>
    14e0:	0e 5f       	subi	r16, 0xFE	; 254
    14e2:	04 c0       	rjmp	.+8      	; 0x14ec <vfprintf+0x5be>
    14e4:	83 2f       	mov	r24, r19
    14e6:	86 78       	andi	r24, 0x86	; 134
    14e8:	09 f0       	breq	.+2      	; 0x14ec <vfprintf+0x5be>
    14ea:	0f 5f       	subi	r16, 0xFF	; 255
    14ec:	33 fd       	sbrc	r19, 3
    14ee:	13 c0       	rjmp	.+38     	; 0x1516 <vfprintf+0x5e8>
    14f0:	30 ff       	sbrs	r19, 0
    14f2:	06 c0       	rjmp	.+12     	; 0x1500 <vfprintf+0x5d2>
    14f4:	1e 2d       	mov	r17, r14
    14f6:	0f 15       	cp	r16, r15
    14f8:	18 f4       	brcc	.+6      	; 0x1500 <vfprintf+0x5d2>
    14fa:	1f 0d       	add	r17, r15
    14fc:	10 1b       	sub	r17, r16
    14fe:	0f 2d       	mov	r16, r15
    1500:	0f 15       	cp	r16, r15
    1502:	68 f4       	brcc	.+26     	; 0x151e <vfprintf+0x5f0>
    1504:	b6 01       	movw	r22, r12
    1506:	80 e2       	ldi	r24, 0x20	; 32
    1508:	90 e0       	ldi	r25, 0x00	; 0
    150a:	3b 8b       	std	Y+19, r19	; 0x13
    150c:	0e 94 6b 0c 	call	0x18d6	; 0x18d6 <fputc>
    1510:	0f 5f       	subi	r16, 0xFF	; 255
    1512:	3b 89       	ldd	r19, Y+19	; 0x13
    1514:	f5 cf       	rjmp	.-22     	; 0x1500 <vfprintf+0x5d2>
    1516:	0f 15       	cp	r16, r15
    1518:	10 f4       	brcc	.+4      	; 0x151e <vfprintf+0x5f0>
    151a:	f0 1a       	sub	r15, r16
    151c:	01 c0       	rjmp	.+2      	; 0x1520 <vfprintf+0x5f2>
    151e:	f1 2c       	mov	r15, r1
    1520:	34 ff       	sbrs	r19, 4
    1522:	12 c0       	rjmp	.+36     	; 0x1548 <vfprintf+0x61a>
    1524:	b6 01       	movw	r22, r12
    1526:	80 e3       	ldi	r24, 0x30	; 48
    1528:	90 e0       	ldi	r25, 0x00	; 0
    152a:	3b 8b       	std	Y+19, r19	; 0x13
    152c:	0e 94 6b 0c 	call	0x18d6	; 0x18d6 <fputc>
    1530:	3b 89       	ldd	r19, Y+19	; 0x13
    1532:	32 ff       	sbrs	r19, 2
    1534:	17 c0       	rjmp	.+46     	; 0x1564 <vfprintf+0x636>
    1536:	31 fd       	sbrc	r19, 1
    1538:	03 c0       	rjmp	.+6      	; 0x1540 <vfprintf+0x612>
    153a:	88 e7       	ldi	r24, 0x78	; 120
    153c:	90 e0       	ldi	r25, 0x00	; 0
    153e:	02 c0       	rjmp	.+4      	; 0x1544 <vfprintf+0x616>
    1540:	88 e5       	ldi	r24, 0x58	; 88
    1542:	90 e0       	ldi	r25, 0x00	; 0
    1544:	b6 01       	movw	r22, r12
    1546:	0c c0       	rjmp	.+24     	; 0x1560 <vfprintf+0x632>
    1548:	83 2f       	mov	r24, r19
    154a:	86 78       	andi	r24, 0x86	; 134
    154c:	59 f0       	breq	.+22     	; 0x1564 <vfprintf+0x636>
    154e:	31 ff       	sbrs	r19, 1
    1550:	02 c0       	rjmp	.+4      	; 0x1556 <vfprintf+0x628>
    1552:	8b e2       	ldi	r24, 0x2B	; 43
    1554:	01 c0       	rjmp	.+2      	; 0x1558 <vfprintf+0x62a>
    1556:	80 e2       	ldi	r24, 0x20	; 32
    1558:	37 fd       	sbrc	r19, 7
    155a:	8d e2       	ldi	r24, 0x2D	; 45
    155c:	b6 01       	movw	r22, r12
    155e:	90 e0       	ldi	r25, 0x00	; 0
    1560:	0e 94 6b 0c 	call	0x18d6	; 0x18d6 <fputc>
    1564:	e1 16       	cp	r14, r17
    1566:	38 f4       	brcc	.+14     	; 0x1576 <vfprintf+0x648>
    1568:	b6 01       	movw	r22, r12
    156a:	80 e3       	ldi	r24, 0x30	; 48
    156c:	90 e0       	ldi	r25, 0x00	; 0
    156e:	0e 94 6b 0c 	call	0x18d6	; 0x18d6 <fputc>
    1572:	11 50       	subi	r17, 0x01	; 1
    1574:	f7 cf       	rjmp	.-18     	; 0x1564 <vfprintf+0x636>
    1576:	ea 94       	dec	r14
    1578:	f3 01       	movw	r30, r6
    157a:	ee 0d       	add	r30, r14
    157c:	f1 1d       	adc	r31, r1
    157e:	80 81       	ld	r24, Z
    1580:	b6 01       	movw	r22, r12
    1582:	90 e0       	ldi	r25, 0x00	; 0
    1584:	0e 94 6b 0c 	call	0x18d6	; 0x18d6 <fputc>
    1588:	e1 10       	cpse	r14, r1
    158a:	f5 cf       	rjmp	.-22     	; 0x1576 <vfprintf+0x648>
    158c:	14 c0       	rjmp	.+40     	; 0x15b6 <vfprintf+0x688>
    158e:	f4 e0       	ldi	r31, 0x04	; 4
    1590:	ff 15       	cp	r31, r15
    1592:	58 f5       	brcc	.+86     	; 0x15ea <vfprintf+0x6bc>
    1594:	84 e0       	ldi	r24, 0x04	; 4
    1596:	f8 1a       	sub	r15, r24
    1598:	33 fe       	sbrs	r3, 3
    159a:	1e c0       	rjmp	.+60     	; 0x15d8 <vfprintf+0x6aa>
    159c:	21 10       	cpse	r2, r1
    159e:	26 c0       	rjmp	.+76     	; 0x15ec <vfprintf+0x6be>
    15a0:	03 ff       	sbrs	r16, 3
    15a2:	2a c0       	rjmp	.+84     	; 0x15f8 <vfprintf+0x6ca>
    15a4:	08 e6       	ldi	r16, 0x68	; 104
    15a6:	10 e0       	ldi	r17, 0x00	; 0
    15a8:	f3 2d       	mov	r31, r3
    15aa:	f0 71       	andi	r31, 0x10	; 16
    15ac:	3f 2e       	mov	r3, r31
    15ae:	f8 01       	movw	r30, r16
    15b0:	84 91       	lpm	r24, Z
    15b2:	81 11       	cpse	r24, r1
    15b4:	24 c0       	rjmp	.+72     	; 0x15fe <vfprintf+0x6d0>
    15b6:	ff 20       	and	r15, r15
    15b8:	09 f4       	brne	.+2      	; 0x15bc <vfprintf+0x68e>
    15ba:	e5 cc       	rjmp	.-1590   	; 0xf86 <vfprintf+0x58>
    15bc:	b6 01       	movw	r22, r12
    15be:	80 e2       	ldi	r24, 0x20	; 32
    15c0:	90 e0       	ldi	r25, 0x00	; 0
    15c2:	0e 94 6b 0c 	call	0x18d6	; 0x18d6 <fputc>
    15c6:	fa 94       	dec	r15
    15c8:	f6 cf       	rjmp	.-20     	; 0x15b6 <vfprintf+0x688>
    15ca:	f6 01       	movw	r30, r12
    15cc:	86 81       	ldd	r24, Z+6	; 0x06
    15ce:	97 81       	ldd	r25, Z+7	; 0x07
    15d0:	26 c0       	rjmp	.+76     	; 0x161e <vfprintf+0x6f0>
    15d2:	8f ef       	ldi	r24, 0xFF	; 255
    15d4:	9f ef       	ldi	r25, 0xFF	; 255
    15d6:	23 c0       	rjmp	.+70     	; 0x161e <vfprintf+0x6f0>
    15d8:	b6 01       	movw	r22, r12
    15da:	80 e2       	ldi	r24, 0x20	; 32
    15dc:	90 e0       	ldi	r25, 0x00	; 0
    15de:	0e 94 6b 0c 	call	0x18d6	; 0x18d6 <fputc>
    15e2:	fa 94       	dec	r15
    15e4:	f1 10       	cpse	r15, r1
    15e6:	f8 cf       	rjmp	.-16     	; 0x15d8 <vfprintf+0x6aa>
    15e8:	d9 cf       	rjmp	.-78     	; 0x159c <vfprintf+0x66e>
    15ea:	f1 2c       	mov	r15, r1
    15ec:	b6 01       	movw	r22, r12
    15ee:	82 2d       	mov	r24, r2
    15f0:	90 e0       	ldi	r25, 0x00	; 0
    15f2:	0e 94 6b 0c 	call	0x18d6	; 0x18d6 <fputc>
    15f6:	d4 cf       	rjmp	.-88     	; 0x15a0 <vfprintf+0x672>
    15f8:	0c e6       	ldi	r16, 0x6C	; 108
    15fa:	10 e0       	ldi	r17, 0x00	; 0
    15fc:	d5 cf       	rjmp	.-86     	; 0x15a8 <vfprintf+0x67a>
    15fe:	31 10       	cpse	r3, r1
    1600:	80 52       	subi	r24, 0x20	; 32
    1602:	b6 01       	movw	r22, r12
    1604:	90 e0       	ldi	r25, 0x00	; 0
    1606:	0e 94 6b 0c 	call	0x18d6	; 0x18d6 <fputc>
    160a:	0f 5f       	subi	r16, 0xFF	; 255
    160c:	1f 4f       	sbci	r17, 0xFF	; 255
    160e:	cf cf       	rjmp	.-98     	; 0x15ae <vfprintf+0x680>
    1610:	23 e0       	ldi	r18, 0x03	; 3
    1612:	2f 15       	cp	r18, r15
    1614:	10 f4       	brcc	.+4      	; 0x161a <vfprintf+0x6ec>
    1616:	83 e0       	ldi	r24, 0x03	; 3
    1618:	be cf       	rjmp	.-132    	; 0x1596 <vfprintf+0x668>
    161a:	f1 2c       	mov	r15, r1
    161c:	c1 cf       	rjmp	.-126    	; 0x15a0 <vfprintf+0x672>
    161e:	63 96       	adiw	r28, 0x13	; 19
    1620:	e2 e1       	ldi	r30, 0x12	; 18
    1622:	0c 94 51 0b 	jmp	0x16a2	; 0x16a2 <__epilogue_restores__>

00001626 <__udivmodsi4>:
    1626:	a1 e2       	ldi	r26, 0x21	; 33
    1628:	1a 2e       	mov	r1, r26
    162a:	aa 1b       	sub	r26, r26
    162c:	bb 1b       	sub	r27, r27
    162e:	fd 01       	movw	r30, r26
    1630:	0d c0       	rjmp	.+26     	; 0x164c <__udivmodsi4_ep>

00001632 <__udivmodsi4_loop>:
    1632:	aa 1f       	adc	r26, r26
    1634:	bb 1f       	adc	r27, r27
    1636:	ee 1f       	adc	r30, r30
    1638:	ff 1f       	adc	r31, r31
    163a:	a2 17       	cp	r26, r18
    163c:	b3 07       	cpc	r27, r19
    163e:	e4 07       	cpc	r30, r20
    1640:	f5 07       	cpc	r31, r21
    1642:	20 f0       	brcs	.+8      	; 0x164c <__udivmodsi4_ep>
    1644:	a2 1b       	sub	r26, r18
    1646:	b3 0b       	sbc	r27, r19
    1648:	e4 0b       	sbc	r30, r20
    164a:	f5 0b       	sbc	r31, r21

0000164c <__udivmodsi4_ep>:
    164c:	66 1f       	adc	r22, r22
    164e:	77 1f       	adc	r23, r23
    1650:	88 1f       	adc	r24, r24
    1652:	99 1f       	adc	r25, r25
    1654:	1a 94       	dec	r1
    1656:	69 f7       	brne	.-38     	; 0x1632 <__udivmodsi4_loop>
    1658:	60 95       	com	r22
    165a:	70 95       	com	r23
    165c:	80 95       	com	r24
    165e:	90 95       	com	r25
    1660:	9b 01       	movw	r18, r22
    1662:	ac 01       	movw	r20, r24
    1664:	bd 01       	movw	r22, r26
    1666:	cf 01       	movw	r24, r30
    1668:	08 95       	ret

0000166a <__prologue_saves__>:
    166a:	2f 92       	push	r2
    166c:	3f 92       	push	r3
    166e:	4f 92       	push	r4
    1670:	5f 92       	push	r5
    1672:	6f 92       	push	r6
    1674:	7f 92       	push	r7
    1676:	8f 92       	push	r8
    1678:	9f 92       	push	r9
    167a:	af 92       	push	r10
    167c:	bf 92       	push	r11
    167e:	cf 92       	push	r12
    1680:	df 92       	push	r13
    1682:	ef 92       	push	r14
    1684:	ff 92       	push	r15
    1686:	0f 93       	push	r16
    1688:	1f 93       	push	r17
    168a:	cf 93       	push	r28
    168c:	df 93       	push	r29
    168e:	cd b7       	in	r28, 0x3d	; 61
    1690:	de b7       	in	r29, 0x3e	; 62
    1692:	ca 1b       	sub	r28, r26
    1694:	db 0b       	sbc	r29, r27
    1696:	0f b6       	in	r0, 0x3f	; 63
    1698:	f8 94       	cli
    169a:	de bf       	out	0x3e, r29	; 62
    169c:	0f be       	out	0x3f, r0	; 63
    169e:	cd bf       	out	0x3d, r28	; 61
    16a0:	09 94       	ijmp

000016a2 <__epilogue_restores__>:
    16a2:	2a 88       	ldd	r2, Y+18	; 0x12
    16a4:	39 88       	ldd	r3, Y+17	; 0x11
    16a6:	48 88       	ldd	r4, Y+16	; 0x10
    16a8:	5f 84       	ldd	r5, Y+15	; 0x0f
    16aa:	6e 84       	ldd	r6, Y+14	; 0x0e
    16ac:	7d 84       	ldd	r7, Y+13	; 0x0d
    16ae:	8c 84       	ldd	r8, Y+12	; 0x0c
    16b0:	9b 84       	ldd	r9, Y+11	; 0x0b
    16b2:	aa 84       	ldd	r10, Y+10	; 0x0a
    16b4:	b9 84       	ldd	r11, Y+9	; 0x09
    16b6:	c8 84       	ldd	r12, Y+8	; 0x08
    16b8:	df 80       	ldd	r13, Y+7	; 0x07
    16ba:	ee 80       	ldd	r14, Y+6	; 0x06
    16bc:	fd 80       	ldd	r15, Y+5	; 0x05
    16be:	0c 81       	ldd	r16, Y+4	; 0x04
    16c0:	1b 81       	ldd	r17, Y+3	; 0x03
    16c2:	aa 81       	ldd	r26, Y+2	; 0x02
    16c4:	b9 81       	ldd	r27, Y+1	; 0x01
    16c6:	ce 0f       	add	r28, r30
    16c8:	d1 1d       	adc	r29, r1
    16ca:	0f b6       	in	r0, 0x3f	; 63
    16cc:	f8 94       	cli
    16ce:	de bf       	out	0x3e, r29	; 62
    16d0:	0f be       	out	0x3f, r0	; 63
    16d2:	cd bf       	out	0x3d, r28	; 61
    16d4:	ed 01       	movw	r28, r26
    16d6:	08 95       	ret

000016d8 <__tablejump2__>:
    16d8:	ee 0f       	add	r30, r30
    16da:	ff 1f       	adc	r31, r31
    16dc:	05 90       	lpm	r0, Z+
    16de:	f4 91       	lpm	r31, Z
    16e0:	e0 2d       	mov	r30, r0
    16e2:	09 94       	ijmp

000016e4 <__ftoa_engine>:
    16e4:	28 30       	cpi	r18, 0x08	; 8
    16e6:	08 f0       	brcs	.+2      	; 0x16ea <__ftoa_engine+0x6>
    16e8:	27 e0       	ldi	r18, 0x07	; 7
    16ea:	33 27       	eor	r19, r19
    16ec:	da 01       	movw	r26, r20
    16ee:	99 0f       	add	r25, r25
    16f0:	31 1d       	adc	r19, r1
    16f2:	87 fd       	sbrc	r24, 7
    16f4:	91 60       	ori	r25, 0x01	; 1
    16f6:	00 96       	adiw	r24, 0x00	; 0
    16f8:	61 05       	cpc	r22, r1
    16fa:	71 05       	cpc	r23, r1
    16fc:	39 f4       	brne	.+14     	; 0x170c <__ftoa_engine+0x28>
    16fe:	32 60       	ori	r19, 0x02	; 2
    1700:	2e 5f       	subi	r18, 0xFE	; 254
    1702:	3d 93       	st	X+, r19
    1704:	30 e3       	ldi	r19, 0x30	; 48
    1706:	2a 95       	dec	r18
    1708:	e1 f7       	brne	.-8      	; 0x1702 <__ftoa_engine+0x1e>
    170a:	08 95       	ret
    170c:	9f 3f       	cpi	r25, 0xFF	; 255
    170e:	30 f0       	brcs	.+12     	; 0x171c <__ftoa_engine+0x38>
    1710:	80 38       	cpi	r24, 0x80	; 128
    1712:	71 05       	cpc	r23, r1
    1714:	61 05       	cpc	r22, r1
    1716:	09 f0       	breq	.+2      	; 0x171a <__ftoa_engine+0x36>
    1718:	3c 5f       	subi	r19, 0xFC	; 252
    171a:	3c 5f       	subi	r19, 0xFC	; 252
    171c:	3d 93       	st	X+, r19
    171e:	91 30       	cpi	r25, 0x01	; 1
    1720:	08 f0       	brcs	.+2      	; 0x1724 <__ftoa_engine+0x40>
    1722:	80 68       	ori	r24, 0x80	; 128
    1724:	91 1d       	adc	r25, r1
    1726:	df 93       	push	r29
    1728:	cf 93       	push	r28
    172a:	1f 93       	push	r17
    172c:	0f 93       	push	r16
    172e:	ff 92       	push	r15
    1730:	ef 92       	push	r14
    1732:	19 2f       	mov	r17, r25
    1734:	98 7f       	andi	r25, 0xF8	; 248
    1736:	96 95       	lsr	r25
    1738:	e9 2f       	mov	r30, r25
    173a:	96 95       	lsr	r25
    173c:	96 95       	lsr	r25
    173e:	e9 0f       	add	r30, r25
    1740:	ff 27       	eor	r31, r31
    1742:	e6 53       	subi	r30, 0x36	; 54
    1744:	ff 4f       	sbci	r31, 0xFF	; 255
    1746:	99 27       	eor	r25, r25
    1748:	33 27       	eor	r19, r19
    174a:	ee 24       	eor	r14, r14
    174c:	ff 24       	eor	r15, r15
    174e:	a7 01       	movw	r20, r14
    1750:	e7 01       	movw	r28, r14
    1752:	05 90       	lpm	r0, Z+
    1754:	08 94       	sec
    1756:	07 94       	ror	r0
    1758:	28 f4       	brcc	.+10     	; 0x1764 <__ftoa_engine+0x80>
    175a:	36 0f       	add	r19, r22
    175c:	e7 1e       	adc	r14, r23
    175e:	f8 1e       	adc	r15, r24
    1760:	49 1f       	adc	r20, r25
    1762:	51 1d       	adc	r21, r1
    1764:	66 0f       	add	r22, r22
    1766:	77 1f       	adc	r23, r23
    1768:	88 1f       	adc	r24, r24
    176a:	99 1f       	adc	r25, r25
    176c:	06 94       	lsr	r0
    176e:	a1 f7       	brne	.-24     	; 0x1758 <__ftoa_engine+0x74>
    1770:	05 90       	lpm	r0, Z+
    1772:	07 94       	ror	r0
    1774:	28 f4       	brcc	.+10     	; 0x1780 <__ftoa_engine+0x9c>
    1776:	e7 0e       	add	r14, r23
    1778:	f8 1e       	adc	r15, r24
    177a:	49 1f       	adc	r20, r25
    177c:	56 1f       	adc	r21, r22
    177e:	c1 1d       	adc	r28, r1
    1780:	77 0f       	add	r23, r23
    1782:	88 1f       	adc	r24, r24
    1784:	99 1f       	adc	r25, r25
    1786:	66 1f       	adc	r22, r22
    1788:	06 94       	lsr	r0
    178a:	a1 f7       	brne	.-24     	; 0x1774 <__ftoa_engine+0x90>
    178c:	05 90       	lpm	r0, Z+
    178e:	07 94       	ror	r0
    1790:	28 f4       	brcc	.+10     	; 0x179c <__ftoa_engine+0xb8>
    1792:	f8 0e       	add	r15, r24
    1794:	49 1f       	adc	r20, r25
    1796:	56 1f       	adc	r21, r22
    1798:	c7 1f       	adc	r28, r23
    179a:	d1 1d       	adc	r29, r1
    179c:	88 0f       	add	r24, r24
    179e:	99 1f       	adc	r25, r25
    17a0:	66 1f       	adc	r22, r22
    17a2:	77 1f       	adc	r23, r23
    17a4:	06 94       	lsr	r0
    17a6:	a1 f7       	brne	.-24     	; 0x1790 <__ftoa_engine+0xac>
    17a8:	05 90       	lpm	r0, Z+
    17aa:	07 94       	ror	r0
    17ac:	20 f4       	brcc	.+8      	; 0x17b6 <__ftoa_engine+0xd2>
    17ae:	49 0f       	add	r20, r25
    17b0:	56 1f       	adc	r21, r22
    17b2:	c7 1f       	adc	r28, r23
    17b4:	d8 1f       	adc	r29, r24
    17b6:	99 0f       	add	r25, r25
    17b8:	66 1f       	adc	r22, r22
    17ba:	77 1f       	adc	r23, r23
    17bc:	88 1f       	adc	r24, r24
    17be:	06 94       	lsr	r0
    17c0:	a9 f7       	brne	.-22     	; 0x17ac <__ftoa_engine+0xc8>
    17c2:	84 91       	lpm	r24, Z
    17c4:	10 95       	com	r17
    17c6:	17 70       	andi	r17, 0x07	; 7
    17c8:	41 f0       	breq	.+16     	; 0x17da <__ftoa_engine+0xf6>
    17ca:	d6 95       	lsr	r29
    17cc:	c7 95       	ror	r28
    17ce:	57 95       	ror	r21
    17d0:	47 95       	ror	r20
    17d2:	f7 94       	ror	r15
    17d4:	e7 94       	ror	r14
    17d6:	1a 95       	dec	r17
    17d8:	c1 f7       	brne	.-16     	; 0x17ca <__ftoa_engine+0xe6>
    17da:	e0 e7       	ldi	r30, 0x70	; 112
    17dc:	f0 e0       	ldi	r31, 0x00	; 0
    17de:	68 94       	set
    17e0:	15 90       	lpm	r1, Z+
    17e2:	15 91       	lpm	r17, Z+
    17e4:	35 91       	lpm	r19, Z+
    17e6:	65 91       	lpm	r22, Z+
    17e8:	95 91       	lpm	r25, Z+
    17ea:	05 90       	lpm	r0, Z+
    17ec:	7f e2       	ldi	r23, 0x2F	; 47
    17ee:	73 95       	inc	r23
    17f0:	e1 18       	sub	r14, r1
    17f2:	f1 0a       	sbc	r15, r17
    17f4:	43 0b       	sbc	r20, r19
    17f6:	56 0b       	sbc	r21, r22
    17f8:	c9 0b       	sbc	r28, r25
    17fa:	d0 09       	sbc	r29, r0
    17fc:	c0 f7       	brcc	.-16     	; 0x17ee <__ftoa_engine+0x10a>
    17fe:	e1 0c       	add	r14, r1
    1800:	f1 1e       	adc	r15, r17
    1802:	43 1f       	adc	r20, r19
    1804:	56 1f       	adc	r21, r22
    1806:	c9 1f       	adc	r28, r25
    1808:	d0 1d       	adc	r29, r0
    180a:	7e f4       	brtc	.+30     	; 0x182a <__ftoa_engine+0x146>
    180c:	70 33       	cpi	r23, 0x30	; 48
    180e:	11 f4       	brne	.+4      	; 0x1814 <__ftoa_engine+0x130>
    1810:	8a 95       	dec	r24
    1812:	e6 cf       	rjmp	.-52     	; 0x17e0 <__ftoa_engine+0xfc>
    1814:	e8 94       	clt
    1816:	01 50       	subi	r16, 0x01	; 1
    1818:	30 f0       	brcs	.+12     	; 0x1826 <__ftoa_engine+0x142>
    181a:	08 0f       	add	r16, r24
    181c:	0a f4       	brpl	.+2      	; 0x1820 <__ftoa_engine+0x13c>
    181e:	00 27       	eor	r16, r16
    1820:	02 17       	cp	r16, r18
    1822:	08 f4       	brcc	.+2      	; 0x1826 <__ftoa_engine+0x142>
    1824:	20 2f       	mov	r18, r16
    1826:	23 95       	inc	r18
    1828:	02 2f       	mov	r16, r18
    182a:	7a 33       	cpi	r23, 0x3A	; 58
    182c:	28 f0       	brcs	.+10     	; 0x1838 <__ftoa_engine+0x154>
    182e:	79 e3       	ldi	r23, 0x39	; 57
    1830:	7d 93       	st	X+, r23
    1832:	2a 95       	dec	r18
    1834:	e9 f7       	brne	.-6      	; 0x1830 <__ftoa_engine+0x14c>
    1836:	10 c0       	rjmp	.+32     	; 0x1858 <__ftoa_engine+0x174>
    1838:	7d 93       	st	X+, r23
    183a:	2a 95       	dec	r18
    183c:	89 f6       	brne	.-94     	; 0x17e0 <__ftoa_engine+0xfc>
    183e:	06 94       	lsr	r0
    1840:	97 95       	ror	r25
    1842:	67 95       	ror	r22
    1844:	37 95       	ror	r19
    1846:	17 95       	ror	r17
    1848:	17 94       	ror	r1
    184a:	e1 18       	sub	r14, r1
    184c:	f1 0a       	sbc	r15, r17
    184e:	43 0b       	sbc	r20, r19
    1850:	56 0b       	sbc	r21, r22
    1852:	c9 0b       	sbc	r28, r25
    1854:	d0 09       	sbc	r29, r0
    1856:	98 f0       	brcs	.+38     	; 0x187e <__ftoa_engine+0x19a>
    1858:	23 95       	inc	r18
    185a:	7e 91       	ld	r23, -X
    185c:	73 95       	inc	r23
    185e:	7a 33       	cpi	r23, 0x3A	; 58
    1860:	08 f0       	brcs	.+2      	; 0x1864 <__ftoa_engine+0x180>
    1862:	70 e3       	ldi	r23, 0x30	; 48
    1864:	7c 93       	st	X, r23
    1866:	20 13       	cpse	r18, r16
    1868:	b8 f7       	brcc	.-18     	; 0x1858 <__ftoa_engine+0x174>
    186a:	7e 91       	ld	r23, -X
    186c:	70 61       	ori	r23, 0x10	; 16
    186e:	7d 93       	st	X+, r23
    1870:	30 f0       	brcs	.+12     	; 0x187e <__ftoa_engine+0x19a>
    1872:	83 95       	inc	r24
    1874:	71 e3       	ldi	r23, 0x31	; 49
    1876:	7d 93       	st	X+, r23
    1878:	70 e3       	ldi	r23, 0x30	; 48
    187a:	2a 95       	dec	r18
    187c:	e1 f7       	brne	.-8      	; 0x1876 <__ftoa_engine+0x192>
    187e:	11 24       	eor	r1, r1
    1880:	ef 90       	pop	r14
    1882:	ff 90       	pop	r15
    1884:	0f 91       	pop	r16
    1886:	1f 91       	pop	r17
    1888:	cf 91       	pop	r28
    188a:	df 91       	pop	r29
    188c:	99 27       	eor	r25, r25
    188e:	87 fd       	sbrc	r24, 7
    1890:	90 95       	com	r25
    1892:	08 95       	ret

00001894 <strnlen_P>:
    1894:	fc 01       	movw	r30, r24
    1896:	05 90       	lpm	r0, Z+
    1898:	61 50       	subi	r22, 0x01	; 1
    189a:	70 40       	sbci	r23, 0x00	; 0
    189c:	01 10       	cpse	r0, r1
    189e:	d8 f7       	brcc	.-10     	; 0x1896 <strnlen_P+0x2>
    18a0:	80 95       	com	r24
    18a2:	90 95       	com	r25
    18a4:	8e 0f       	add	r24, r30
    18a6:	9f 1f       	adc	r25, r31
    18a8:	08 95       	ret

000018aa <strcat>:
    18aa:	fb 01       	movw	r30, r22
    18ac:	dc 01       	movw	r26, r24
    18ae:	0d 90       	ld	r0, X+
    18b0:	00 20       	and	r0, r0
    18b2:	e9 f7       	brne	.-6      	; 0x18ae <strcat+0x4>
    18b4:	11 97       	sbiw	r26, 0x01	; 1
    18b6:	01 90       	ld	r0, Z+
    18b8:	0d 92       	st	X+, r0
    18ba:	00 20       	and	r0, r0
    18bc:	e1 f7       	brne	.-8      	; 0x18b6 <strcat+0xc>
    18be:	08 95       	ret

000018c0 <strnlen>:
    18c0:	fc 01       	movw	r30, r24
    18c2:	61 50       	subi	r22, 0x01	; 1
    18c4:	70 40       	sbci	r23, 0x00	; 0
    18c6:	01 90       	ld	r0, Z+
    18c8:	01 10       	cpse	r0, r1
    18ca:	d8 f7       	brcc	.-10     	; 0x18c2 <strnlen+0x2>
    18cc:	80 95       	com	r24
    18ce:	90 95       	com	r25
    18d0:	8e 0f       	add	r24, r30
    18d2:	9f 1f       	adc	r25, r31
    18d4:	08 95       	ret

000018d6 <fputc>:
    18d6:	0f 93       	push	r16
    18d8:	1f 93       	push	r17
    18da:	cf 93       	push	r28
    18dc:	df 93       	push	r29
    18de:	fb 01       	movw	r30, r22
    18e0:	23 81       	ldd	r18, Z+3	; 0x03
    18e2:	21 fd       	sbrc	r18, 1
    18e4:	03 c0       	rjmp	.+6      	; 0x18ec <fputc+0x16>
    18e6:	8f ef       	ldi	r24, 0xFF	; 255
    18e8:	9f ef       	ldi	r25, 0xFF	; 255
    18ea:	28 c0       	rjmp	.+80     	; 0x193c <fputc+0x66>
    18ec:	22 ff       	sbrs	r18, 2
    18ee:	16 c0       	rjmp	.+44     	; 0x191c <fputc+0x46>
    18f0:	46 81       	ldd	r20, Z+6	; 0x06
    18f2:	57 81       	ldd	r21, Z+7	; 0x07
    18f4:	24 81       	ldd	r18, Z+4	; 0x04
    18f6:	35 81       	ldd	r19, Z+5	; 0x05
    18f8:	42 17       	cp	r20, r18
    18fa:	53 07       	cpc	r21, r19
    18fc:	44 f4       	brge	.+16     	; 0x190e <fputc+0x38>
    18fe:	a0 81       	ld	r26, Z
    1900:	b1 81       	ldd	r27, Z+1	; 0x01
    1902:	9d 01       	movw	r18, r26
    1904:	2f 5f       	subi	r18, 0xFF	; 255
    1906:	3f 4f       	sbci	r19, 0xFF	; 255
    1908:	31 83       	std	Z+1, r19	; 0x01
    190a:	20 83       	st	Z, r18
    190c:	8c 93       	st	X, r24
    190e:	26 81       	ldd	r18, Z+6	; 0x06
    1910:	37 81       	ldd	r19, Z+7	; 0x07
    1912:	2f 5f       	subi	r18, 0xFF	; 255
    1914:	3f 4f       	sbci	r19, 0xFF	; 255
    1916:	37 83       	std	Z+7, r19	; 0x07
    1918:	26 83       	std	Z+6, r18	; 0x06
    191a:	10 c0       	rjmp	.+32     	; 0x193c <fputc+0x66>
    191c:	eb 01       	movw	r28, r22
    191e:	09 2f       	mov	r16, r25
    1920:	18 2f       	mov	r17, r24
    1922:	00 84       	ldd	r0, Z+8	; 0x08
    1924:	f1 85       	ldd	r31, Z+9	; 0x09
    1926:	e0 2d       	mov	r30, r0
    1928:	09 95       	icall
    192a:	89 2b       	or	r24, r25
    192c:	e1 f6       	brne	.-72     	; 0x18e6 <fputc+0x10>
    192e:	8e 81       	ldd	r24, Y+6	; 0x06
    1930:	9f 81       	ldd	r25, Y+7	; 0x07
    1932:	01 96       	adiw	r24, 0x01	; 1
    1934:	9f 83       	std	Y+7, r25	; 0x07
    1936:	8e 83       	std	Y+6, r24	; 0x06
    1938:	81 2f       	mov	r24, r17
    193a:	90 2f       	mov	r25, r16
    193c:	df 91       	pop	r29
    193e:	cf 91       	pop	r28
    1940:	1f 91       	pop	r17
    1942:	0f 91       	pop	r16
    1944:	08 95       	ret

00001946 <sprintf>:
    1946:	ae e0       	ldi	r26, 0x0E	; 14
    1948:	b0 e0       	ldi	r27, 0x00	; 0
    194a:	e9 ea       	ldi	r30, 0xA9	; 169
    194c:	fc e0       	ldi	r31, 0x0C	; 12
    194e:	0c 94 43 0b 	jmp	0x1686	; 0x1686 <__prologue_saves__+0x1c>
    1952:	0d 89       	ldd	r16, Y+21	; 0x15
    1954:	1e 89       	ldd	r17, Y+22	; 0x16
    1956:	86 e0       	ldi	r24, 0x06	; 6
    1958:	8c 83       	std	Y+4, r24	; 0x04
    195a:	1a 83       	std	Y+2, r17	; 0x02
    195c:	09 83       	std	Y+1, r16	; 0x01
    195e:	8f ef       	ldi	r24, 0xFF	; 255
    1960:	9f e7       	ldi	r25, 0x7F	; 127
    1962:	9e 83       	std	Y+6, r25	; 0x06
    1964:	8d 83       	std	Y+5, r24	; 0x05
    1966:	ae 01       	movw	r20, r28
    1968:	47 5e       	subi	r20, 0xE7	; 231
    196a:	5f 4f       	sbci	r21, 0xFF	; 255
    196c:	6f 89       	ldd	r22, Y+23	; 0x17
    196e:	78 8d       	ldd	r23, Y+24	; 0x18
    1970:	ce 01       	movw	r24, r28
    1972:	01 96       	adiw	r24, 0x01	; 1
    1974:	0e 94 97 07 	call	0xf2e	; 0xf2e <vfprintf>
    1978:	2f 81       	ldd	r18, Y+7	; 0x07
    197a:	38 85       	ldd	r19, Y+8	; 0x08
    197c:	f8 01       	movw	r30, r16
    197e:	e2 0f       	add	r30, r18
    1980:	f3 1f       	adc	r31, r19
    1982:	10 82       	st	Z, r1
    1984:	2e 96       	adiw	r28, 0x0e	; 14
    1986:	e4 e0       	ldi	r30, 0x04	; 4
    1988:	0c 94 5f 0b 	jmp	0x16be	; 0x16be <__epilogue_restores__+0x1c>

0000198c <__ultoa_invert>:
    198c:	fa 01       	movw	r30, r20
    198e:	aa 27       	eor	r26, r26
    1990:	28 30       	cpi	r18, 0x08	; 8
    1992:	51 f1       	breq	.+84     	; 0x19e8 <__ultoa_invert+0x5c>
    1994:	20 31       	cpi	r18, 0x10	; 16
    1996:	81 f1       	breq	.+96     	; 0x19f8 <__ultoa_invert+0x6c>
    1998:	e8 94       	clt
    199a:	6f 93       	push	r22
    199c:	6e 7f       	andi	r22, 0xFE	; 254
    199e:	6e 5f       	subi	r22, 0xFE	; 254
    19a0:	7f 4f       	sbci	r23, 0xFF	; 255
    19a2:	8f 4f       	sbci	r24, 0xFF	; 255
    19a4:	9f 4f       	sbci	r25, 0xFF	; 255
    19a6:	af 4f       	sbci	r26, 0xFF	; 255
    19a8:	b1 e0       	ldi	r27, 0x01	; 1
    19aa:	3e d0       	rcall	.+124    	; 0x1a28 <__ultoa_invert+0x9c>
    19ac:	b4 e0       	ldi	r27, 0x04	; 4
    19ae:	3c d0       	rcall	.+120    	; 0x1a28 <__ultoa_invert+0x9c>
    19b0:	67 0f       	add	r22, r23
    19b2:	78 1f       	adc	r23, r24
    19b4:	89 1f       	adc	r24, r25
    19b6:	9a 1f       	adc	r25, r26
    19b8:	a1 1d       	adc	r26, r1
    19ba:	68 0f       	add	r22, r24
    19bc:	79 1f       	adc	r23, r25
    19be:	8a 1f       	adc	r24, r26
    19c0:	91 1d       	adc	r25, r1
    19c2:	a1 1d       	adc	r26, r1
    19c4:	6a 0f       	add	r22, r26
    19c6:	71 1d       	adc	r23, r1
    19c8:	81 1d       	adc	r24, r1
    19ca:	91 1d       	adc	r25, r1
    19cc:	a1 1d       	adc	r26, r1
    19ce:	20 d0       	rcall	.+64     	; 0x1a10 <__ultoa_invert+0x84>
    19d0:	09 f4       	brne	.+2      	; 0x19d4 <__ultoa_invert+0x48>
    19d2:	68 94       	set
    19d4:	3f 91       	pop	r19
    19d6:	2a e0       	ldi	r18, 0x0A	; 10
    19d8:	26 9f       	mul	r18, r22
    19da:	11 24       	eor	r1, r1
    19dc:	30 19       	sub	r19, r0
    19de:	30 5d       	subi	r19, 0xD0	; 208
    19e0:	31 93       	st	Z+, r19
    19e2:	de f6       	brtc	.-74     	; 0x199a <__ultoa_invert+0xe>
    19e4:	cf 01       	movw	r24, r30
    19e6:	08 95       	ret
    19e8:	46 2f       	mov	r20, r22
    19ea:	47 70       	andi	r20, 0x07	; 7
    19ec:	40 5d       	subi	r20, 0xD0	; 208
    19ee:	41 93       	st	Z+, r20
    19f0:	b3 e0       	ldi	r27, 0x03	; 3
    19f2:	0f d0       	rcall	.+30     	; 0x1a12 <__ultoa_invert+0x86>
    19f4:	c9 f7       	brne	.-14     	; 0x19e8 <__ultoa_invert+0x5c>
    19f6:	f6 cf       	rjmp	.-20     	; 0x19e4 <__ultoa_invert+0x58>
    19f8:	46 2f       	mov	r20, r22
    19fa:	4f 70       	andi	r20, 0x0F	; 15
    19fc:	40 5d       	subi	r20, 0xD0	; 208
    19fe:	4a 33       	cpi	r20, 0x3A	; 58
    1a00:	18 f0       	brcs	.+6      	; 0x1a08 <__ultoa_invert+0x7c>
    1a02:	49 5d       	subi	r20, 0xD9	; 217
    1a04:	31 fd       	sbrc	r19, 1
    1a06:	40 52       	subi	r20, 0x20	; 32
    1a08:	41 93       	st	Z+, r20
    1a0a:	02 d0       	rcall	.+4      	; 0x1a10 <__ultoa_invert+0x84>
    1a0c:	a9 f7       	brne	.-22     	; 0x19f8 <__ultoa_invert+0x6c>
    1a0e:	ea cf       	rjmp	.-44     	; 0x19e4 <__ultoa_invert+0x58>
    1a10:	b4 e0       	ldi	r27, 0x04	; 4
    1a12:	a6 95       	lsr	r26
    1a14:	97 95       	ror	r25
    1a16:	87 95       	ror	r24
    1a18:	77 95       	ror	r23
    1a1a:	67 95       	ror	r22
    1a1c:	ba 95       	dec	r27
    1a1e:	c9 f7       	brne	.-14     	; 0x1a12 <__ultoa_invert+0x86>
    1a20:	00 97       	sbiw	r24, 0x00	; 0
    1a22:	61 05       	cpc	r22, r1
    1a24:	71 05       	cpc	r23, r1
    1a26:	08 95       	ret
    1a28:	9b 01       	movw	r18, r22
    1a2a:	ac 01       	movw	r20, r24
    1a2c:	0a 2e       	mov	r0, r26
    1a2e:	06 94       	lsr	r0
    1a30:	57 95       	ror	r21
    1a32:	47 95       	ror	r20
    1a34:	37 95       	ror	r19
    1a36:	27 95       	ror	r18
    1a38:	ba 95       	dec	r27
    1a3a:	c9 f7       	brne	.-14     	; 0x1a2e <__ultoa_invert+0xa2>
    1a3c:	62 0f       	add	r22, r18
    1a3e:	73 1f       	adc	r23, r19
    1a40:	84 1f       	adc	r24, r20
    1a42:	95 1f       	adc	r25, r21
    1a44:	a0 1d       	adc	r26, r0
    1a46:	08 95       	ret

00001a48 <_exit>:
    1a48:	f8 94       	cli

00001a4a <__stop_program>:
    1a4a:	ff cf       	rjmp	.-2      	; 0x1a4a <__stop_program>

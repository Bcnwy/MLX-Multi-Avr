
MLX Multi.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000046  00800100  00001962  000019f6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001962  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000040  00800146  00800146  00001a3c  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001a3c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001a98  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000188  00000000  00000000  00001ad8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000021b4  00000000  00000000  00001c60  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000bc1  00000000  00000000  00003e14  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000007b7  00000000  00000000  000049d5  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000041c  00000000  00000000  0000518c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000876  00000000  00000000  000055a8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000010f7  00000000  00000000  00005e1e  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000168  00000000  00000000  00006f15  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 b6 00 	jmp	0x16c	; 0x16c <__ctors_end>
       4:	0c 94 de 00 	jmp	0x1bc	; 0x1bc <__bad_interrupt>
       8:	0c 94 de 00 	jmp	0x1bc	; 0x1bc <__bad_interrupt>
       c:	0c 94 de 00 	jmp	0x1bc	; 0x1bc <__bad_interrupt>
      10:	0c 94 de 00 	jmp	0x1bc	; 0x1bc <__bad_interrupt>
      14:	0c 94 de 00 	jmp	0x1bc	; 0x1bc <__bad_interrupt>
      18:	0c 94 de 00 	jmp	0x1bc	; 0x1bc <__bad_interrupt>
      1c:	0c 94 de 00 	jmp	0x1bc	; 0x1bc <__bad_interrupt>
      20:	0c 94 de 00 	jmp	0x1bc	; 0x1bc <__bad_interrupt>
      24:	0c 94 de 00 	jmp	0x1bc	; 0x1bc <__bad_interrupt>
      28:	0c 94 de 00 	jmp	0x1bc	; 0x1bc <__bad_interrupt>
      2c:	0c 94 de 00 	jmp	0x1bc	; 0x1bc <__bad_interrupt>
      30:	0c 94 de 00 	jmp	0x1bc	; 0x1bc <__bad_interrupt>
      34:	0c 94 13 02 	jmp	0x426	; 0x426 <__vector_13>
      38:	0c 94 ee 01 	jmp	0x3dc	; 0x3dc <__vector_14>
      3c:	0c 94 de 00 	jmp	0x1bc	; 0x1bc <__bad_interrupt>
      40:	0c 94 de 00 	jmp	0x1bc	; 0x1bc <__bad_interrupt>
      44:	0c 94 de 00 	jmp	0x1bc	; 0x1bc <__bad_interrupt>
      48:	0c 94 de 00 	jmp	0x1bc	; 0x1bc <__bad_interrupt>
      4c:	0c 94 de 00 	jmp	0x1bc	; 0x1bc <__bad_interrupt>
      50:	0c 94 de 00 	jmp	0x1bc	; 0x1bc <__bad_interrupt>
      54:	0c 94 de 00 	jmp	0x1bc	; 0x1bc <__bad_interrupt>
      58:	0c 94 de 00 	jmp	0x1bc	; 0x1bc <__bad_interrupt>
      5c:	0c 94 de 00 	jmp	0x1bc	; 0x1bc <__bad_interrupt>
      60:	0c 94 de 00 	jmp	0x1bc	; 0x1bc <__bad_interrupt>
      64:	0c 94 de 00 	jmp	0x1bc	; 0x1bc <__bad_interrupt>

00000068 <__trampolines_end>:
      68:	6e 61       	ori	r22, 0x1E	; 30
      6a:	6e 00       	.word	0x006e	; ????

0000006c <__c.2177>:
      6c:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      7c:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
      8c:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
      9c:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
      ac:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
      bc:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
      cc:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
      dc:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
      ec:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
      fc:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     10c:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     11c:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     12c:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     13c:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     14c:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     15c:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

0000016a <__ctors_start>:
     16a:	d2 03       	fmuls	r21, r18

0000016c <__ctors_end>:
     16c:	11 24       	eor	r1, r1
     16e:	1f be       	out	0x3f, r1	; 63
     170:	cf ef       	ldi	r28, 0xFF	; 255
     172:	d8 e0       	ldi	r29, 0x08	; 8
     174:	de bf       	out	0x3e, r29	; 62
     176:	cd bf       	out	0x3d, r28	; 61

00000178 <__do_copy_data>:
     178:	11 e0       	ldi	r17, 0x01	; 1
     17a:	a0 e0       	ldi	r26, 0x00	; 0
     17c:	b1 e0       	ldi	r27, 0x01	; 1
     17e:	e2 e6       	ldi	r30, 0x62	; 98
     180:	f9 e1       	ldi	r31, 0x19	; 25
     182:	02 c0       	rjmp	.+4      	; 0x188 <__do_copy_data+0x10>
     184:	05 90       	lpm	r0, Z+
     186:	0d 92       	st	X+, r0
     188:	a6 34       	cpi	r26, 0x46	; 70
     18a:	b1 07       	cpc	r27, r17
     18c:	d9 f7       	brne	.-10     	; 0x184 <__do_copy_data+0xc>

0000018e <__do_clear_bss>:
     18e:	21 e0       	ldi	r18, 0x01	; 1
     190:	a6 e4       	ldi	r26, 0x46	; 70
     192:	b1 e0       	ldi	r27, 0x01	; 1
     194:	01 c0       	rjmp	.+2      	; 0x198 <.do_clear_bss_start>

00000196 <.do_clear_bss_loop>:
     196:	1d 92       	st	X+, r1

00000198 <.do_clear_bss_start>:
     198:	a6 38       	cpi	r26, 0x86	; 134
     19a:	b2 07       	cpc	r27, r18
     19c:	e1 f7       	brne	.-8      	; 0x196 <.do_clear_bss_loop>

0000019e <__do_global_ctors>:
     19e:	10 e0       	ldi	r17, 0x00	; 0
     1a0:	c6 eb       	ldi	r28, 0xB6	; 182
     1a2:	d0 e0       	ldi	r29, 0x00	; 0
     1a4:	04 c0       	rjmp	.+8      	; 0x1ae <__do_global_ctors+0x10>
     1a6:	21 97       	sbiw	r28, 0x01	; 1
     1a8:	fe 01       	movw	r30, r28
     1aa:	0e 94 f7 0a 	call	0x15ee	; 0x15ee <__tablejump2__>
     1ae:	c5 3b       	cpi	r28, 0xB5	; 181
     1b0:	d1 07       	cpc	r29, r17
     1b2:	c9 f7       	brne	.-14     	; 0x1a6 <__do_global_ctors+0x8>
     1b4:	0e 94 a8 03 	call	0x750	; 0x750 <main>
     1b8:	0c 94 af 0c 	jmp	0x195e	; 0x195e <_exit>

000001bc <__bad_interrupt>:
     1bc:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001c0 <_ZN17Adafruit_MLX90614C1Eh>:
 ****************************************************/

#include "Adafruit_MLX90614.h"
#include "uart.h"
  
Adafruit_MLX90614::Adafruit_MLX90614(uint8_t i2caddr) {
     1c0:	1f 93       	push	r17
     1c2:	cf 93       	push	r28
     1c4:	df 93       	push	r29
     1c6:	ec 01       	movw	r28, r24
     1c8:	16 2f       	mov	r17, r22
	  }
 class I2c
 {
 public:
    I2c()
    {
     1ca:	18 86       	std	Y+8, r1	; 0x08
     1cc:	19 86       	std	Y+9, r1	; 0x09
	    i2c_init();
     1ce:	0e 94 e7 03 	call	0x7ce	; 0x7ce <i2c_init>
  _addr = i2caddr;
     1d2:	1a 87       	std	Y+10, r17	; 0x0a
}
     1d4:	df 91       	pop	r29
     1d6:	cf 91       	pop	r28
     1d8:	1f 91       	pop	r17
     1da:	08 95       	ret

000001dc <_ZN17Adafruit_MLX906146read16Eh>:
  return temp;
}

/*********************************************************************/

uint16_t Adafruit_MLX90614::read16(uint8_t a) {
     1dc:	0f 93       	push	r16
     1de:	1f 93       	push	r17
     1e0:	cf 93       	push	r28
     1e2:	8c 01       	movw	r16, r24
     1e4:	c6 2f       	mov	r28, r22
  uint16_t ret;
  Wire.beginTransmission(_addr); // start transmission to device 
     1e6:	fc 01       	movw	r30, r24
     1e8:	82 85       	ldd	r24, Z+10	; 0x0a
    }
     void beginTransmission(uint8_t address)
     {
         m_bufferIndex = 0;
     1ea:	10 86       	std	Z+8, r1	; 0x08

         i2c_start((address << 1) | I2C_WRITE);
     1ec:	88 0f       	add	r24, r24
     1ee:	0e 94 f0 03 	call	0x7e0	; 0x7e0 <i2c_start>
     }

     void write(uint8_t byte)
     {
         if (m_bufferIndex == c_bufferSize)
     1f2:	f8 01       	movw	r30, r16
     1f4:	80 85       	ldd	r24, Z+8	; 0x08
     1f6:	88 30       	cpi	r24, 0x08	; 8
     1f8:	59 f0       	breq	.+22     	; 0x210 <_ZN17Adafruit_MLX906146read16Eh+0x34>
             return;

         m_buffer[m_bufferIndex++] = byte;
     1fa:	91 e0       	ldi	r25, 0x01	; 1
     1fc:	98 0f       	add	r25, r24
     1fe:	90 87       	std	Z+8, r25	; 0x08
     200:	e8 0f       	add	r30, r24
     202:	f1 1d       	adc	r31, r1
     204:	c0 83       	st	Z, r28
    }

    void endTransmission(bool stop = true)
    {
         for (uint8_t index = 0; index < m_bufferIndex; ++index) {
     206:	f8 01       	movw	r30, r16
     208:	80 85       	ldd	r24, Z+8	; 0x08
     20a:	88 23       	and	r24, r24
     20c:	09 f4       	brne	.+2      	; 0x210 <_ZN17Adafruit_MLX906146read16Eh+0x34>
     20e:	4e c0       	rjmp	.+156    	; 0x2ac <_ZN17Adafruit_MLX906146read16Eh+0xd0>
  return temp;
}

/*********************************************************************/

uint16_t Adafruit_MLX90614::read16(uint8_t a) {
     210:	c0 e0       	ldi	r28, 0x00	; 0
             if (i2c_write(m_buffer[index]) != 0)
     212:	f8 01       	movw	r30, r16
     214:	ec 0f       	add	r30, r28
     216:	f1 1d       	adc	r31, r1
     218:	80 81       	ld	r24, Z
     21a:	0e 94 1b 04 	call	0x836	; 0x836 <i2c_write>
     21e:	81 11       	cpse	r24, r1
     220:	45 c0       	rjmp	.+138    	; 0x2ac <_ZN17Adafruit_MLX906146read16Eh+0xd0>
         m_buffer[m_bufferIndex++] = byte;
    }

    void endTransmission(bool stop = true)
    {
         for (uint8_t index = 0; index < m_bufferIndex; ++index) {
     222:	cf 5f       	subi	r28, 0xFF	; 255
     224:	f8 01       	movw	r30, r16
     226:	80 85       	ldd	r24, Z+8	; 0x08
     228:	c8 17       	cp	r28, r24
     22a:	98 f3       	brcs	.-26     	; 0x212 <_ZN17Adafruit_MLX906146read16Eh+0x36>
     22c:	3f c0       	rjmp	.+126    	; 0x2ac <_ZN17Adafruit_MLX906146read16Eh+0xd0>
         return m_bufferIndex;
     }

     uint8_t read()
     {
         if (m_bufferReadIndex == m_bufferIndex)
     22e:	f8 01       	movw	r30, r16
     230:	91 85       	ldd	r25, Z+9	; 0x09
     232:	80 85       	ldd	r24, Z+8	; 0x08
     234:	98 17       	cp	r25, r24
     236:	b1 f0       	breq	.+44     	; 0x264 <_ZN17Adafruit_MLX906146read16Eh+0x88>
             return 0;
        return m_buffer[m_bufferReadIndex++];
     238:	41 e0       	ldi	r20, 0x01	; 1
     23a:	49 0f       	add	r20, r25
     23c:	41 87       	std	Z+9, r20	; 0x09
     23e:	e9 0f       	add	r30, r25
     240:	f1 1d       	adc	r31, r1
  Wire.beginTransmission(_addr); // start transmission to device 
  Wire.write(a); // sends register address to read from
  Wire.endTransmission(false); // end transmission
  
  Wire.requestFrom(_addr, (uint8_t)3);// send data n-bytes read
  ret = Wire.read(); // receive DATA
     242:	20 81       	ld	r18, Z
     244:	30 e0       	ldi	r19, 0x00	; 0
         return m_bufferIndex;
     }

     uint8_t read()
     {
         if (m_bufferReadIndex == m_bufferIndex)
     246:	84 17       	cp	r24, r20
     248:	d1 f1       	breq	.+116    	; 0x2be <_ZN17Adafruit_MLX906146read16Eh+0xe2>
             return 0;
        return m_buffer[m_bufferReadIndex++];
     24a:	9e 5f       	subi	r25, 0xFE	; 254
     24c:	f8 01       	movw	r30, r16
     24e:	91 87       	std	Z+9, r25	; 0x09
     250:	e4 0f       	add	r30, r20
     252:	f1 1d       	adc	r31, r1
  ret |= Wire.read() << 8; // receive DATA
     254:	40 81       	ld	r20, Z
     256:	34 2b       	or	r19, r20
         return m_bufferIndex;
     }

     uint8_t read()
     {
         if (m_bufferReadIndex == m_bufferIndex)
     258:	98 17       	cp	r25, r24
     25a:	89 f1       	breq	.+98     	; 0x2be <_ZN17Adafruit_MLX906146read16Eh+0xe2>
             return 0;
        return m_buffer[m_bufferReadIndex++];
     25c:	9f 5f       	subi	r25, 0xFF	; 255
     25e:	f8 01       	movw	r30, r16
     260:	91 87       	std	Z+9, r25	; 0x09
     262:	2d c0       	rjmp	.+90     	; 0x2be <_ZN17Adafruit_MLX906146read16Eh+0xe2>
     264:	20 e0       	ldi	r18, 0x00	; 0
     266:	30 e0       	ldi	r19, 0x00	; 0
     268:	2a c0       	rjmp	.+84     	; 0x2be <_ZN17Adafruit_MLX906146read16Eh+0xe2>
         if (i2c_start((address << 1) | I2C_READ) != 0)
             return 0;

        m_bufferIndex = 0;
         while (--quantity > 0) {
             m_buffer[m_bufferIndex++] = i2c_readAck();
     26a:	81 e0       	ldi	r24, 0x01	; 1
     26c:	f8 01       	movw	r30, r16
     26e:	80 87       	std	Z+8, r24	; 0x08
     270:	0e 94 2d 04 	call	0x85a	; 0x85a <i2c_readAck>
     274:	f8 01       	movw	r30, r16
     276:	80 83       	st	Z, r24
     278:	c0 85       	ldd	r28, Z+8	; 0x08
     27a:	81 e0       	ldi	r24, 0x01	; 1
     27c:	8c 0f       	add	r24, r28
     27e:	80 87       	std	Z+8, r24	; 0x08
     280:	0e 94 2d 04 	call	0x85a	; 0x85a <i2c_readAck>
     284:	f8 01       	movw	r30, r16
     286:	ec 0f       	add	r30, r28
     288:	f1 1d       	adc	r31, r1
     28a:	80 83       	st	Z, r24
         }
         m_buffer[m_bufferIndex++] = i2c_readNak();
     28c:	f8 01       	movw	r30, r16
     28e:	c0 85       	ldd	r28, Z+8	; 0x08
     290:	81 e0       	ldi	r24, 0x01	; 1
     292:	8c 0f       	add	r24, r28
     294:	80 87       	std	Z+8, r24	; 0x08
     296:	0e 94 38 04 	call	0x870	; 0x870 <i2c_readNak>
     29a:	f8 01       	movw	r30, r16
     29c:	ec 0f       	add	r30, r28
     29e:	f1 1d       	adc	r31, r1
     2a0:	80 83       	st	Z, r24
         m_bufferReadIndex = 0;
     2a2:	f8 01       	movw	r30, r16
     2a4:	11 86       	std	Z+9, r1	; 0x09

         if (stop)
             i2c_stop();
     2a6:	0e 94 17 04 	call	0x82e	; 0x82e <i2c_stop>
     2aa:	c1 cf       	rjmp	.-126    	; 0x22e <_ZN17Adafruit_MLX906146read16Eh+0x52>
     {
        // quantity = Sensors::min(quantity, c_bufferSize);
         if (quantity == 0)
             return 0;

         if (i2c_start((address << 1) | I2C_READ) != 0)
     2ac:	f8 01       	movw	r30, r16
     2ae:	82 85       	ldd	r24, Z+10	; 0x0a
     2b0:	88 0f       	add	r24, r24
     2b2:	81 60       	ori	r24, 0x01	; 1
     2b4:	0e 94 f0 03 	call	0x7e0	; 0x7e0 <i2c_start>
     2b8:	88 23       	and	r24, r24
     2ba:	b9 f2       	breq	.-82     	; 0x26a <_ZN17Adafruit_MLX906146read16Eh+0x8e>
     2bc:	b8 cf       	rjmp	.-144    	; 0x22e <_ZN17Adafruit_MLX906146read16Eh+0x52>

  uint8_t pec = Wire.read();

  return ret;
}
     2be:	c9 01       	movw	r24, r18
     2c0:	cf 91       	pop	r28
     2c2:	1f 91       	pop	r17
     2c4:	0f 91       	pop	r16
     2c6:	08 95       	ret

000002c8 <_ZN17Adafruit_MLX906148readTempEh>:
  return readTemp(MLX90614_TA);
}

float Adafruit_MLX90614::readTemp(uint8_t reg) {
  float temp;
  temp = read16(reg);
     2c8:	0e 94 ee 00 	call	0x1dc	; 0x1dc <_ZN17Adafruit_MLX906146read16Eh>
     2cc:	bc 01       	movw	r22, r24
     2ce:	80 e0       	ldi	r24, 0x00	; 0
     2d0:	90 e0       	ldi	r25, 0x00	; 0
     2d2:	0e 94 fe 05 	call	0xbfc	; 0xbfc <__floatunsisf>
  temp *= .02;
     2d6:	2a e0       	ldi	r18, 0x0A	; 10
     2d8:	37 ed       	ldi	r19, 0xD7	; 215
     2da:	43 ea       	ldi	r20, 0xA3	; 163
     2dc:	5c e3       	ldi	r21, 0x3C	; 60
     2de:	0e 94 91 06 	call	0xd22	; 0xd22 <__mulsf3>
  temp  -= 273.15;
     2e2:	23 e3       	ldi	r18, 0x33	; 51
     2e4:	33 e9       	ldi	r19, 0x93	; 147
     2e6:	48 e8       	ldi	r20, 0x88	; 136
     2e8:	53 e4       	ldi	r21, 0x43	; 67
     2ea:	0e 94 e9 04 	call	0x9d2	; 0x9d2 <__subsf3>
  return temp;
}
     2ee:	08 95       	ret

000002f0 <_ZN17Adafruit_MLX9061415readObjectTempCEv>:
  _addr = i2caddr;
}
//////////////////////////////////////////////////////

double Adafruit_MLX90614::readObjectTempC(void) {
  return readTemp(MLX90614_TOBJ1);
     2f0:	67 e0       	ldi	r22, 0x07	; 7
     2f2:	0e 94 64 01 	call	0x2c8	; 0x2c8 <_ZN17Adafruit_MLX906148readTempEh>
}
     2f6:	08 95       	ret

000002f8 <_ZN17Adafruit_MLX9061416readAmbientTempCEv>:


double Adafruit_MLX90614::readAmbientTempC(void) {
  return readTemp(MLX90614_TA);
     2f8:	66 e0       	ldi	r22, 0x06	; 6
     2fa:	0e 94 64 01 	call	0x2c8	; 0x2c8 <_ZN17Adafruit_MLX906148readTempEh>
}
     2fe:	08 95       	ret

00000300 <_ZN7HC_SR044initEv>:
// Anything over 400/500 cm (23200/29410 us pulse) is "out of range"
const unsigned long MAX_DIST = 23200;
  
void HC_SR04::init() {
  // The Trigger pin will tell the sensor to range find
  DDRD = 0x20;
     300:	80 e2       	ldi	r24, 0x20	; 32
     302:	8a b9       	out	0x0a, r24	; 10
  PORTD = 0x00;
     304:	1b b8       	out	0x0b, r1	; 11
  clr_pin(PORTD, TRIG_PIN);  
     306:	5d 98       	cbi	0x0b, 5	; 11
     308:	08 95       	ret

0000030a <_ZN7HC_SR044readEv>:
}
uint8_t HC_SR04::read(){
     30a:	cf 92       	push	r12
     30c:	df 92       	push	r13
     30e:	ef 92       	push	r14
     310:	ff 92       	push	r15
     312:	0f 93       	push	r16
     314:	1f 93       	push	r17
     316:	cf 93       	push	r28
     318:	8c 01       	movw	r16, r24
	float t1;
	float t2;
	float pulse_width;
	
	//set_micro(0);
	clr_pin(PORTD, TRIG_PIN);
     31a:	5d 98       	cbi	0x0b, 5	; 11
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     31c:	8a e0       	ldi	r24, 0x0A	; 10
     31e:	8a 95       	dec	r24
     320:	f1 f7       	brne	.-4      	; 0x31e <_ZN7HC_SR044readEv+0x14>
     322:	00 c0       	rjmp	.+0      	; 0x324 <_ZN7HC_SR044readEv+0x1a>
	_delay_us(2);
	// Hold the trigger pin high for at least 10 us
	set_pin(PORTD, TRIG_PIN);
     324:	5d 9a       	sbi	0x0b, 5	; 11
     326:	ea e6       	ldi	r30, 0x6A	; 106
     328:	ea 95       	dec	r30
     32a:	f1 f7       	brne	.-4      	; 0x328 <_ZN7HC_SR044readEv+0x1e>
     32c:	00 c0       	rjmp	.+0      	; 0x32e <_ZN7HC_SR044readEv+0x24>
	_delay_us(20);
	clr_pin(PORTD, TRIG_PIN);
     32e:	5d 98       	cbi	0x0b, 5	; 11
	
	// Wait for pulse on echo pin
	while ((PIND & _BV(ECHO_PIN)) == 0 );
     330:	4e 9b       	sbis	0x09, 6	; 9
     332:	fe cf       	rjmp	.-4      	; 0x330 <_ZN7HC_SR044readEv+0x26>
	// Measure how long the echo pin was held high (pulse width)
	// Note: the micros() counter will overflow after ~70 min
	TCNT1 = 0;
     334:	e4 e8       	ldi	r30, 0x84	; 132
     336:	f0 e0       	ldi	r31, 0x00	; 0
     338:	11 82       	std	Z+1, r1	; 0x01
     33a:	10 82       	st	Z, r1
	t1 = TCNT1 ;
     33c:	60 81       	ld	r22, Z
     33e:	71 81       	ldd	r23, Z+1	; 0x01
     340:	80 e0       	ldi	r24, 0x00	; 0
     342:	90 e0       	ldi	r25, 0x00	; 0
     344:	0e 94 fe 05 	call	0xbfc	; 0xbfc <__floatunsisf>
     348:	6b 01       	movw	r12, r22
     34a:	7c 01       	movw	r14, r24
	cli();
     34c:	f8 94       	cli

	while ((PIND & _BV(ECHO_PIN)) != 0);
     34e:	99 b1       	in	r25, 0x09	; 9
     350:	c9 2f       	mov	r28, r25
     352:	c0 74       	andi	r28, 0x40	; 64
     354:	96 fd       	sbrc	r25, 6
     356:	fb cf       	rjmp	.-10     	; 0x34e <_ZN7HC_SR044readEv+0x44>
	sei();
     358:	78 94       	sei
	t2 = TCNT1 ;
     35a:	40 91 84 00 	lds	r20, 0x0084
     35e:	50 91 85 00 	lds	r21, 0x0085
     362:	ba 01       	movw	r22, r20
     364:	80 e0       	ldi	r24, 0x00	; 0
     366:	90 e0       	ldi	r25, 0x00	; 0
     368:	0e 94 fe 05 	call	0xbfc	; 0xbfc <__floatunsisf>
	
	pulse_width = (t2 - t1)* 0.5;
     36c:	a7 01       	movw	r20, r14
     36e:	96 01       	movw	r18, r12
     370:	0e 94 e9 04 	call	0x9d2	; 0x9d2 <__subsf3>
     374:	20 e0       	ldi	r18, 0x00	; 0
     376:	30 e0       	ldi	r19, 0x00	; 0
     378:	40 e0       	ldi	r20, 0x00	; 0
     37a:	5f e3       	ldi	r21, 0x3F	; 63
     37c:	0e 94 91 06 	call	0xd22	; 0xd22 <__mulsf3>
     380:	6b 01       	movw	r12, r22
     382:	7c 01       	movw	r14, r24
	
	if ( pulse_width > MAX_DIST ) {
     384:	20 e0       	ldi	r18, 0x00	; 0
     386:	30 e4       	ldi	r19, 0x40	; 64
     388:	45 eb       	ldi	r20, 0xB5	; 181
     38a:	56 e4       	ldi	r21, 0x46	; 70
     38c:	0e 94 8c 06 	call	0xd18	; 0xd18 <__gesf2>
     390:	18 16       	cp	r1, r24
     392:	74 f4       	brge	.+28     	; 0x3b0 <_ZN7HC_SR044readEv+0xa6>
		//void send_int(int d);
		void send(double data, int base);
		//void send(uint32_t str);
			
		void sendln(void) {send("\r\n");};
		void sendln(const char* c) {send(c);send("\r\n");};
     394:	60 e0       	ldi	r22, 0x00	; 0
     396:	71 e0       	ldi	r23, 0x01	; 1
     398:	8e e7       	ldi	r24, 0x7E	; 126
     39a:	91 e0       	ldi	r25, 0x01	; 1
     39c:	0e 94 95 04 	call	0x92a	; 0x92a <_ZN5USART4sendEPKc>
     3a0:	60 e3       	ldi	r22, 0x30	; 48
     3a2:	71 e0       	ldi	r23, 0x01	; 1
     3a4:	8e e7       	ldi	r24, 0x7E	; 126
     3a6:	91 e0       	ldi	r25, 0x01	; 1
     3a8:	0e 94 95 04 	call	0x92a	; 0x92a <_ZN5USART4sendEPKc>
		Serial.sendln("Out of range");
		pulse_width = MAX_DIST;
		return 1;
     3ac:	c1 e0       	ldi	r28, 0x01	; 1
     3ae:	0d c0       	rjmp	.+26     	; 0x3ca <_ZN7HC_SR044readEv+0xc0>
	}
	// Calculate distance in centimeters and inches. The constants
	// are found in the data-sheet, and calculated from the assumed speed 
	//of sound in air at sea level (~340 m/s).
	cm = pulse_width/ 58;
     3b0:	20 e0       	ldi	r18, 0x00	; 0
     3b2:	30 e0       	ldi	r19, 0x00	; 0
     3b4:	48 e6       	ldi	r20, 0x68	; 104
     3b6:	52 e4       	ldi	r21, 0x42	; 66
     3b8:	c7 01       	movw	r24, r14
     3ba:	b6 01       	movw	r22, r12
     3bc:	0e 94 56 05 	call	0xaac	; 0xaac <__divsf3>
	Distance = cm;
     3c0:	f8 01       	movw	r30, r16
     3c2:	60 83       	st	Z, r22
     3c4:	71 83       	std	Z+1, r23	; 0x01
     3c6:	82 83       	std	Z+2, r24	; 0x02
     3c8:	93 83       	std	Z+3, r25	; 0x03
	return 0;
}
     3ca:	8c 2f       	mov	r24, r28
     3cc:	cf 91       	pop	r28
     3ce:	1f 91       	pop	r17
     3d0:	0f 91       	pop	r16
     3d2:	ff 90       	pop	r15
     3d4:	ef 90       	pop	r14
     3d6:	df 90       	pop	r13
     3d8:	cf 90       	pop	r12
     3da:	08 95       	ret

000003dc <__vector_14>:

HC_SR04 sonic;

volatile unsigned long int count = 0; 
ISR(TIMER0_COMPA_vect)
{
     3dc:	1f 92       	push	r1
     3de:	0f 92       	push	r0
     3e0:	0f b6       	in	r0, 0x3f	; 63
     3e2:	0f 92       	push	r0
     3e4:	11 24       	eor	r1, r1
     3e6:	8f 93       	push	r24
     3e8:	9f 93       	push	r25
     3ea:	af 93       	push	r26
     3ec:	bf 93       	push	r27
	count++;
     3ee:	80 91 46 01 	lds	r24, 0x0146
     3f2:	90 91 47 01 	lds	r25, 0x0147
     3f6:	a0 91 48 01 	lds	r26, 0x0148
     3fa:	b0 91 49 01 	lds	r27, 0x0149
     3fe:	01 96       	adiw	r24, 0x01	; 1
     400:	a1 1d       	adc	r26, r1
     402:	b1 1d       	adc	r27, r1
     404:	80 93 46 01 	sts	0x0146, r24
     408:	90 93 47 01 	sts	0x0147, r25
     40c:	a0 93 48 01 	sts	0x0148, r26
     410:	b0 93 49 01 	sts	0x0149, r27
}
     414:	bf 91       	pop	r27
     416:	af 91       	pop	r26
     418:	9f 91       	pop	r25
     41a:	8f 91       	pop	r24
     41c:	0f 90       	pop	r0
     41e:	0f be       	out	0x3f, r0	; 63
     420:	0f 90       	pop	r0
     422:	1f 90       	pop	r1
     424:	18 95       	reti

00000426 <__vector_13>:

ISR(TIMER1_OVF_vect){
     426:	1f 92       	push	r1
     428:	0f 92       	push	r0
     42a:	0f b6       	in	r0, 0x3f	; 63
     42c:	0f 92       	push	r0
     42e:	11 24       	eor	r1, r1
	//PORTB ^= _BV(PORTB5);
	//TIFR1 = 0;
}
     430:	0f 90       	pop	r0
     432:	0f be       	out	0x3f, r0	; 63
     434:	0f 90       	pop	r0
     436:	1f 90       	pop	r1
     438:	18 95       	reti

0000043a <_Z5setupv>:
{
	return count;
}
/*********************************************************************/
void setup(void)
{		
     43a:	cf 93       	push	r28
	cli();
     43c:	f8 94       	cli
	uint8_t rflag = MCUSR;
     43e:	c4 b7       	in	r28, 0x34	; 52
	MCUSR = 0;
     440:	14 be       	out	0x34, r1	; 52
	
	//DDRB |= _BV(PORTB5);
	//PORTB &= ~_BV(PORTB5);
	
	TCNT0 = 0;
     442:	16 bc       	out	0x26, r1	; 38
	TCNT1 = 0;
     444:	10 92 85 00 	sts	0x0085, r1
     448:	10 92 84 00 	sts	0x0084, r1
	TCCR0A |= (1<<WGM01);
     44c:	84 b5       	in	r24, 0x24	; 36
     44e:	82 60       	ori	r24, 0x02	; 2
     450:	84 bd       	out	0x24, r24	; 36
	OCR0A = 249;
     452:	89 ef       	ldi	r24, 0xF9	; 249
     454:	87 bd       	out	0x27, r24	; 39
	TIMSK0 |= (1 << OCIE0A);
     456:	ee e6       	ldi	r30, 0x6E	; 110
     458:	f0 e0       	ldi	r31, 0x00	; 0
     45a:	80 81       	ld	r24, Z
     45c:	82 60       	ori	r24, 0x02	; 2
     45e:	80 83       	st	Z, r24
	TIMSK1 |= _BV(TOIE1);
     460:	ef e6       	ldi	r30, 0x6F	; 111
     462:	f0 e0       	ldi	r31, 0x00	; 0
     464:	80 81       	ld	r24, Z
     466:	81 60       	ori	r24, 0x01	; 1
     468:	80 83       	st	Z, r24
	TCCR0B |= (1<<CS01) | (1<<CS00);
     46a:	85 b5       	in	r24, 0x25	; 37
     46c:	83 60       	ori	r24, 0x03	; 3
     46e:	85 bd       	out	0x25, r24	; 37
	TCCR1B |= (1<<CS11);
     470:	e1 e8       	ldi	r30, 0x81	; 129
     472:	f0 e0       	ldi	r31, 0x00	; 0
     474:	80 81       	ld	r24, Z
     476:	82 60       	ori	r24, 0x02	; 2
     478:	80 83       	st	Z, r24
	sei();
     47a:	78 94       	sei
	Serial.init(9600);
     47c:	60 e8       	ldi	r22, 0x80	; 128
     47e:	75 e2       	ldi	r23, 0x25	; 37
     480:	8e e7       	ldi	r24, 0x7E	; 126
     482:	91 e0       	ldi	r25, 0x01	; 1
     484:	0e 94 43 04 	call	0x886	; 0x886 <_ZN5USART4initEi>
	sonic.init();
     488:	8a e4       	ldi	r24, 0x4A	; 74
     48a:	91 e0       	ldi	r25, 0x01	; 1
     48c:	0e 94 80 01 	call	0x300	; 0x300 <_ZN7HC_SR044initEv>
	#ifdef _DEBUG
		Serial.send( rflag ,HEX);
     490:	40 e1       	ldi	r20, 0x10	; 16
     492:	50 e0       	ldi	r21, 0x00	; 0
     494:	6c 2f       	mov	r22, r28
     496:	8e e7       	ldi	r24, 0x7E	; 126
     498:	91 e0       	ldi	r25, 0x01	; 1
     49a:	0e 94 aa 04 	call	0x954	; 0x954 <_ZN5USART4sendEhi>
     49e:	6d e0       	ldi	r22, 0x0D	; 13
     4a0:	71 e0       	ldi	r23, 0x01	; 1
     4a2:	8e e7       	ldi	r24, 0x7E	; 126
     4a4:	91 e0       	ldi	r25, 0x01	; 1
     4a6:	0e 94 95 04 	call	0x92a	; 0x92a <_ZN5USART4sendEPKc>
     4aa:	60 e3       	ldi	r22, 0x30	; 48
     4ac:	71 e0       	ldi	r23, 0x01	; 1
     4ae:	8e e7       	ldi	r24, 0x7E	; 126
     4b0:	91 e0       	ldi	r25, 0x01	; 1
     4b2:	0e 94 95 04 	call	0x92a	; 0x92a <_ZN5USART4sendEPKc>
		Serial.sendln("> Booting...");	
	#endif // _DEBUG
}
     4b6:	cf 91       	pop	r28
     4b8:	08 95       	ret

000004ba <_Z13IR_sensorReadv>:
/*********************************************************************/
void IR_sensorRead(void )
{
     4ba:	2f 92       	push	r2
     4bc:	3f 92       	push	r3
     4be:	4f 92       	push	r4
     4c0:	5f 92       	push	r5
     4c2:	6f 92       	push	r6
     4c4:	7f 92       	push	r7
     4c6:	8f 92       	push	r8
     4c8:	9f 92       	push	r9
     4ca:	af 92       	push	r10
     4cc:	bf 92       	push	r11
     4ce:	cf 92       	push	r12
     4d0:	df 92       	push	r13
     4d2:	ef 92       	push	r14
     4d4:	ff 92       	push	r15
     4d6:	0f 93       	push	r16
     4d8:	1f 93       	push	r17
     4da:	cf 93       	push	r28
     4dc:	df 93       	push	r29
     4de:	cd b7       	in	r28, 0x3d	; 61
     4e0:	de b7       	in	r29, 0x3e	; 62
     4e2:	c6 55       	subi	r28, 0x56	; 86
     4e4:	d1 09       	sbc	r29, r1
     4e6:	0f b6       	in	r0, 0x3f	; 63
     4e8:	f8 94       	cli
     4ea:	de bf       	out	0x3e, r29	; 62
     4ec:	0f be       	out	0x3f, r0	; 63
     4ee:	cd bf       	out	0x3d, r28	; 61
	char str[18];
	char str_out[54] = {""};
     4f0:	19 82       	std	Y+1, r1	; 0x01
     4f2:	1a 82       	std	Y+2, r1	; 0x02
     4f4:	1b 82       	std	Y+3, r1	; 0x03
     4f6:	1c 82       	std	Y+4, r1	; 0x04
     4f8:	fe 01       	movw	r30, r28
     4fa:	35 96       	adiw	r30, 0x05	; 5
     4fc:	82 e3       	ldi	r24, 0x32	; 50
     4fe:	df 01       	movw	r26, r30
     500:	1d 92       	st	X+, r1
     502:	8a 95       	dec	r24
     504:	e9 f7       	brne	.-6      	; 0x500 <_Z13IR_sensorReadv+0x46>
	double obj_1,obj_2,obj_3,obj_4,amb_1,amb_2,amb_3,amb_4;
	unsigned long int m_read_time = 0;

	sonic.read();
     506:	8a e4       	ldi	r24, 0x4A	; 74
     508:	91 e0       	ldi	r25, 0x01	; 1
     50a:	0e 94 85 01 	call	0x30a	; 0x30a <_ZN7HC_SR044readEv>
	//TIFR1 = 0;
}
/*********************************************************************/
unsigned long int millis(void)
{
	return count;
     50e:	c0 90 46 01 	lds	r12, 0x0146
     512:	d0 90 47 01 	lds	r13, 0x0147
     516:	e0 90 48 01 	lds	r14, 0x0148
     51a:	f0 90 49 01 	lds	r15, 0x0149
	unsigned long int m_read_time = 0;

	sonic.read();
	//Read 0x5A
	m_read_time = millis();
	obj_1 = MLX_5a.readObjectTempC();
     51e:	83 e7       	ldi	r24, 0x73	; 115
     520:	91 e0       	ldi	r25, 0x01	; 1
     522:	0e 94 78 01 	call	0x2f0	; 0x2f0 <_ZN17Adafruit_MLX9061415readObjectTempCEv>
     526:	16 2f       	mov	r17, r22
     528:	07 2f       	mov	r16, r23
     52a:	b8 2e       	mov	r11, r24
     52c:	a9 2e       	mov	r10, r25
	amb_1 = MLX_5a.readAmbientTempC();
     52e:	83 e7       	ldi	r24, 0x73	; 115
     530:	91 e0       	ldi	r25, 0x01	; 1
     532:	0e 94 7c 01 	call	0x2f8	; 0x2f8 <_ZN17Adafruit_MLX9061416readAmbientTempCEv>
     536:	56 2e       	mov	r5, r22
     538:	47 2e       	mov	r4, r23
     53a:	38 2e       	mov	r3, r24
     53c:	29 2e       	mov	r2, r25
	//Read 0x5B
	obj_2 = MLX_5b.readObjectTempC();
     53e:	88 e6       	ldi	r24, 0x68	; 104
     540:	91 e0       	ldi	r25, 0x01	; 1
     542:	0e 94 78 01 	call	0x2f0	; 0x2f0 <_ZN17Adafruit_MLX9061415readObjectTempCEv>
     546:	2a 96       	adiw	r28, 0x0a	; 10
     548:	6f af       	std	Y+63, r22	; 0x3f
     54a:	2a 97       	sbiw	r28, 0x0a	; 10
     54c:	2b 96       	adiw	r28, 0x0b	; 11
     54e:	7f af       	std	Y+63, r23	; 0x3f
     550:	2b 97       	sbiw	r28, 0x0b	; 11
     552:	2c 96       	adiw	r28, 0x0c	; 12
     554:	8f af       	std	Y+63, r24	; 0x3f
     556:	2c 97       	sbiw	r28, 0x0c	; 12
     558:	2d 96       	adiw	r28, 0x0d	; 13
     55a:	9f af       	std	Y+63, r25	; 0x3f
     55c:	2d 97       	sbiw	r28, 0x0d	; 13
	amb_2 = MLX_5b.readAmbientTempC();
     55e:	88 e6       	ldi	r24, 0x68	; 104
     560:	91 e0       	ldi	r25, 0x01	; 1
     562:	0e 94 7c 01 	call	0x2f8	; 0x2f8 <_ZN17Adafruit_MLX9061416readAmbientTempCEv>
     566:	2e 96       	adiw	r28, 0x0e	; 14
     568:	6f af       	std	Y+63, r22	; 0x3f
     56a:	2e 97       	sbiw	r28, 0x0e	; 14
     56c:	2f 96       	adiw	r28, 0x0f	; 15
     56e:	7f af       	std	Y+63, r23	; 0x3f
     570:	2f 97       	sbiw	r28, 0x0f	; 15
     572:	78 2e       	mov	r7, r24
     574:	69 2e       	mov	r6, r25
	//Read 0x5C
	obj_3 = MLX_5c.readObjectTempC();
     576:	8d e5       	ldi	r24, 0x5D	; 93
     578:	91 e0       	ldi	r25, 0x01	; 1
     57a:	0e 94 78 01 	call	0x2f0	; 0x2f0 <_ZN17Adafruit_MLX9061415readObjectTempCEv>
     57e:	60 96       	adiw	r28, 0x10	; 16
     580:	6f af       	std	Y+63, r22	; 0x3f
     582:	60 97       	sbiw	r28, 0x10	; 16
     584:	61 96       	adiw	r28, 0x11	; 17
     586:	7f af       	std	Y+63, r23	; 0x3f
     588:	61 97       	sbiw	r28, 0x11	; 17
     58a:	62 96       	adiw	r28, 0x12	; 18
     58c:	8f af       	std	Y+63, r24	; 0x3f
     58e:	62 97       	sbiw	r28, 0x12	; 18
     590:	63 96       	adiw	r28, 0x13	; 19
     592:	9f af       	std	Y+63, r25	; 0x3f
     594:	63 97       	sbiw	r28, 0x13	; 19
	amb_3 = MLX_5c.readAmbientTempC();
     596:	8d e5       	ldi	r24, 0x5D	; 93
     598:	91 e0       	ldi	r25, 0x01	; 1
     59a:	0e 94 7c 01 	call	0x2f8	; 0x2f8 <_ZN17Adafruit_MLX9061416readAmbientTempCEv>
     59e:	64 96       	adiw	r28, 0x14	; 20
     5a0:	6f af       	std	Y+63, r22	; 0x3f
     5a2:	64 97       	sbiw	r28, 0x14	; 20
     5a4:	65 96       	adiw	r28, 0x15	; 21
     5a6:	7f af       	std	Y+63, r23	; 0x3f
     5a8:	65 97       	sbiw	r28, 0x15	; 21
     5aa:	66 96       	adiw	r28, 0x16	; 22
     5ac:	8f af       	std	Y+63, r24	; 0x3f
     5ae:	66 97       	sbiw	r28, 0x16	; 22
     5b0:	67 96       	adiw	r28, 0x17	; 23
     5b2:	9f af       	std	Y+63, r25	; 0x3f
     5b4:	67 97       	sbiw	r28, 0x17	; 23
	//Read 0x5D
	//obj_4 = MLX_5d.readObjectTempC();
	//amb_4 = MLX_5d.readAmbientTempC();	
	
	sprintf(str, "T%d,%0.1f,%0.1f,%i,%lu\r\n", 1, obj_1, amb_1, (int)sonic.Distance,m_read_time);
     5b6:	0f 2e       	mov	r0, r31
     5b8:	fa e4       	ldi	r31, 0x4A	; 74
     5ba:	8f 2e       	mov	r8, r31
     5bc:	f1 e0       	ldi	r31, 0x01	; 1
     5be:	9f 2e       	mov	r9, r31
     5c0:	f0 2d       	mov	r31, r0
     5c2:	f4 01       	movw	r30, r8
     5c4:	60 81       	ld	r22, Z
     5c6:	71 81       	ldd	r23, Z+1	; 0x01
     5c8:	82 81       	ldd	r24, Z+2	; 0x02
     5ca:	93 81       	ldd	r25, Z+3	; 0x03
     5cc:	ff 92       	push	r15
     5ce:	ef 92       	push	r14
     5d0:	df 92       	push	r13
     5d2:	cf 92       	push	r12
     5d4:	0e 94 c8 05 	call	0xb90	; 0xb90 <__fixsfsi>
     5d8:	7f 93       	push	r23
     5da:	6f 93       	push	r22
     5dc:	2f 92       	push	r2
     5de:	3f 92       	push	r3
     5e0:	4f 92       	push	r4
     5e2:	5f 92       	push	r5
     5e4:	af 92       	push	r10
     5e6:	bf 92       	push	r11
     5e8:	0f 93       	push	r16
     5ea:	1f 93       	push	r17
     5ec:	1f 92       	push	r1
     5ee:	81 e0       	ldi	r24, 0x01	; 1
     5f0:	8f 93       	push	r24
     5f2:	0f 2e       	mov	r0, r31
     5f4:	fa e1       	ldi	r31, 0x1A	; 26
     5f6:	af 2e       	mov	r10, r31
     5f8:	f1 e0       	ldi	r31, 0x01	; 1
     5fa:	bf 2e       	mov	r11, r31
     5fc:	f0 2d       	mov	r31, r0
     5fe:	bf 92       	push	r11
     600:	af 92       	push	r10
     602:	8e 01       	movw	r16, r28
     604:	09 5c       	subi	r16, 0xC9	; 201
     606:	1f 4f       	sbci	r17, 0xFF	; 255
     608:	1f 93       	push	r17
     60a:	0f 93       	push	r16
     60c:	0e 94 2e 0c 	call	0x185c	; 0x185c <sprintf>
	strcat(str_out,str);
     610:	b8 01       	movw	r22, r16
     612:	ce 01       	movw	r24, r28
     614:	01 96       	adiw	r24, 0x01	; 1
     616:	0e 94 e0 0b 	call	0x17c0	; 0x17c0 <strcat>

	sprintf(str, "T%d,%0.1f,%0.1f,%i,%lu\r\n", 2, obj_2, amb_2, (int)sonic.Distance,m_read_time);
     61a:	d4 01       	movw	r26, r8
     61c:	6d 91       	ld	r22, X+
     61e:	7d 91       	ld	r23, X+
     620:	8d 91       	ld	r24, X+
     622:	9c 91       	ld	r25, X
     624:	ff 92       	push	r15
     626:	ef 92       	push	r14
     628:	df 92       	push	r13
     62a:	cf 92       	push	r12
     62c:	0e 94 c8 05 	call	0xb90	; 0xb90 <__fixsfsi>
     630:	7f 93       	push	r23
     632:	6f 93       	push	r22
     634:	6f 92       	push	r6
     636:	7f 92       	push	r7
     638:	2f 96       	adiw	r28, 0x0f	; 15
     63a:	bf ad       	ldd	r27, Y+63	; 0x3f
     63c:	2f 97       	sbiw	r28, 0x0f	; 15
     63e:	bf 93       	push	r27
     640:	2e 96       	adiw	r28, 0x0e	; 14
     642:	ef ad       	ldd	r30, Y+63	; 0x3f
     644:	2e 97       	sbiw	r28, 0x0e	; 14
     646:	ef 93       	push	r30
     648:	2d 96       	adiw	r28, 0x0d	; 13
     64a:	ff ad       	ldd	r31, Y+63	; 0x3f
     64c:	2d 97       	sbiw	r28, 0x0d	; 13
     64e:	ff 93       	push	r31
     650:	2c 96       	adiw	r28, 0x0c	; 12
     652:	8f ad       	ldd	r24, Y+63	; 0x3f
     654:	2c 97       	sbiw	r28, 0x0c	; 12
     656:	8f 93       	push	r24
     658:	2b 96       	adiw	r28, 0x0b	; 11
     65a:	9f ad       	ldd	r25, Y+63	; 0x3f
     65c:	2b 97       	sbiw	r28, 0x0b	; 11
     65e:	9f 93       	push	r25
     660:	2a 96       	adiw	r28, 0x0a	; 10
     662:	af ad       	ldd	r26, Y+63	; 0x3f
     664:	2a 97       	sbiw	r28, 0x0a	; 10
     666:	af 93       	push	r26
     668:	1f 92       	push	r1
     66a:	82 e0       	ldi	r24, 0x02	; 2
     66c:	8f 93       	push	r24
     66e:	bf 92       	push	r11
     670:	af 92       	push	r10
     672:	1f 93       	push	r17
     674:	0f 93       	push	r16
     676:	0e 94 2e 0c 	call	0x185c	; 0x185c <sprintf>
	strcat(str_out,str);
     67a:	0f b6       	in	r0, 0x3f	; 63
     67c:	f8 94       	cli
     67e:	de bf       	out	0x3e, r29	; 62
     680:	0f be       	out	0x3f, r0	; 63
     682:	cd bf       	out	0x3d, r28	; 61
     684:	b8 01       	movw	r22, r16
     686:	ce 01       	movw	r24, r28
     688:	01 96       	adiw	r24, 0x01	; 1
     68a:	0e 94 e0 0b 	call	0x17c0	; 0x17c0 <strcat>

	sprintf(str, "T%d,%0.1f,%0.1f,%i,%lu\r\n", 3, obj_3, amb_3, (int)sonic.Distance,m_read_time);
     68e:	d4 01       	movw	r26, r8
     690:	6d 91       	ld	r22, X+
     692:	7d 91       	ld	r23, X+
     694:	8d 91       	ld	r24, X+
     696:	9c 91       	ld	r25, X
     698:	ff 92       	push	r15
     69a:	ef 92       	push	r14
     69c:	df 92       	push	r13
     69e:	cf 92       	push	r12
     6a0:	0e 94 c8 05 	call	0xb90	; 0xb90 <__fixsfsi>
     6a4:	7f 93       	push	r23
     6a6:	6f 93       	push	r22
     6a8:	67 96       	adiw	r28, 0x17	; 23
     6aa:	bf ad       	ldd	r27, Y+63	; 0x3f
     6ac:	67 97       	sbiw	r28, 0x17	; 23
     6ae:	bf 93       	push	r27
     6b0:	66 96       	adiw	r28, 0x16	; 22
     6b2:	ef ad       	ldd	r30, Y+63	; 0x3f
     6b4:	66 97       	sbiw	r28, 0x16	; 22
     6b6:	ef 93       	push	r30
     6b8:	65 96       	adiw	r28, 0x15	; 21
     6ba:	ff ad       	ldd	r31, Y+63	; 0x3f
     6bc:	65 97       	sbiw	r28, 0x15	; 21
     6be:	ff 93       	push	r31
     6c0:	64 96       	adiw	r28, 0x14	; 20
     6c2:	8f ad       	ldd	r24, Y+63	; 0x3f
     6c4:	64 97       	sbiw	r28, 0x14	; 20
     6c6:	8f 93       	push	r24
     6c8:	63 96       	adiw	r28, 0x13	; 19
     6ca:	9f ad       	ldd	r25, Y+63	; 0x3f
     6cc:	63 97       	sbiw	r28, 0x13	; 19
     6ce:	9f 93       	push	r25
     6d0:	62 96       	adiw	r28, 0x12	; 18
     6d2:	af ad       	ldd	r26, Y+63	; 0x3f
     6d4:	62 97       	sbiw	r28, 0x12	; 18
     6d6:	af 93       	push	r26
     6d8:	61 96       	adiw	r28, 0x11	; 17
     6da:	bf ad       	ldd	r27, Y+63	; 0x3f
     6dc:	61 97       	sbiw	r28, 0x11	; 17
     6de:	bf 93       	push	r27
     6e0:	60 96       	adiw	r28, 0x10	; 16
     6e2:	ef ad       	ldd	r30, Y+63	; 0x3f
     6e4:	60 97       	sbiw	r28, 0x10	; 16
     6e6:	ef 93       	push	r30
     6e8:	1f 92       	push	r1
     6ea:	83 e0       	ldi	r24, 0x03	; 3
     6ec:	8f 93       	push	r24
     6ee:	bf 92       	push	r11
     6f0:	af 92       	push	r10
     6f2:	1f 93       	push	r17
     6f4:	0f 93       	push	r16
     6f6:	0e 94 2e 0c 	call	0x185c	; 0x185c <sprintf>
	strcat(str_out,str);
     6fa:	b8 01       	movw	r22, r16
     6fc:	ce 01       	movw	r24, r28
     6fe:	01 96       	adiw	r24, 0x01	; 1
     700:	0e 94 e0 0b 	call	0x17c0	; 0x17c0 <strcat>
	
	//sprintf(str, "T%d,%0.1f,%0.1f,%i,%lu\r\n", 4, obj_4, amb_4, (int)sonic.Distance,m_read_time);
	//strcat(str_out,str);
	
	Serial.send(str_out);
     704:	be 01       	movw	r22, r28
     706:	6f 5f       	subi	r22, 0xFF	; 255
     708:	7f 4f       	sbci	r23, 0xFF	; 255
     70a:	8e e7       	ldi	r24, 0x7E	; 126
     70c:	91 e0       	ldi	r25, 0x01	; 1
     70e:	0e 94 95 04 	call	0x92a	; 0x92a <_ZN5USART4sendEPKc>
     712:	0f b6       	in	r0, 0x3f	; 63
     714:	f8 94       	cli
     716:	de bf       	out	0x3e, r29	; 62
     718:	0f be       	out	0x3f, r0	; 63
     71a:	cd bf       	out	0x3d, r28	; 61
}
     71c:	ca 5a       	subi	r28, 0xAA	; 170
     71e:	df 4f       	sbci	r29, 0xFF	; 255
     720:	0f b6       	in	r0, 0x3f	; 63
     722:	f8 94       	cli
     724:	de bf       	out	0x3e, r29	; 62
     726:	0f be       	out	0x3f, r0	; 63
     728:	cd bf       	out	0x3d, r28	; 61
     72a:	df 91       	pop	r29
     72c:	cf 91       	pop	r28
     72e:	1f 91       	pop	r17
     730:	0f 91       	pop	r16
     732:	ff 90       	pop	r15
     734:	ef 90       	pop	r14
     736:	df 90       	pop	r13
     738:	cf 90       	pop	r12
     73a:	bf 90       	pop	r11
     73c:	af 90       	pop	r10
     73e:	9f 90       	pop	r9
     740:	8f 90       	pop	r8
     742:	7f 90       	pop	r7
     744:	6f 90       	pop	r6
     746:	5f 90       	pop	r5
     748:	4f 90       	pop	r4
     74a:	3f 90       	pop	r3
     74c:	2f 90       	pop	r2
     74e:	08 95       	ret

00000750 <main>:
/*********************************************************************/
int main(void)
{	
	setup();
     750:	0e 94 1d 02 	call	0x43a	; 0x43a <_Z5setupv>
	//TIFR1 = 0;
}
/*********************************************************************/
unsigned long int millis(void)
{
	return count;
     754:	c0 90 46 01 	lds	r12, 0x0146
     758:	d0 90 47 01 	lds	r13, 0x0147
     75c:	e0 90 48 01 	lds	r14, 0x0148
     760:	f0 90 49 01 	lds	r15, 0x0149
     764:	63 e3       	ldi	r22, 0x33	; 51
     766:	71 e0       	ldi	r23, 0x01	; 1
     768:	8e e7       	ldi	r24, 0x7E	; 126
     76a:	91 e0       	ldi	r25, 0x01	; 1
     76c:	0e 94 95 04 	call	0x92a	; 0x92a <_ZN5USART4sendEPKc>
     770:	60 e3       	ldi	r22, 0x30	; 48
     772:	71 e0       	ldi	r23, 0x01	; 1
     774:	8e e7       	ldi	r24, 0x7E	; 126
     776:	91 e0       	ldi	r25, 0x01	; 1
     778:	0e 94 95 04 	call	0x92a	; 0x92a <_ZN5USART4sendEPKc>
	    start_time = millis();	
		#ifdef _DEBUG
			Serial.sendln("> Read...");
		#endif

		IR_sensorRead();
     77c:	0e 94 5d 02 	call	0x4ba	; 0x4ba <_Z13IR_sensorReadv>
	//TIFR1 = 0;
}
/*********************************************************************/
unsigned long int millis(void)
{
	return count;
     780:	80 91 46 01 	lds	r24, 0x0146
     784:	90 91 47 01 	lds	r25, 0x0147
     788:	a0 91 48 01 	lds	r26, 0x0148
     78c:	b0 91 49 01 	lds	r27, 0x0149
			Serial.sendln("> Read...");
		#endif

		IR_sensorRead();
		//_delay_ms(250);		
		while((millis()-start_time) <= 250);
     790:	8c 19       	sub	r24, r12
     792:	9d 09       	sbc	r25, r13
     794:	ae 09       	sbc	r26, r14
     796:	bf 09       	sbc	r27, r15
     798:	8b 3f       	cpi	r24, 0xFB	; 251
     79a:	91 05       	cpc	r25, r1
     79c:	a1 05       	cpc	r26, r1
     79e:	b1 05       	cpc	r27, r1
     7a0:	78 f3       	brcs	.-34     	; 0x780 <main+0x30>
     7a2:	d8 cf       	rjmp	.-80     	; 0x754 <main+0x4>

000007a4 <_GLOBAL__sub_I_MLX_5a>:
#include <string.h> 
#include "uart.h"
#include "Adafruit_MLX90614.h"
#include "HCSR04.h"

Adafruit_MLX90614 MLX_5a(0x5A);
     7a4:	6a e5       	ldi	r22, 0x5A	; 90
     7a6:	83 e7       	ldi	r24, 0x73	; 115
     7a8:	91 e0       	ldi	r25, 0x01	; 1
     7aa:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <_ZN17Adafruit_MLX90614C1Eh>
Adafruit_MLX90614 MLX_5b(0x5B);
     7ae:	6b e5       	ldi	r22, 0x5B	; 91
     7b0:	88 e6       	ldi	r24, 0x68	; 104
     7b2:	91 e0       	ldi	r25, 0x01	; 1
     7b4:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <_ZN17Adafruit_MLX90614C1Eh>
Adafruit_MLX90614 MLX_5c(0x5C);
     7b8:	6c e5       	ldi	r22, 0x5C	; 92
     7ba:	8d e5       	ldi	r24, 0x5D	; 93
     7bc:	91 e0       	ldi	r25, 0x01	; 1
     7be:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <_ZN17Adafruit_MLX90614C1Eh>
Adafruit_MLX90614 MLX_5d(0x5D);
     7c2:	6d e5       	ldi	r22, 0x5D	; 93
     7c4:	82 e5       	ldi	r24, 0x52	; 82
     7c6:	91 e0       	ldi	r25, 0x01	; 1
     7c8:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <_ZN17Adafruit_MLX90614C1Eh>
     7cc:	08 95       	ret

000007ce <i2c_init>:
 Initialization of the I2C bus interface. Need to be called only once
*************************************************************************/
void i2c_init(void)
{
  /* initialize TWI clock: 100 kHz clock, TWPS = 0 => prescaler = 1 */
  DDRC = 0;
     7ce:	17 b8       	out	0x07, r1	; 7
  PORTC = (1 << PORTC4) | (1 << PORTC5);//enable pull up
     7d0:	80 e3       	ldi	r24, 0x30	; 48
     7d2:	88 b9       	out	0x08, r24	; 8
  TWSR = 0;                         /* no prescaler */
     7d4:	10 92 b9 00 	sts	0x00B9, r1
  TWBR = ((F_CPU/SCL_CLOCK)-16)/2;  /* must be > 10 for stable operation */
     7d8:	88 e4       	ldi	r24, 0x48	; 72
     7da:	80 93 b8 00 	sts	0x00B8, r24
     7de:	08 95       	ret

000007e0 <i2c_start>:
unsigned char i2c_start(unsigned char address)
{
    uint8_t   twst;

	// send START condition
	TWCR = (1<<TWINT) | (1<<TWSTA) | (1<<TWEN);
     7e0:	94 ea       	ldi	r25, 0xA4	; 164
     7e2:	90 93 bc 00 	sts	0x00BC, r25

	// wait until transmission completed
	while(!(TWCR & (1<<TWINT)));
     7e6:	ec eb       	ldi	r30, 0xBC	; 188
     7e8:	f0 e0       	ldi	r31, 0x00	; 0
     7ea:	90 81       	ld	r25, Z
     7ec:	99 23       	and	r25, r25
     7ee:	ec f7       	brge	.-6      	; 0x7ea <i2c_start+0xa>

	// check value of TWI Status Register. Mask prescaler bits.
	twst = TW_STATUS & 0xF8;
     7f0:	90 91 b9 00 	lds	r25, 0x00B9
     7f4:	98 7f       	andi	r25, 0xF8	; 248
	if ( (twst != TW_START) && (twst != TW_REP_START)) return 1;
     7f6:	98 30       	cpi	r25, 0x08	; 8
     7f8:	11 f0       	breq	.+4      	; 0x7fe <i2c_start+0x1e>
     7fa:	90 31       	cpi	r25, 0x10	; 16
     7fc:	a1 f4       	brne	.+40     	; 0x826 <i2c_start+0x46>

	// send device address
	TWDR = address;
     7fe:	80 93 bb 00 	sts	0x00BB, r24
	TWCR = (1<<TWINT) | (1<<TWEN);
     802:	84 e8       	ldi	r24, 0x84	; 132
     804:	80 93 bc 00 	sts	0x00BC, r24

	// wail until transmission completed and ACK/NACK has been received
	while(!(TWCR & (1<<TWINT)));
     808:	ec eb       	ldi	r30, 0xBC	; 188
     80a:	f0 e0       	ldi	r31, 0x00	; 0
     80c:	80 81       	ld	r24, Z
     80e:	88 23       	and	r24, r24
     810:	ec f7       	brge	.-6      	; 0x80c <i2c_start+0x2c>

	// check value of TWI Status Register. Mask prescaler bits.
	twst = TW_STATUS & 0xF8;
     812:	90 91 b9 00 	lds	r25, 0x00B9
     816:	98 7f       	andi	r25, 0xF8	; 248
	if ( (twst != TW_MT_SLA_ACK) && (twst != TW_MR_SLA_ACK) ) return 1;
     818:	98 31       	cpi	r25, 0x18	; 24
     81a:	39 f0       	breq	.+14     	; 0x82a <i2c_start+0x4a>
     81c:	81 e0       	ldi	r24, 0x01	; 1
     81e:	90 34       	cpi	r25, 0x40	; 64
     820:	29 f4       	brne	.+10     	; 0x82c <i2c_start+0x4c>
     822:	80 e0       	ldi	r24, 0x00	; 0
     824:	08 95       	ret
	// wait until transmission completed
	while(!(TWCR & (1<<TWINT)));

	// check value of TWI Status Register. Mask prescaler bits.
	twst = TW_STATUS & 0xF8;
	if ( (twst != TW_START) && (twst != TW_REP_START)) return 1;
     826:	81 e0       	ldi	r24, 0x01	; 1
     828:	08 95       	ret

	// check value of TWI Status Register. Mask prescaler bits.
	twst = TW_STATUS & 0xF8;
	if ( (twst != TW_MT_SLA_ACK) && (twst != TW_MR_SLA_ACK) ) return 1;

	return 0;
     82a:	80 e0       	ldi	r24, 0x00	; 0

}/* i2c_start */
     82c:	08 95       	ret

0000082e <i2c_stop>:
 Terminates the data transfer and releases the I2C bus
*************************************************************************/
void i2c_stop(void)
{
    /* send stop condition */
	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWSTO);
     82e:	84 e9       	ldi	r24, 0x94	; 148
     830:	80 93 bc 00 	sts	0x00BC, r24
     834:	08 95       	ret

00000836 <i2c_write>:
unsigned char i2c_write( unsigned char data )
{	
    uint8_t   twst;
    
	// send data to the previously addressed device
	TWDR = data;
     836:	80 93 bb 00 	sts	0x00BB, r24
	TWCR = (1<<TWINT) | (1<<TWEN);
     83a:	84 e8       	ldi	r24, 0x84	; 132
     83c:	80 93 bc 00 	sts	0x00BC, r24

	// wait until transmission completed
	while(!(TWCR & (1<<TWINT)));
     840:	ec eb       	ldi	r30, 0xBC	; 188
     842:	f0 e0       	ldi	r31, 0x00	; 0
     844:	80 81       	ld	r24, Z
     846:	88 23       	and	r24, r24
     848:	ec f7       	brge	.-6      	; 0x844 <i2c_write+0xe>

	// check value of TWI Status Register. Mask prescaler bits
	twst = TW_STATUS & 0xF8;
     84a:	90 91 b9 00 	lds	r25, 0x00B9
     84e:	98 7f       	andi	r25, 0xF8	; 248
	if( twst != TW_MT_DATA_ACK) return 1;
     850:	81 e0       	ldi	r24, 0x01	; 1
     852:	98 32       	cpi	r25, 0x28	; 40
     854:	09 f4       	brne	.+2      	; 0x858 <i2c_write+0x22>
     856:	80 e0       	ldi	r24, 0x00	; 0
	return 0;

}/* i2c_write */
     858:	08 95       	ret

0000085a <i2c_readAck>:
 
 Return:  byte read from I2C device
*************************************************************************/
unsigned char i2c_readAck(void)
{
	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWEA);
     85a:	84 ec       	ldi	r24, 0xC4	; 196
     85c:	80 93 bc 00 	sts	0x00BC, r24
	while(!(TWCR & (1<<TWINT)));    
     860:	ec eb       	ldi	r30, 0xBC	; 188
     862:	f0 e0       	ldi	r31, 0x00	; 0
     864:	80 81       	ld	r24, Z
     866:	88 23       	and	r24, r24
     868:	ec f7       	brge	.-6      	; 0x864 <i2c_readAck+0xa>
    return TWDR;
     86a:	80 91 bb 00 	lds	r24, 0x00BB
}/* i2c_readAck */
     86e:	08 95       	ret

00000870 <i2c_readNak>:
 
 Return:  byte read from I2C device
*************************************************************************/
unsigned char i2c_readNak(void)
{
	TWCR = (1<<TWINT) | (1<<TWEN);
     870:	84 e8       	ldi	r24, 0x84	; 132
     872:	80 93 bc 00 	sts	0x00BC, r24
	while(!(TWCR & (1<<TWINT)));
     876:	ec eb       	ldi	r30, 0xBC	; 188
     878:	f0 e0       	ldi	r31, 0x00	; 0
     87a:	80 81       	ld	r24, Z
     87c:	88 23       	and	r24, r24
     87e:	ec f7       	brge	.-6      	; 0x87a <i2c_readNak+0xa>
    return TWDR;
     880:	80 91 bb 00 	lds	r24, 0x00BB
}/* i2c_readNak */
     884:	08 95       	ret

00000886 <_ZN5USART4initEi>:
USART Serial; //Initialize new instance of the serial class
//Setup Baud rate in header file
//set to 8 bits, no stop bit, no parity

/*********************************************************************/
void USART::init(int BAUDRATE){
     886:	0f 93       	push	r16
     888:	1f 93       	push	r17
	UBRR0H = (uint8_t)(BAUD_PRESCALLER>>8);
     88a:	8b 01       	movw	r16, r22
     88c:	77 0f       	add	r23, r23
     88e:	22 0b       	sbc	r18, r18
     890:	33 0b       	sbc	r19, r19
     892:	d9 01       	movw	r26, r18
     894:	c8 01       	movw	r24, r16
     896:	80 58       	subi	r24, 0x80	; 128
     898:	9b 47       	sbci	r25, 0x7B	; 123
     89a:	a1 4e       	sbci	r26, 0xE1	; 225
     89c:	bf 4f       	sbci	r27, 0xFF	; 255
     89e:	88 0f       	add	r24, r24
     8a0:	99 1f       	adc	r25, r25
     8a2:	aa 1f       	adc	r26, r26
     8a4:	bb 1f       	adc	r27, r27
     8a6:	88 0f       	add	r24, r24
     8a8:	99 1f       	adc	r25, r25
     8aa:	aa 1f       	adc	r26, r26
     8ac:	bb 1f       	adc	r27, r27
     8ae:	bc 01       	movw	r22, r24
     8b0:	cd 01       	movw	r24, r26
     8b2:	66 0f       	add	r22, r22
     8b4:	77 1f       	adc	r23, r23
     8b6:	88 1f       	adc	r24, r24
     8b8:	99 1f       	adc	r25, r25
     8ba:	00 0f       	add	r16, r16
     8bc:	11 1f       	adc	r17, r17
     8be:	22 1f       	adc	r18, r18
     8c0:	33 1f       	adc	r19, r19
     8c2:	00 0f       	add	r16, r16
     8c4:	11 1f       	adc	r17, r17
     8c6:	22 1f       	adc	r18, r18
     8c8:	33 1f       	adc	r19, r19
     8ca:	a9 01       	movw	r20, r18
     8cc:	98 01       	movw	r18, r16
     8ce:	22 0f       	add	r18, r18
     8d0:	33 1f       	adc	r19, r19
     8d2:	44 1f       	adc	r20, r20
     8d4:	55 1f       	adc	r21, r21
     8d6:	22 0f       	add	r18, r18
     8d8:	33 1f       	adc	r19, r19
     8da:	44 1f       	adc	r20, r20
     8dc:	55 1f       	adc	r21, r21
     8de:	0e 94 9e 0a 	call	0x153c	; 0x153c <__udivmodsi4>
     8e2:	da 01       	movw	r26, r20
     8e4:	c9 01       	movw	r24, r18
     8e6:	01 97       	sbiw	r24, 0x01	; 1
     8e8:	a1 09       	sbc	r26, r1
     8ea:	b1 09       	sbc	r27, r1
     8ec:	89 2f       	mov	r24, r25
     8ee:	9a 2f       	mov	r25, r26
     8f0:	ab 2f       	mov	r26, r27
     8f2:	bb 27       	eor	r27, r27
     8f4:	80 93 c5 00 	sts	0x00C5, r24
	UBRR0L = (uint8_t)(BAUD_PRESCALLER);
     8f8:	21 50       	subi	r18, 0x01	; 1
     8fa:	20 93 c4 00 	sts	0x00C4, r18
	UCSR0B = (1<<RXEN0)|(1<<TXEN0);
     8fe:	e1 ec       	ldi	r30, 0xC1	; 193
     900:	f0 e0       	ldi	r31, 0x00	; 0
     902:	88 e1       	ldi	r24, 0x18	; 24
     904:	80 83       	st	Z, r24
	UCSR0C = (1<<UCSZ00)|(1<<UCSZ01);
     906:	86 e0       	ldi	r24, 0x06	; 6
     908:	80 93 c2 00 	sts	0x00C2, r24

	UCSR0B |= (1 << RXCIE0); // Enable the USART Receive Complete interrupt (USART_RXC)
     90c:	80 81       	ld	r24, Z
     90e:	80 68       	ori	r24, 0x80	; 128
     910:	80 83       	st	Z, r24
	sei();
     912:	78 94       	sei
}
     914:	1f 91       	pop	r17
     916:	0f 91       	pop	r16
     918:	08 95       	ret

0000091a <_ZN5USART4sendEh>:
 return UDR0;// read buffer
}
/*********************************************************************/
void USART::send(uint8_t data){

	while(!(UCSR0A & (1<<UDRE0))); //wait until buffer is empty
     91a:	e0 ec       	ldi	r30, 0xC0	; 192
     91c:	f0 e0       	ldi	r31, 0x00	; 0
     91e:	80 81       	ld	r24, Z
     920:	85 ff       	sbrs	r24, 5
     922:	fd cf       	rjmp	.-6      	; 0x91e <_ZN5USART4sendEh+0x4>
	UDR0 = data; //Load data into buffer
     924:	60 93 c6 00 	sts	0x00C6, r22
     928:	08 95       	ret

0000092a <_ZN5USART4sendEPKc>:
}
/*********************************************************************/
//send one char at a time
void USART::send(const char* StringPtr)
{
     92a:	0f 93       	push	r16
     92c:	1f 93       	push	r17
     92e:	cf 93       	push	r28
     930:	df 93       	push	r29
     932:	eb 01       	movw	r28, r22
	//st = millis();
	while(*StringPtr != 0x00)
     934:	68 81       	ld	r22, Y
     936:	66 23       	and	r22, r22
     938:	41 f0       	breq	.+16     	; 0x94a <_ZN5USART4sendEPKc+0x20>
     93a:	8c 01       	movw	r16, r24
     93c:	21 96       	adiw	r28, 0x01	; 1
		void init(int BAUDRATE = 9600); 
		bool available(void);
		unsigned char read(void);
		bool flush(void);
		void send(uint8_t data);
		void send(char data) {send((uint8_t)data); };
     93e:	c8 01       	movw	r24, r16
     940:	0e 94 8d 04 	call	0x91a	; 0x91a <_ZN5USART4sendEh>
     944:	69 91       	ld	r22, Y+
     946:	61 11       	cpse	r22, r1
     948:	fa cf       	rjmp	.-12     	; 0x93e <_ZN5USART4sendEPKc+0x14>
	{
		send(*StringPtr++);
	}
	//ft = millis();
}
     94a:	df 91       	pop	r29
     94c:	cf 91       	pop	r28
     94e:	1f 91       	pop	r17
     950:	0f 91       	pop	r16
     952:	08 95       	ret

00000954 <_ZN5USART4sendEhi>:
	send(str);
}
/*********************************************************************/
//convert int to ASCII number, display in decimal or hex
void USART::send(uint8_t data, int base)
{
     954:	0f 93       	push	r16
     956:	1f 93       	push	r17
     958:	cf 93       	push	r28
     95a:	df 93       	push	r29
     95c:	00 d0       	rcall	.+0      	; 0x95e <_ZN5USART4sendEhi+0xa>
     95e:	1f 92       	push	r1
     960:	cd b7       	in	r28, 0x3d	; 61
     962:	de b7       	in	r29, 0x3e	; 62
     964:	8c 01       	movw	r16, r24
	char str[3];
	if (base == DEC){
     966:	4a 30       	cpi	r20, 0x0A	; 10
     968:	51 05       	cpc	r21, r1
     96a:	99 f4       	brne	.+38     	; 0x992 <_ZN5USART4sendEhi+0x3e>
		sprintf(str,"%d",data);
     96c:	1f 92       	push	r1
     96e:	6f 93       	push	r22
     970:	80 e4       	ldi	r24, 0x40	; 64
     972:	91 e0       	ldi	r25, 0x01	; 1
     974:	9f 93       	push	r25
     976:	8f 93       	push	r24
     978:	ce 01       	movw	r24, r28
     97a:	01 96       	adiw	r24, 0x01	; 1
     97c:	9f 93       	push	r25
     97e:	8f 93       	push	r24
     980:	0e 94 2e 0c 	call	0x185c	; 0x185c <sprintf>
     984:	0f 90       	pop	r0
     986:	0f 90       	pop	r0
     988:	0f 90       	pop	r0
     98a:	0f 90       	pop	r0
     98c:	0f 90       	pop	r0
     98e:	0f 90       	pop	r0
     990:	12 c0       	rjmp	.+36     	; 0x9b6 <_ZN5USART4sendEhi+0x62>
	}else{
		sprintf(str,"%x",data);	
     992:	1f 92       	push	r1
     994:	6f 93       	push	r22
     996:	23 e4       	ldi	r18, 0x43	; 67
     998:	31 e0       	ldi	r19, 0x01	; 1
     99a:	3f 93       	push	r19
     99c:	2f 93       	push	r18
     99e:	ce 01       	movw	r24, r28
     9a0:	01 96       	adiw	r24, 0x01	; 1
     9a2:	9f 93       	push	r25
     9a4:	8f 93       	push	r24
     9a6:	0e 94 2e 0c 	call	0x185c	; 0x185c <sprintf>
     9aa:	0f 90       	pop	r0
     9ac:	0f 90       	pop	r0
     9ae:	0f 90       	pop	r0
     9b0:	0f 90       	pop	r0
     9b2:	0f 90       	pop	r0
     9b4:	0f 90       	pop	r0
	}
	send(str);
     9b6:	be 01       	movw	r22, r28
     9b8:	6f 5f       	subi	r22, 0xFF	; 255
     9ba:	7f 4f       	sbci	r23, 0xFF	; 255
     9bc:	c8 01       	movw	r24, r16
     9be:	0e 94 95 04 	call	0x92a	; 0x92a <_ZN5USART4sendEPKc>
		else
		{
			send(Output_unit+48);
		}
	}*/
}
     9c2:	0f 90       	pop	r0
     9c4:	0f 90       	pop	r0
     9c6:	0f 90       	pop	r0
     9c8:	df 91       	pop	r29
     9ca:	cf 91       	pop	r28
     9cc:	1f 91       	pop	r17
     9ce:	0f 91       	pop	r16
     9d0:	08 95       	ret

000009d2 <__subsf3>:
     9d2:	50 58       	subi	r21, 0x80	; 128

000009d4 <__addsf3>:
     9d4:	bb 27       	eor	r27, r27
     9d6:	aa 27       	eor	r26, r26
     9d8:	0e 94 01 05 	call	0xa02	; 0xa02 <__addsf3x>
     9dc:	0c 94 52 06 	jmp	0xca4	; 0xca4 <__fp_round>
     9e0:	0e 94 44 06 	call	0xc88	; 0xc88 <__fp_pscA>
     9e4:	38 f0       	brcs	.+14     	; 0x9f4 <__addsf3+0x20>
     9e6:	0e 94 4b 06 	call	0xc96	; 0xc96 <__fp_pscB>
     9ea:	20 f0       	brcs	.+8      	; 0x9f4 <__addsf3+0x20>
     9ec:	39 f4       	brne	.+14     	; 0x9fc <__addsf3+0x28>
     9ee:	9f 3f       	cpi	r25, 0xFF	; 255
     9f0:	19 f4       	brne	.+6      	; 0x9f8 <__addsf3+0x24>
     9f2:	26 f4       	brtc	.+8      	; 0x9fc <__addsf3+0x28>
     9f4:	0c 94 41 06 	jmp	0xc82	; 0xc82 <__fp_nan>
     9f8:	0e f4       	brtc	.+2      	; 0x9fc <__addsf3+0x28>
     9fa:	e0 95       	com	r30
     9fc:	e7 fb       	bst	r30, 7
     9fe:	0c 94 3b 06 	jmp	0xc76	; 0xc76 <__fp_inf>

00000a02 <__addsf3x>:
     a02:	e9 2f       	mov	r30, r25
     a04:	0e 94 63 06 	call	0xcc6	; 0xcc6 <__fp_split3>
     a08:	58 f3       	brcs	.-42     	; 0x9e0 <__addsf3+0xc>
     a0a:	ba 17       	cp	r27, r26
     a0c:	62 07       	cpc	r22, r18
     a0e:	73 07       	cpc	r23, r19
     a10:	84 07       	cpc	r24, r20
     a12:	95 07       	cpc	r25, r21
     a14:	20 f0       	brcs	.+8      	; 0xa1e <__addsf3x+0x1c>
     a16:	79 f4       	brne	.+30     	; 0xa36 <__addsf3x+0x34>
     a18:	a6 f5       	brtc	.+104    	; 0xa82 <__addsf3x+0x80>
     a1a:	0c 94 85 06 	jmp	0xd0a	; 0xd0a <__fp_zero>
     a1e:	0e f4       	brtc	.+2      	; 0xa22 <__addsf3x+0x20>
     a20:	e0 95       	com	r30
     a22:	0b 2e       	mov	r0, r27
     a24:	ba 2f       	mov	r27, r26
     a26:	a0 2d       	mov	r26, r0
     a28:	0b 01       	movw	r0, r22
     a2a:	b9 01       	movw	r22, r18
     a2c:	90 01       	movw	r18, r0
     a2e:	0c 01       	movw	r0, r24
     a30:	ca 01       	movw	r24, r20
     a32:	a0 01       	movw	r20, r0
     a34:	11 24       	eor	r1, r1
     a36:	ff 27       	eor	r31, r31
     a38:	59 1b       	sub	r21, r25
     a3a:	99 f0       	breq	.+38     	; 0xa62 <__addsf3x+0x60>
     a3c:	59 3f       	cpi	r21, 0xF9	; 249
     a3e:	50 f4       	brcc	.+20     	; 0xa54 <__addsf3x+0x52>
     a40:	50 3e       	cpi	r21, 0xE0	; 224
     a42:	68 f1       	brcs	.+90     	; 0xa9e <__addsf3x+0x9c>
     a44:	1a 16       	cp	r1, r26
     a46:	f0 40       	sbci	r31, 0x00	; 0
     a48:	a2 2f       	mov	r26, r18
     a4a:	23 2f       	mov	r18, r19
     a4c:	34 2f       	mov	r19, r20
     a4e:	44 27       	eor	r20, r20
     a50:	58 5f       	subi	r21, 0xF8	; 248
     a52:	f3 cf       	rjmp	.-26     	; 0xa3a <__addsf3x+0x38>
     a54:	46 95       	lsr	r20
     a56:	37 95       	ror	r19
     a58:	27 95       	ror	r18
     a5a:	a7 95       	ror	r26
     a5c:	f0 40       	sbci	r31, 0x00	; 0
     a5e:	53 95       	inc	r21
     a60:	c9 f7       	brne	.-14     	; 0xa54 <__addsf3x+0x52>
     a62:	7e f4       	brtc	.+30     	; 0xa82 <__addsf3x+0x80>
     a64:	1f 16       	cp	r1, r31
     a66:	ba 0b       	sbc	r27, r26
     a68:	62 0b       	sbc	r22, r18
     a6a:	73 0b       	sbc	r23, r19
     a6c:	84 0b       	sbc	r24, r20
     a6e:	ba f0       	brmi	.+46     	; 0xa9e <__addsf3x+0x9c>
     a70:	91 50       	subi	r25, 0x01	; 1
     a72:	a1 f0       	breq	.+40     	; 0xa9c <__addsf3x+0x9a>
     a74:	ff 0f       	add	r31, r31
     a76:	bb 1f       	adc	r27, r27
     a78:	66 1f       	adc	r22, r22
     a7a:	77 1f       	adc	r23, r23
     a7c:	88 1f       	adc	r24, r24
     a7e:	c2 f7       	brpl	.-16     	; 0xa70 <__addsf3x+0x6e>
     a80:	0e c0       	rjmp	.+28     	; 0xa9e <__addsf3x+0x9c>
     a82:	ba 0f       	add	r27, r26
     a84:	62 1f       	adc	r22, r18
     a86:	73 1f       	adc	r23, r19
     a88:	84 1f       	adc	r24, r20
     a8a:	48 f4       	brcc	.+18     	; 0xa9e <__addsf3x+0x9c>
     a8c:	87 95       	ror	r24
     a8e:	77 95       	ror	r23
     a90:	67 95       	ror	r22
     a92:	b7 95       	ror	r27
     a94:	f7 95       	ror	r31
     a96:	9e 3f       	cpi	r25, 0xFE	; 254
     a98:	08 f0       	brcs	.+2      	; 0xa9c <__addsf3x+0x9a>
     a9a:	b0 cf       	rjmp	.-160    	; 0x9fc <__addsf3+0x28>
     a9c:	93 95       	inc	r25
     a9e:	88 0f       	add	r24, r24
     aa0:	08 f0       	brcs	.+2      	; 0xaa4 <__addsf3x+0xa2>
     aa2:	99 27       	eor	r25, r25
     aa4:	ee 0f       	add	r30, r30
     aa6:	97 95       	ror	r25
     aa8:	87 95       	ror	r24
     aaa:	08 95       	ret

00000aac <__divsf3>:
     aac:	0e 94 6a 05 	call	0xad4	; 0xad4 <__divsf3x>
     ab0:	0c 94 52 06 	jmp	0xca4	; 0xca4 <__fp_round>
     ab4:	0e 94 4b 06 	call	0xc96	; 0xc96 <__fp_pscB>
     ab8:	58 f0       	brcs	.+22     	; 0xad0 <__divsf3+0x24>
     aba:	0e 94 44 06 	call	0xc88	; 0xc88 <__fp_pscA>
     abe:	40 f0       	brcs	.+16     	; 0xad0 <__divsf3+0x24>
     ac0:	29 f4       	brne	.+10     	; 0xacc <__divsf3+0x20>
     ac2:	5f 3f       	cpi	r21, 0xFF	; 255
     ac4:	29 f0       	breq	.+10     	; 0xad0 <__divsf3+0x24>
     ac6:	0c 94 3b 06 	jmp	0xc76	; 0xc76 <__fp_inf>
     aca:	51 11       	cpse	r21, r1
     acc:	0c 94 86 06 	jmp	0xd0c	; 0xd0c <__fp_szero>
     ad0:	0c 94 41 06 	jmp	0xc82	; 0xc82 <__fp_nan>

00000ad4 <__divsf3x>:
     ad4:	0e 94 63 06 	call	0xcc6	; 0xcc6 <__fp_split3>
     ad8:	68 f3       	brcs	.-38     	; 0xab4 <__divsf3+0x8>

00000ada <__divsf3_pse>:
     ada:	99 23       	and	r25, r25
     adc:	b1 f3       	breq	.-20     	; 0xaca <__divsf3+0x1e>
     ade:	55 23       	and	r21, r21
     ae0:	91 f3       	breq	.-28     	; 0xac6 <__divsf3+0x1a>
     ae2:	95 1b       	sub	r25, r21
     ae4:	55 0b       	sbc	r21, r21
     ae6:	bb 27       	eor	r27, r27
     ae8:	aa 27       	eor	r26, r26
     aea:	62 17       	cp	r22, r18
     aec:	73 07       	cpc	r23, r19
     aee:	84 07       	cpc	r24, r20
     af0:	38 f0       	brcs	.+14     	; 0xb00 <__divsf3_pse+0x26>
     af2:	9f 5f       	subi	r25, 0xFF	; 255
     af4:	5f 4f       	sbci	r21, 0xFF	; 255
     af6:	22 0f       	add	r18, r18
     af8:	33 1f       	adc	r19, r19
     afa:	44 1f       	adc	r20, r20
     afc:	aa 1f       	adc	r26, r26
     afe:	a9 f3       	breq	.-22     	; 0xaea <__divsf3_pse+0x10>
     b00:	35 d0       	rcall	.+106    	; 0xb6c <__divsf3_pse+0x92>
     b02:	0e 2e       	mov	r0, r30
     b04:	3a f0       	brmi	.+14     	; 0xb14 <__divsf3_pse+0x3a>
     b06:	e0 e8       	ldi	r30, 0x80	; 128
     b08:	32 d0       	rcall	.+100    	; 0xb6e <__divsf3_pse+0x94>
     b0a:	91 50       	subi	r25, 0x01	; 1
     b0c:	50 40       	sbci	r21, 0x00	; 0
     b0e:	e6 95       	lsr	r30
     b10:	00 1c       	adc	r0, r0
     b12:	ca f7       	brpl	.-14     	; 0xb06 <__divsf3_pse+0x2c>
     b14:	2b d0       	rcall	.+86     	; 0xb6c <__divsf3_pse+0x92>
     b16:	fe 2f       	mov	r31, r30
     b18:	29 d0       	rcall	.+82     	; 0xb6c <__divsf3_pse+0x92>
     b1a:	66 0f       	add	r22, r22
     b1c:	77 1f       	adc	r23, r23
     b1e:	88 1f       	adc	r24, r24
     b20:	bb 1f       	adc	r27, r27
     b22:	26 17       	cp	r18, r22
     b24:	37 07       	cpc	r19, r23
     b26:	48 07       	cpc	r20, r24
     b28:	ab 07       	cpc	r26, r27
     b2a:	b0 e8       	ldi	r27, 0x80	; 128
     b2c:	09 f0       	breq	.+2      	; 0xb30 <__divsf3_pse+0x56>
     b2e:	bb 0b       	sbc	r27, r27
     b30:	80 2d       	mov	r24, r0
     b32:	bf 01       	movw	r22, r30
     b34:	ff 27       	eor	r31, r31
     b36:	93 58       	subi	r25, 0x83	; 131
     b38:	5f 4f       	sbci	r21, 0xFF	; 255
     b3a:	3a f0       	brmi	.+14     	; 0xb4a <__divsf3_pse+0x70>
     b3c:	9e 3f       	cpi	r25, 0xFE	; 254
     b3e:	51 05       	cpc	r21, r1
     b40:	78 f0       	brcs	.+30     	; 0xb60 <__divsf3_pse+0x86>
     b42:	0c 94 3b 06 	jmp	0xc76	; 0xc76 <__fp_inf>
     b46:	0c 94 86 06 	jmp	0xd0c	; 0xd0c <__fp_szero>
     b4a:	5f 3f       	cpi	r21, 0xFF	; 255
     b4c:	e4 f3       	brlt	.-8      	; 0xb46 <__divsf3_pse+0x6c>
     b4e:	98 3e       	cpi	r25, 0xE8	; 232
     b50:	d4 f3       	brlt	.-12     	; 0xb46 <__divsf3_pse+0x6c>
     b52:	86 95       	lsr	r24
     b54:	77 95       	ror	r23
     b56:	67 95       	ror	r22
     b58:	b7 95       	ror	r27
     b5a:	f7 95       	ror	r31
     b5c:	9f 5f       	subi	r25, 0xFF	; 255
     b5e:	c9 f7       	brne	.-14     	; 0xb52 <__divsf3_pse+0x78>
     b60:	88 0f       	add	r24, r24
     b62:	91 1d       	adc	r25, r1
     b64:	96 95       	lsr	r25
     b66:	87 95       	ror	r24
     b68:	97 f9       	bld	r25, 7
     b6a:	08 95       	ret
     b6c:	e1 e0       	ldi	r30, 0x01	; 1
     b6e:	66 0f       	add	r22, r22
     b70:	77 1f       	adc	r23, r23
     b72:	88 1f       	adc	r24, r24
     b74:	bb 1f       	adc	r27, r27
     b76:	62 17       	cp	r22, r18
     b78:	73 07       	cpc	r23, r19
     b7a:	84 07       	cpc	r24, r20
     b7c:	ba 07       	cpc	r27, r26
     b7e:	20 f0       	brcs	.+8      	; 0xb88 <__divsf3_pse+0xae>
     b80:	62 1b       	sub	r22, r18
     b82:	73 0b       	sbc	r23, r19
     b84:	84 0b       	sbc	r24, r20
     b86:	ba 0b       	sbc	r27, r26
     b88:	ee 1f       	adc	r30, r30
     b8a:	88 f7       	brcc	.-30     	; 0xb6e <__divsf3_pse+0x94>
     b8c:	e0 95       	com	r30
     b8e:	08 95       	ret

00000b90 <__fixsfsi>:
     b90:	0e 94 cf 05 	call	0xb9e	; 0xb9e <__fixunssfsi>
     b94:	68 94       	set
     b96:	b1 11       	cpse	r27, r1
     b98:	0c 94 86 06 	jmp	0xd0c	; 0xd0c <__fp_szero>
     b9c:	08 95       	ret

00000b9e <__fixunssfsi>:
     b9e:	0e 94 6b 06 	call	0xcd6	; 0xcd6 <__fp_splitA>
     ba2:	88 f0       	brcs	.+34     	; 0xbc6 <__fixunssfsi+0x28>
     ba4:	9f 57       	subi	r25, 0x7F	; 127
     ba6:	98 f0       	brcs	.+38     	; 0xbce <__fixunssfsi+0x30>
     ba8:	b9 2f       	mov	r27, r25
     baa:	99 27       	eor	r25, r25
     bac:	b7 51       	subi	r27, 0x17	; 23
     bae:	b0 f0       	brcs	.+44     	; 0xbdc <__fixunssfsi+0x3e>
     bb0:	e1 f0       	breq	.+56     	; 0xbea <__fixunssfsi+0x4c>
     bb2:	66 0f       	add	r22, r22
     bb4:	77 1f       	adc	r23, r23
     bb6:	88 1f       	adc	r24, r24
     bb8:	99 1f       	adc	r25, r25
     bba:	1a f0       	brmi	.+6      	; 0xbc2 <__fixunssfsi+0x24>
     bbc:	ba 95       	dec	r27
     bbe:	c9 f7       	brne	.-14     	; 0xbb2 <__fixunssfsi+0x14>
     bc0:	14 c0       	rjmp	.+40     	; 0xbea <__fixunssfsi+0x4c>
     bc2:	b1 30       	cpi	r27, 0x01	; 1
     bc4:	91 f0       	breq	.+36     	; 0xbea <__fixunssfsi+0x4c>
     bc6:	0e 94 85 06 	call	0xd0a	; 0xd0a <__fp_zero>
     bca:	b1 e0       	ldi	r27, 0x01	; 1
     bcc:	08 95       	ret
     bce:	0c 94 85 06 	jmp	0xd0a	; 0xd0a <__fp_zero>
     bd2:	67 2f       	mov	r22, r23
     bd4:	78 2f       	mov	r23, r24
     bd6:	88 27       	eor	r24, r24
     bd8:	b8 5f       	subi	r27, 0xF8	; 248
     bda:	39 f0       	breq	.+14     	; 0xbea <__fixunssfsi+0x4c>
     bdc:	b9 3f       	cpi	r27, 0xF9	; 249
     bde:	cc f3       	brlt	.-14     	; 0xbd2 <__fixunssfsi+0x34>
     be0:	86 95       	lsr	r24
     be2:	77 95       	ror	r23
     be4:	67 95       	ror	r22
     be6:	b3 95       	inc	r27
     be8:	d9 f7       	brne	.-10     	; 0xbe0 <__fixunssfsi+0x42>
     bea:	3e f4       	brtc	.+14     	; 0xbfa <__fixunssfsi+0x5c>
     bec:	90 95       	com	r25
     bee:	80 95       	com	r24
     bf0:	70 95       	com	r23
     bf2:	61 95       	neg	r22
     bf4:	7f 4f       	sbci	r23, 0xFF	; 255
     bf6:	8f 4f       	sbci	r24, 0xFF	; 255
     bf8:	9f 4f       	sbci	r25, 0xFF	; 255
     bfa:	08 95       	ret

00000bfc <__floatunsisf>:
     bfc:	e8 94       	clt
     bfe:	09 c0       	rjmp	.+18     	; 0xc12 <__floatsisf+0x12>

00000c00 <__floatsisf>:
     c00:	97 fb       	bst	r25, 7
     c02:	3e f4       	brtc	.+14     	; 0xc12 <__floatsisf+0x12>
     c04:	90 95       	com	r25
     c06:	80 95       	com	r24
     c08:	70 95       	com	r23
     c0a:	61 95       	neg	r22
     c0c:	7f 4f       	sbci	r23, 0xFF	; 255
     c0e:	8f 4f       	sbci	r24, 0xFF	; 255
     c10:	9f 4f       	sbci	r25, 0xFF	; 255
     c12:	99 23       	and	r25, r25
     c14:	a9 f0       	breq	.+42     	; 0xc40 <__floatsisf+0x40>
     c16:	f9 2f       	mov	r31, r25
     c18:	96 e9       	ldi	r25, 0x96	; 150
     c1a:	bb 27       	eor	r27, r27
     c1c:	93 95       	inc	r25
     c1e:	f6 95       	lsr	r31
     c20:	87 95       	ror	r24
     c22:	77 95       	ror	r23
     c24:	67 95       	ror	r22
     c26:	b7 95       	ror	r27
     c28:	f1 11       	cpse	r31, r1
     c2a:	f8 cf       	rjmp	.-16     	; 0xc1c <__floatsisf+0x1c>
     c2c:	fa f4       	brpl	.+62     	; 0xc6c <__floatsisf+0x6c>
     c2e:	bb 0f       	add	r27, r27
     c30:	11 f4       	brne	.+4      	; 0xc36 <__floatsisf+0x36>
     c32:	60 ff       	sbrs	r22, 0
     c34:	1b c0       	rjmp	.+54     	; 0xc6c <__floatsisf+0x6c>
     c36:	6f 5f       	subi	r22, 0xFF	; 255
     c38:	7f 4f       	sbci	r23, 0xFF	; 255
     c3a:	8f 4f       	sbci	r24, 0xFF	; 255
     c3c:	9f 4f       	sbci	r25, 0xFF	; 255
     c3e:	16 c0       	rjmp	.+44     	; 0xc6c <__floatsisf+0x6c>
     c40:	88 23       	and	r24, r24
     c42:	11 f0       	breq	.+4      	; 0xc48 <__floatsisf+0x48>
     c44:	96 e9       	ldi	r25, 0x96	; 150
     c46:	11 c0       	rjmp	.+34     	; 0xc6a <__floatsisf+0x6a>
     c48:	77 23       	and	r23, r23
     c4a:	21 f0       	breq	.+8      	; 0xc54 <__floatsisf+0x54>
     c4c:	9e e8       	ldi	r25, 0x8E	; 142
     c4e:	87 2f       	mov	r24, r23
     c50:	76 2f       	mov	r23, r22
     c52:	05 c0       	rjmp	.+10     	; 0xc5e <__floatsisf+0x5e>
     c54:	66 23       	and	r22, r22
     c56:	71 f0       	breq	.+28     	; 0xc74 <__floatsisf+0x74>
     c58:	96 e8       	ldi	r25, 0x86	; 134
     c5a:	86 2f       	mov	r24, r22
     c5c:	70 e0       	ldi	r23, 0x00	; 0
     c5e:	60 e0       	ldi	r22, 0x00	; 0
     c60:	2a f0       	brmi	.+10     	; 0xc6c <__floatsisf+0x6c>
     c62:	9a 95       	dec	r25
     c64:	66 0f       	add	r22, r22
     c66:	77 1f       	adc	r23, r23
     c68:	88 1f       	adc	r24, r24
     c6a:	da f7       	brpl	.-10     	; 0xc62 <__floatsisf+0x62>
     c6c:	88 0f       	add	r24, r24
     c6e:	96 95       	lsr	r25
     c70:	87 95       	ror	r24
     c72:	97 f9       	bld	r25, 7
     c74:	08 95       	ret

00000c76 <__fp_inf>:
     c76:	97 f9       	bld	r25, 7
     c78:	9f 67       	ori	r25, 0x7F	; 127
     c7a:	80 e8       	ldi	r24, 0x80	; 128
     c7c:	70 e0       	ldi	r23, 0x00	; 0
     c7e:	60 e0       	ldi	r22, 0x00	; 0
     c80:	08 95       	ret

00000c82 <__fp_nan>:
     c82:	9f ef       	ldi	r25, 0xFF	; 255
     c84:	80 ec       	ldi	r24, 0xC0	; 192
     c86:	08 95       	ret

00000c88 <__fp_pscA>:
     c88:	00 24       	eor	r0, r0
     c8a:	0a 94       	dec	r0
     c8c:	16 16       	cp	r1, r22
     c8e:	17 06       	cpc	r1, r23
     c90:	18 06       	cpc	r1, r24
     c92:	09 06       	cpc	r0, r25
     c94:	08 95       	ret

00000c96 <__fp_pscB>:
     c96:	00 24       	eor	r0, r0
     c98:	0a 94       	dec	r0
     c9a:	12 16       	cp	r1, r18
     c9c:	13 06       	cpc	r1, r19
     c9e:	14 06       	cpc	r1, r20
     ca0:	05 06       	cpc	r0, r21
     ca2:	08 95       	ret

00000ca4 <__fp_round>:
     ca4:	09 2e       	mov	r0, r25
     ca6:	03 94       	inc	r0
     ca8:	00 0c       	add	r0, r0
     caa:	11 f4       	brne	.+4      	; 0xcb0 <__fp_round+0xc>
     cac:	88 23       	and	r24, r24
     cae:	52 f0       	brmi	.+20     	; 0xcc4 <__fp_round+0x20>
     cb0:	bb 0f       	add	r27, r27
     cb2:	40 f4       	brcc	.+16     	; 0xcc4 <__fp_round+0x20>
     cb4:	bf 2b       	or	r27, r31
     cb6:	11 f4       	brne	.+4      	; 0xcbc <__fp_round+0x18>
     cb8:	60 ff       	sbrs	r22, 0
     cba:	04 c0       	rjmp	.+8      	; 0xcc4 <__fp_round+0x20>
     cbc:	6f 5f       	subi	r22, 0xFF	; 255
     cbe:	7f 4f       	sbci	r23, 0xFF	; 255
     cc0:	8f 4f       	sbci	r24, 0xFF	; 255
     cc2:	9f 4f       	sbci	r25, 0xFF	; 255
     cc4:	08 95       	ret

00000cc6 <__fp_split3>:
     cc6:	57 fd       	sbrc	r21, 7
     cc8:	90 58       	subi	r25, 0x80	; 128
     cca:	44 0f       	add	r20, r20
     ccc:	55 1f       	adc	r21, r21
     cce:	59 f0       	breq	.+22     	; 0xce6 <__fp_splitA+0x10>
     cd0:	5f 3f       	cpi	r21, 0xFF	; 255
     cd2:	71 f0       	breq	.+28     	; 0xcf0 <__fp_splitA+0x1a>
     cd4:	47 95       	ror	r20

00000cd6 <__fp_splitA>:
     cd6:	88 0f       	add	r24, r24
     cd8:	97 fb       	bst	r25, 7
     cda:	99 1f       	adc	r25, r25
     cdc:	61 f0       	breq	.+24     	; 0xcf6 <__fp_splitA+0x20>
     cde:	9f 3f       	cpi	r25, 0xFF	; 255
     ce0:	79 f0       	breq	.+30     	; 0xd00 <__fp_splitA+0x2a>
     ce2:	87 95       	ror	r24
     ce4:	08 95       	ret
     ce6:	12 16       	cp	r1, r18
     ce8:	13 06       	cpc	r1, r19
     cea:	14 06       	cpc	r1, r20
     cec:	55 1f       	adc	r21, r21
     cee:	f2 cf       	rjmp	.-28     	; 0xcd4 <__fp_split3+0xe>
     cf0:	46 95       	lsr	r20
     cf2:	f1 df       	rcall	.-30     	; 0xcd6 <__fp_splitA>
     cf4:	08 c0       	rjmp	.+16     	; 0xd06 <__fp_splitA+0x30>
     cf6:	16 16       	cp	r1, r22
     cf8:	17 06       	cpc	r1, r23
     cfa:	18 06       	cpc	r1, r24
     cfc:	99 1f       	adc	r25, r25
     cfe:	f1 cf       	rjmp	.-30     	; 0xce2 <__fp_splitA+0xc>
     d00:	86 95       	lsr	r24
     d02:	71 05       	cpc	r23, r1
     d04:	61 05       	cpc	r22, r1
     d06:	08 94       	sec
     d08:	08 95       	ret

00000d0a <__fp_zero>:
     d0a:	e8 94       	clt

00000d0c <__fp_szero>:
     d0c:	bb 27       	eor	r27, r27
     d0e:	66 27       	eor	r22, r22
     d10:	77 27       	eor	r23, r23
     d12:	cb 01       	movw	r24, r22
     d14:	97 f9       	bld	r25, 7
     d16:	08 95       	ret

00000d18 <__gesf2>:
     d18:	0e 94 fe 06 	call	0xdfc	; 0xdfc <__fp_cmp>
     d1c:	08 f4       	brcc	.+2      	; 0xd20 <__gesf2+0x8>
     d1e:	8f ef       	ldi	r24, 0xFF	; 255
     d20:	08 95       	ret

00000d22 <__mulsf3>:
     d22:	0e 94 a4 06 	call	0xd48	; 0xd48 <__mulsf3x>
     d26:	0c 94 52 06 	jmp	0xca4	; 0xca4 <__fp_round>
     d2a:	0e 94 44 06 	call	0xc88	; 0xc88 <__fp_pscA>
     d2e:	38 f0       	brcs	.+14     	; 0xd3e <__mulsf3+0x1c>
     d30:	0e 94 4b 06 	call	0xc96	; 0xc96 <__fp_pscB>
     d34:	20 f0       	brcs	.+8      	; 0xd3e <__mulsf3+0x1c>
     d36:	95 23       	and	r25, r21
     d38:	11 f0       	breq	.+4      	; 0xd3e <__mulsf3+0x1c>
     d3a:	0c 94 3b 06 	jmp	0xc76	; 0xc76 <__fp_inf>
     d3e:	0c 94 41 06 	jmp	0xc82	; 0xc82 <__fp_nan>
     d42:	11 24       	eor	r1, r1
     d44:	0c 94 86 06 	jmp	0xd0c	; 0xd0c <__fp_szero>

00000d48 <__mulsf3x>:
     d48:	0e 94 63 06 	call	0xcc6	; 0xcc6 <__fp_split3>
     d4c:	70 f3       	brcs	.-36     	; 0xd2a <__mulsf3+0x8>

00000d4e <__mulsf3_pse>:
     d4e:	95 9f       	mul	r25, r21
     d50:	c1 f3       	breq	.-16     	; 0xd42 <__mulsf3+0x20>
     d52:	95 0f       	add	r25, r21
     d54:	50 e0       	ldi	r21, 0x00	; 0
     d56:	55 1f       	adc	r21, r21
     d58:	62 9f       	mul	r22, r18
     d5a:	f0 01       	movw	r30, r0
     d5c:	72 9f       	mul	r23, r18
     d5e:	bb 27       	eor	r27, r27
     d60:	f0 0d       	add	r31, r0
     d62:	b1 1d       	adc	r27, r1
     d64:	63 9f       	mul	r22, r19
     d66:	aa 27       	eor	r26, r26
     d68:	f0 0d       	add	r31, r0
     d6a:	b1 1d       	adc	r27, r1
     d6c:	aa 1f       	adc	r26, r26
     d6e:	64 9f       	mul	r22, r20
     d70:	66 27       	eor	r22, r22
     d72:	b0 0d       	add	r27, r0
     d74:	a1 1d       	adc	r26, r1
     d76:	66 1f       	adc	r22, r22
     d78:	82 9f       	mul	r24, r18
     d7a:	22 27       	eor	r18, r18
     d7c:	b0 0d       	add	r27, r0
     d7e:	a1 1d       	adc	r26, r1
     d80:	62 1f       	adc	r22, r18
     d82:	73 9f       	mul	r23, r19
     d84:	b0 0d       	add	r27, r0
     d86:	a1 1d       	adc	r26, r1
     d88:	62 1f       	adc	r22, r18
     d8a:	83 9f       	mul	r24, r19
     d8c:	a0 0d       	add	r26, r0
     d8e:	61 1d       	adc	r22, r1
     d90:	22 1f       	adc	r18, r18
     d92:	74 9f       	mul	r23, r20
     d94:	33 27       	eor	r19, r19
     d96:	a0 0d       	add	r26, r0
     d98:	61 1d       	adc	r22, r1
     d9a:	23 1f       	adc	r18, r19
     d9c:	84 9f       	mul	r24, r20
     d9e:	60 0d       	add	r22, r0
     da0:	21 1d       	adc	r18, r1
     da2:	82 2f       	mov	r24, r18
     da4:	76 2f       	mov	r23, r22
     da6:	6a 2f       	mov	r22, r26
     da8:	11 24       	eor	r1, r1
     daa:	9f 57       	subi	r25, 0x7F	; 127
     dac:	50 40       	sbci	r21, 0x00	; 0
     dae:	9a f0       	brmi	.+38     	; 0xdd6 <__mulsf3_pse+0x88>
     db0:	f1 f0       	breq	.+60     	; 0xdee <__mulsf3_pse+0xa0>
     db2:	88 23       	and	r24, r24
     db4:	4a f0       	brmi	.+18     	; 0xdc8 <__mulsf3_pse+0x7a>
     db6:	ee 0f       	add	r30, r30
     db8:	ff 1f       	adc	r31, r31
     dba:	bb 1f       	adc	r27, r27
     dbc:	66 1f       	adc	r22, r22
     dbe:	77 1f       	adc	r23, r23
     dc0:	88 1f       	adc	r24, r24
     dc2:	91 50       	subi	r25, 0x01	; 1
     dc4:	50 40       	sbci	r21, 0x00	; 0
     dc6:	a9 f7       	brne	.-22     	; 0xdb2 <__mulsf3_pse+0x64>
     dc8:	9e 3f       	cpi	r25, 0xFE	; 254
     dca:	51 05       	cpc	r21, r1
     dcc:	80 f0       	brcs	.+32     	; 0xdee <__mulsf3_pse+0xa0>
     dce:	0c 94 3b 06 	jmp	0xc76	; 0xc76 <__fp_inf>
     dd2:	0c 94 86 06 	jmp	0xd0c	; 0xd0c <__fp_szero>
     dd6:	5f 3f       	cpi	r21, 0xFF	; 255
     dd8:	e4 f3       	brlt	.-8      	; 0xdd2 <__mulsf3_pse+0x84>
     dda:	98 3e       	cpi	r25, 0xE8	; 232
     ddc:	d4 f3       	brlt	.-12     	; 0xdd2 <__mulsf3_pse+0x84>
     dde:	86 95       	lsr	r24
     de0:	77 95       	ror	r23
     de2:	67 95       	ror	r22
     de4:	b7 95       	ror	r27
     de6:	f7 95       	ror	r31
     de8:	e7 95       	ror	r30
     dea:	9f 5f       	subi	r25, 0xFF	; 255
     dec:	c1 f7       	brne	.-16     	; 0xdde <__mulsf3_pse+0x90>
     dee:	fe 2b       	or	r31, r30
     df0:	88 0f       	add	r24, r24
     df2:	91 1d       	adc	r25, r1
     df4:	96 95       	lsr	r25
     df6:	87 95       	ror	r24
     df8:	97 f9       	bld	r25, 7
     dfa:	08 95       	ret

00000dfc <__fp_cmp>:
     dfc:	99 0f       	add	r25, r25
     dfe:	00 08       	sbc	r0, r0
     e00:	55 0f       	add	r21, r21
     e02:	aa 0b       	sbc	r26, r26
     e04:	e0 e8       	ldi	r30, 0x80	; 128
     e06:	fe ef       	ldi	r31, 0xFE	; 254
     e08:	16 16       	cp	r1, r22
     e0a:	17 06       	cpc	r1, r23
     e0c:	e8 07       	cpc	r30, r24
     e0e:	f9 07       	cpc	r31, r25
     e10:	c0 f0       	brcs	.+48     	; 0xe42 <__fp_cmp+0x46>
     e12:	12 16       	cp	r1, r18
     e14:	13 06       	cpc	r1, r19
     e16:	e4 07       	cpc	r30, r20
     e18:	f5 07       	cpc	r31, r21
     e1a:	98 f0       	brcs	.+38     	; 0xe42 <__fp_cmp+0x46>
     e1c:	62 1b       	sub	r22, r18
     e1e:	73 0b       	sbc	r23, r19
     e20:	84 0b       	sbc	r24, r20
     e22:	95 0b       	sbc	r25, r21
     e24:	39 f4       	brne	.+14     	; 0xe34 <__fp_cmp+0x38>
     e26:	0a 26       	eor	r0, r26
     e28:	61 f0       	breq	.+24     	; 0xe42 <__fp_cmp+0x46>
     e2a:	23 2b       	or	r18, r19
     e2c:	24 2b       	or	r18, r20
     e2e:	25 2b       	or	r18, r21
     e30:	21 f4       	brne	.+8      	; 0xe3a <__fp_cmp+0x3e>
     e32:	08 95       	ret
     e34:	0a 26       	eor	r0, r26
     e36:	09 f4       	brne	.+2      	; 0xe3a <__fp_cmp+0x3e>
     e38:	a1 40       	sbci	r26, 0x01	; 1
     e3a:	a6 95       	lsr	r26
     e3c:	8f ef       	ldi	r24, 0xFF	; 255
     e3e:	81 1d       	adc	r24, r1
     e40:	81 1d       	adc	r24, r1
     e42:	08 95       	ret

00000e44 <vfprintf>:
     e44:	a3 e1       	ldi	r26, 0x13	; 19
     e46:	b0 e0       	ldi	r27, 0x00	; 0
     e48:	e8 e2       	ldi	r30, 0x28	; 40
     e4a:	f7 e0       	ldi	r31, 0x07	; 7
     e4c:	0c 94 c0 0a 	jmp	0x1580	; 0x1580 <__prologue_saves__>
     e50:	6c 01       	movw	r12, r24
     e52:	4b 01       	movw	r8, r22
     e54:	2a 01       	movw	r4, r20
     e56:	fc 01       	movw	r30, r24
     e58:	17 82       	std	Z+7, r1	; 0x07
     e5a:	16 82       	std	Z+6, r1	; 0x06
     e5c:	83 81       	ldd	r24, Z+3	; 0x03
     e5e:	81 ff       	sbrs	r24, 1
     e60:	43 c3       	rjmp	.+1670   	; 0x14e8 <vfprintf+0x6a4>
     e62:	ae 01       	movw	r20, r28
     e64:	4f 5f       	subi	r20, 0xFF	; 255
     e66:	5f 4f       	sbci	r21, 0xFF	; 255
     e68:	3a 01       	movw	r6, r20
     e6a:	f6 01       	movw	r30, r12
     e6c:	93 81       	ldd	r25, Z+3	; 0x03
     e6e:	f4 01       	movw	r30, r8
     e70:	93 fd       	sbrc	r25, 3
     e72:	85 91       	lpm	r24, Z+
     e74:	93 ff       	sbrs	r25, 3
     e76:	81 91       	ld	r24, Z+
     e78:	4f 01       	movw	r8, r30
     e7a:	88 23       	and	r24, r24
     e7c:	09 f4       	brne	.+2      	; 0xe80 <vfprintf+0x3c>
     e7e:	30 c3       	rjmp	.+1632   	; 0x14e0 <vfprintf+0x69c>
     e80:	85 32       	cpi	r24, 0x25	; 37
     e82:	39 f4       	brne	.+14     	; 0xe92 <vfprintf+0x4e>
     e84:	93 fd       	sbrc	r25, 3
     e86:	85 91       	lpm	r24, Z+
     e88:	93 ff       	sbrs	r25, 3
     e8a:	81 91       	ld	r24, Z+
     e8c:	4f 01       	movw	r8, r30
     e8e:	85 32       	cpi	r24, 0x25	; 37
     e90:	39 f4       	brne	.+14     	; 0xea0 <vfprintf+0x5c>
     e92:	b6 01       	movw	r22, r12
     e94:	90 e0       	ldi	r25, 0x00	; 0
     e96:	0e 94 f6 0b 	call	0x17ec	; 0x17ec <fputc>
     e9a:	52 01       	movw	r10, r4
     e9c:	25 01       	movw	r4, r10
     e9e:	e5 cf       	rjmp	.-54     	; 0xe6a <vfprintf+0x26>
     ea0:	10 e0       	ldi	r17, 0x00	; 0
     ea2:	f1 2c       	mov	r15, r1
     ea4:	20 e0       	ldi	r18, 0x00	; 0
     ea6:	20 32       	cpi	r18, 0x20	; 32
     ea8:	a0 f4       	brcc	.+40     	; 0xed2 <vfprintf+0x8e>
     eaa:	8b 32       	cpi	r24, 0x2B	; 43
     eac:	69 f0       	breq	.+26     	; 0xec8 <vfprintf+0x84>
     eae:	30 f4       	brcc	.+12     	; 0xebc <vfprintf+0x78>
     eb0:	80 32       	cpi	r24, 0x20	; 32
     eb2:	59 f0       	breq	.+22     	; 0xeca <vfprintf+0x86>
     eb4:	83 32       	cpi	r24, 0x23	; 35
     eb6:	69 f4       	brne	.+26     	; 0xed2 <vfprintf+0x8e>
     eb8:	20 61       	ori	r18, 0x10	; 16
     eba:	2c c0       	rjmp	.+88     	; 0xf14 <vfprintf+0xd0>
     ebc:	8d 32       	cpi	r24, 0x2D	; 45
     ebe:	39 f0       	breq	.+14     	; 0xece <vfprintf+0x8a>
     ec0:	80 33       	cpi	r24, 0x30	; 48
     ec2:	39 f4       	brne	.+14     	; 0xed2 <vfprintf+0x8e>
     ec4:	21 60       	ori	r18, 0x01	; 1
     ec6:	26 c0       	rjmp	.+76     	; 0xf14 <vfprintf+0xd0>
     ec8:	22 60       	ori	r18, 0x02	; 2
     eca:	24 60       	ori	r18, 0x04	; 4
     ecc:	23 c0       	rjmp	.+70     	; 0xf14 <vfprintf+0xd0>
     ece:	28 60       	ori	r18, 0x08	; 8
     ed0:	21 c0       	rjmp	.+66     	; 0xf14 <vfprintf+0xd0>
     ed2:	27 fd       	sbrc	r18, 7
     ed4:	27 c0       	rjmp	.+78     	; 0xf24 <vfprintf+0xe0>
     ed6:	30 ed       	ldi	r19, 0xD0	; 208
     ed8:	38 0f       	add	r19, r24
     eda:	3a 30       	cpi	r19, 0x0A	; 10
     edc:	78 f4       	brcc	.+30     	; 0xefc <vfprintf+0xb8>
     ede:	26 ff       	sbrs	r18, 6
     ee0:	06 c0       	rjmp	.+12     	; 0xeee <vfprintf+0xaa>
     ee2:	fa e0       	ldi	r31, 0x0A	; 10
     ee4:	1f 9f       	mul	r17, r31
     ee6:	30 0d       	add	r19, r0
     ee8:	11 24       	eor	r1, r1
     eea:	13 2f       	mov	r17, r19
     eec:	13 c0       	rjmp	.+38     	; 0xf14 <vfprintf+0xd0>
     eee:	4a e0       	ldi	r20, 0x0A	; 10
     ef0:	f4 9e       	mul	r15, r20
     ef2:	30 0d       	add	r19, r0
     ef4:	11 24       	eor	r1, r1
     ef6:	f3 2e       	mov	r15, r19
     ef8:	20 62       	ori	r18, 0x20	; 32
     efa:	0c c0       	rjmp	.+24     	; 0xf14 <vfprintf+0xd0>
     efc:	8e 32       	cpi	r24, 0x2E	; 46
     efe:	21 f4       	brne	.+8      	; 0xf08 <vfprintf+0xc4>
     f00:	26 fd       	sbrc	r18, 6
     f02:	ee c2       	rjmp	.+1500   	; 0x14e0 <vfprintf+0x69c>
     f04:	20 64       	ori	r18, 0x40	; 64
     f06:	06 c0       	rjmp	.+12     	; 0xf14 <vfprintf+0xd0>
     f08:	8c 36       	cpi	r24, 0x6C	; 108
     f0a:	11 f4       	brne	.+4      	; 0xf10 <vfprintf+0xcc>
     f0c:	20 68       	ori	r18, 0x80	; 128
     f0e:	02 c0       	rjmp	.+4      	; 0xf14 <vfprintf+0xd0>
     f10:	88 36       	cpi	r24, 0x68	; 104
     f12:	41 f4       	brne	.+16     	; 0xf24 <vfprintf+0xe0>
     f14:	f4 01       	movw	r30, r8
     f16:	93 fd       	sbrc	r25, 3
     f18:	85 91       	lpm	r24, Z+
     f1a:	93 ff       	sbrs	r25, 3
     f1c:	81 91       	ld	r24, Z+
     f1e:	4f 01       	movw	r8, r30
     f20:	81 11       	cpse	r24, r1
     f22:	c1 cf       	rjmp	.-126    	; 0xea6 <vfprintf+0x62>
     f24:	9b eb       	ldi	r25, 0xBB	; 187
     f26:	98 0f       	add	r25, r24
     f28:	93 30       	cpi	r25, 0x03	; 3
     f2a:	18 f4       	brcc	.+6      	; 0xf32 <vfprintf+0xee>
     f2c:	20 61       	ori	r18, 0x10	; 16
     f2e:	80 5e       	subi	r24, 0xE0	; 224
     f30:	06 c0       	rjmp	.+12     	; 0xf3e <vfprintf+0xfa>
     f32:	9b e9       	ldi	r25, 0x9B	; 155
     f34:	98 0f       	add	r25, r24
     f36:	93 30       	cpi	r25, 0x03	; 3
     f38:	08 f0       	brcs	.+2      	; 0xf3c <vfprintf+0xf8>
     f3a:	71 c1       	rjmp	.+738    	; 0x121e <vfprintf+0x3da>
     f3c:	2f 7e       	andi	r18, 0xEF	; 239
     f3e:	26 ff       	sbrs	r18, 6
     f40:	16 e0       	ldi	r17, 0x06	; 6
     f42:	2f 73       	andi	r18, 0x3F	; 63
     f44:	32 2e       	mov	r3, r18
     f46:	85 36       	cpi	r24, 0x65	; 101
     f48:	19 f4       	brne	.+6      	; 0xf50 <vfprintf+0x10c>
     f4a:	20 64       	ori	r18, 0x40	; 64
     f4c:	32 2e       	mov	r3, r18
     f4e:	08 c0       	rjmp	.+16     	; 0xf60 <vfprintf+0x11c>
     f50:	86 36       	cpi	r24, 0x66	; 102
     f52:	21 f4       	brne	.+8      	; 0xf5c <vfprintf+0x118>
     f54:	f2 2f       	mov	r31, r18
     f56:	f0 68       	ori	r31, 0x80	; 128
     f58:	3f 2e       	mov	r3, r31
     f5a:	02 c0       	rjmp	.+4      	; 0xf60 <vfprintf+0x11c>
     f5c:	11 11       	cpse	r17, r1
     f5e:	11 50       	subi	r17, 0x01	; 1
     f60:	37 fe       	sbrs	r3, 7
     f62:	07 c0       	rjmp	.+14     	; 0xf72 <vfprintf+0x12e>
     f64:	1c 33       	cpi	r17, 0x3C	; 60
     f66:	50 f4       	brcc	.+20     	; 0xf7c <vfprintf+0x138>
     f68:	ee 24       	eor	r14, r14
     f6a:	e3 94       	inc	r14
     f6c:	e1 0e       	add	r14, r17
     f6e:	27 e0       	ldi	r18, 0x07	; 7
     f70:	0b c0       	rjmp	.+22     	; 0xf88 <vfprintf+0x144>
     f72:	18 30       	cpi	r17, 0x08	; 8
     f74:	38 f0       	brcs	.+14     	; 0xf84 <vfprintf+0x140>
     f76:	27 e0       	ldi	r18, 0x07	; 7
     f78:	17 e0       	ldi	r17, 0x07	; 7
     f7a:	05 c0       	rjmp	.+10     	; 0xf86 <vfprintf+0x142>
     f7c:	27 e0       	ldi	r18, 0x07	; 7
     f7e:	4c e3       	ldi	r20, 0x3C	; 60
     f80:	e4 2e       	mov	r14, r20
     f82:	02 c0       	rjmp	.+4      	; 0xf88 <vfprintf+0x144>
     f84:	21 2f       	mov	r18, r17
     f86:	e1 2c       	mov	r14, r1
     f88:	52 01       	movw	r10, r4
     f8a:	44 e0       	ldi	r20, 0x04	; 4
     f8c:	a4 0e       	add	r10, r20
     f8e:	b1 1c       	adc	r11, r1
     f90:	f2 01       	movw	r30, r4
     f92:	60 81       	ld	r22, Z
     f94:	71 81       	ldd	r23, Z+1	; 0x01
     f96:	82 81       	ldd	r24, Z+2	; 0x02
     f98:	93 81       	ldd	r25, Z+3	; 0x03
     f9a:	0e 2d       	mov	r16, r14
     f9c:	a3 01       	movw	r20, r6
     f9e:	0e 94 fd 0a 	call	0x15fa	; 0x15fa <__ftoa_engine>
     fa2:	2c 01       	movw	r4, r24
     fa4:	09 81       	ldd	r16, Y+1	; 0x01
     fa6:	00 ff       	sbrs	r16, 0
     fa8:	02 c0       	rjmp	.+4      	; 0xfae <vfprintf+0x16a>
     faa:	03 ff       	sbrs	r16, 3
     fac:	07 c0       	rjmp	.+14     	; 0xfbc <vfprintf+0x178>
     fae:	31 fc       	sbrc	r3, 1
     fb0:	08 c0       	rjmp	.+16     	; 0xfc2 <vfprintf+0x17e>
     fb2:	32 fe       	sbrs	r3, 2
     fb4:	09 c0       	rjmp	.+18     	; 0xfc8 <vfprintf+0x184>
     fb6:	30 e2       	ldi	r19, 0x20	; 32
     fb8:	23 2e       	mov	r2, r19
     fba:	07 c0       	rjmp	.+14     	; 0xfca <vfprintf+0x186>
     fbc:	2d e2       	ldi	r18, 0x2D	; 45
     fbe:	22 2e       	mov	r2, r18
     fc0:	04 c0       	rjmp	.+8      	; 0xfca <vfprintf+0x186>
     fc2:	9b e2       	ldi	r25, 0x2B	; 43
     fc4:	29 2e       	mov	r2, r25
     fc6:	01 c0       	rjmp	.+2      	; 0xfca <vfprintf+0x186>
     fc8:	21 2c       	mov	r2, r1
     fca:	80 2f       	mov	r24, r16
     fcc:	8c 70       	andi	r24, 0x0C	; 12
     fce:	19 f0       	breq	.+6      	; 0xfd6 <vfprintf+0x192>
     fd0:	21 10       	cpse	r2, r1
     fd2:	68 c2       	rjmp	.+1232   	; 0x14a4 <vfprintf+0x660>
     fd4:	a8 c2       	rjmp	.+1360   	; 0x1526 <vfprintf+0x6e2>
     fd6:	37 fe       	sbrs	r3, 7
     fd8:	0f c0       	rjmp	.+30     	; 0xff8 <vfprintf+0x1b4>
     fda:	e4 0c       	add	r14, r4
     fdc:	04 ff       	sbrs	r16, 4
     fde:	04 c0       	rjmp	.+8      	; 0xfe8 <vfprintf+0x1a4>
     fe0:	8a 81       	ldd	r24, Y+2	; 0x02
     fe2:	81 33       	cpi	r24, 0x31	; 49
     fe4:	09 f4       	brne	.+2      	; 0xfe8 <vfprintf+0x1a4>
     fe6:	ea 94       	dec	r14
     fe8:	1e 14       	cp	r1, r14
     fea:	74 f5       	brge	.+92     	; 0x1048 <vfprintf+0x204>
     fec:	f8 e0       	ldi	r31, 0x08	; 8
     fee:	fe 15       	cp	r31, r14
     ff0:	78 f5       	brcc	.+94     	; 0x1050 <vfprintf+0x20c>
     ff2:	88 e0       	ldi	r24, 0x08	; 8
     ff4:	e8 2e       	mov	r14, r24
     ff6:	2c c0       	rjmp	.+88     	; 0x1050 <vfprintf+0x20c>
     ff8:	36 fc       	sbrc	r3, 6
     ffa:	2a c0       	rjmp	.+84     	; 0x1050 <vfprintf+0x20c>
     ffc:	81 2f       	mov	r24, r17
     ffe:	90 e0       	ldi	r25, 0x00	; 0
    1000:	84 15       	cp	r24, r4
    1002:	95 05       	cpc	r25, r5
    1004:	9c f0       	brlt	.+38     	; 0x102c <vfprintf+0x1e8>
    1006:	2c ef       	ldi	r18, 0xFC	; 252
    1008:	42 16       	cp	r4, r18
    100a:	2f ef       	ldi	r18, 0xFF	; 255
    100c:	52 06       	cpc	r5, r18
    100e:	74 f0       	brlt	.+28     	; 0x102c <vfprintf+0x1e8>
    1010:	43 2d       	mov	r20, r3
    1012:	40 68       	ori	r20, 0x80	; 128
    1014:	34 2e       	mov	r3, r20
    1016:	0a c0       	rjmp	.+20     	; 0x102c <vfprintf+0x1e8>
    1018:	e2 e0       	ldi	r30, 0x02	; 2
    101a:	f0 e0       	ldi	r31, 0x00	; 0
    101c:	ec 0f       	add	r30, r28
    101e:	fd 1f       	adc	r31, r29
    1020:	e1 0f       	add	r30, r17
    1022:	f1 1d       	adc	r31, r1
    1024:	80 81       	ld	r24, Z
    1026:	80 33       	cpi	r24, 0x30	; 48
    1028:	19 f4       	brne	.+6      	; 0x1030 <vfprintf+0x1ec>
    102a:	11 50       	subi	r17, 0x01	; 1
    102c:	11 11       	cpse	r17, r1
    102e:	f4 cf       	rjmp	.-24     	; 0x1018 <vfprintf+0x1d4>
    1030:	37 fe       	sbrs	r3, 7
    1032:	0e c0       	rjmp	.+28     	; 0x1050 <vfprintf+0x20c>
    1034:	ee 24       	eor	r14, r14
    1036:	e3 94       	inc	r14
    1038:	e1 0e       	add	r14, r17
    103a:	81 2f       	mov	r24, r17
    103c:	90 e0       	ldi	r25, 0x00	; 0
    103e:	48 16       	cp	r4, r24
    1040:	59 06       	cpc	r5, r25
    1042:	2c f4       	brge	.+10     	; 0x104e <vfprintf+0x20a>
    1044:	14 19       	sub	r17, r4
    1046:	04 c0       	rjmp	.+8      	; 0x1050 <vfprintf+0x20c>
    1048:	ee 24       	eor	r14, r14
    104a:	e3 94       	inc	r14
    104c:	01 c0       	rjmp	.+2      	; 0x1050 <vfprintf+0x20c>
    104e:	10 e0       	ldi	r17, 0x00	; 0
    1050:	37 fe       	sbrs	r3, 7
    1052:	06 c0       	rjmp	.+12     	; 0x1060 <vfprintf+0x21c>
    1054:	14 14       	cp	r1, r4
    1056:	15 04       	cpc	r1, r5
    1058:	34 f4       	brge	.+12     	; 0x1066 <vfprintf+0x222>
    105a:	c2 01       	movw	r24, r4
    105c:	01 96       	adiw	r24, 0x01	; 1
    105e:	05 c0       	rjmp	.+10     	; 0x106a <vfprintf+0x226>
    1060:	85 e0       	ldi	r24, 0x05	; 5
    1062:	90 e0       	ldi	r25, 0x00	; 0
    1064:	02 c0       	rjmp	.+4      	; 0x106a <vfprintf+0x226>
    1066:	81 e0       	ldi	r24, 0x01	; 1
    1068:	90 e0       	ldi	r25, 0x00	; 0
    106a:	21 10       	cpse	r2, r1
    106c:	01 96       	adiw	r24, 0x01	; 1
    106e:	11 23       	and	r17, r17
    1070:	31 f0       	breq	.+12     	; 0x107e <vfprintf+0x23a>
    1072:	21 2f       	mov	r18, r17
    1074:	30 e0       	ldi	r19, 0x00	; 0
    1076:	2f 5f       	subi	r18, 0xFF	; 255
    1078:	3f 4f       	sbci	r19, 0xFF	; 255
    107a:	82 0f       	add	r24, r18
    107c:	93 1f       	adc	r25, r19
    107e:	2f 2d       	mov	r18, r15
    1080:	30 e0       	ldi	r19, 0x00	; 0
    1082:	82 17       	cp	r24, r18
    1084:	93 07       	cpc	r25, r19
    1086:	14 f4       	brge	.+4      	; 0x108c <vfprintf+0x248>
    1088:	f8 1a       	sub	r15, r24
    108a:	01 c0       	rjmp	.+2      	; 0x108e <vfprintf+0x24a>
    108c:	f1 2c       	mov	r15, r1
    108e:	83 2d       	mov	r24, r3
    1090:	89 70       	andi	r24, 0x09	; 9
    1092:	49 f4       	brne	.+18     	; 0x10a6 <vfprintf+0x262>
    1094:	ff 20       	and	r15, r15
    1096:	39 f0       	breq	.+14     	; 0x10a6 <vfprintf+0x262>
    1098:	b6 01       	movw	r22, r12
    109a:	80 e2       	ldi	r24, 0x20	; 32
    109c:	90 e0       	ldi	r25, 0x00	; 0
    109e:	0e 94 f6 0b 	call	0x17ec	; 0x17ec <fputc>
    10a2:	fa 94       	dec	r15
    10a4:	f7 cf       	rjmp	.-18     	; 0x1094 <vfprintf+0x250>
    10a6:	22 20       	and	r2, r2
    10a8:	29 f0       	breq	.+10     	; 0x10b4 <vfprintf+0x270>
    10aa:	b6 01       	movw	r22, r12
    10ac:	82 2d       	mov	r24, r2
    10ae:	90 e0       	ldi	r25, 0x00	; 0
    10b0:	0e 94 f6 0b 	call	0x17ec	; 0x17ec <fputc>
    10b4:	33 fc       	sbrc	r3, 3
    10b6:	09 c0       	rjmp	.+18     	; 0x10ca <vfprintf+0x286>
    10b8:	ff 20       	and	r15, r15
    10ba:	39 f0       	breq	.+14     	; 0x10ca <vfprintf+0x286>
    10bc:	b6 01       	movw	r22, r12
    10be:	80 e3       	ldi	r24, 0x30	; 48
    10c0:	90 e0       	ldi	r25, 0x00	; 0
    10c2:	0e 94 f6 0b 	call	0x17ec	; 0x17ec <fputc>
    10c6:	fa 94       	dec	r15
    10c8:	f7 cf       	rjmp	.-18     	; 0x10b8 <vfprintf+0x274>
    10ca:	37 fe       	sbrs	r3, 7
    10cc:	5a c0       	rjmp	.+180    	; 0x1182 <vfprintf+0x33e>
    10ce:	94 2d       	mov	r25, r4
    10d0:	85 2d       	mov	r24, r5
    10d2:	57 fe       	sbrs	r5, 7
    10d4:	02 c0       	rjmp	.+4      	; 0x10da <vfprintf+0x296>
    10d6:	90 e0       	ldi	r25, 0x00	; 0
    10d8:	80 e0       	ldi	r24, 0x00	; 0
    10da:	29 2e       	mov	r2, r25
    10dc:	38 2e       	mov	r3, r24
    10de:	20 e0       	ldi	r18, 0x00	; 0
    10e0:	30 e0       	ldi	r19, 0x00	; 0
    10e2:	a2 01       	movw	r20, r4
    10e4:	4e 19       	sub	r20, r14
    10e6:	51 09       	sbc	r21, r1
    10e8:	5d 87       	std	Y+13, r21	; 0x0d
    10ea:	4c 87       	std	Y+12, r20	; 0x0c
    10ec:	a2 01       	movw	r20, r4
    10ee:	42 19       	sub	r20, r2
    10f0:	53 09       	sbc	r21, r3
    10f2:	5f 87       	std	Y+15, r21	; 0x0f
    10f4:	4e 87       	std	Y+14, r20	; 0x0e
    10f6:	61 2f       	mov	r22, r17
    10f8:	70 e0       	ldi	r23, 0x00	; 0
    10fa:	44 27       	eor	r20, r20
    10fc:	55 27       	eor	r21, r21
    10fe:	46 1b       	sub	r20, r22
    1100:	57 0b       	sbc	r21, r23
    1102:	59 8b       	std	Y+17, r21	; 0x11
    1104:	48 8b       	std	Y+16, r20	; 0x10
    1106:	5f ef       	ldi	r21, 0xFF	; 255
    1108:	25 16       	cp	r2, r21
    110a:	35 06       	cpc	r3, r21
    110c:	49 f4       	brne	.+18     	; 0x1120 <vfprintf+0x2dc>
    110e:	b6 01       	movw	r22, r12
    1110:	8e e2       	ldi	r24, 0x2E	; 46
    1112:	90 e0       	ldi	r25, 0x00	; 0
    1114:	2a 8b       	std	Y+18, r18	; 0x12
    1116:	3b 8b       	std	Y+19, r19	; 0x13
    1118:	0e 94 f6 0b 	call	0x17ec	; 0x17ec <fputc>
    111c:	3b 89       	ldd	r19, Y+19	; 0x13
    111e:	2a 89       	ldd	r18, Y+18	; 0x12
    1120:	42 14       	cp	r4, r2
    1122:	53 04       	cpc	r5, r3
    1124:	6c f0       	brlt	.+26     	; 0x1140 <vfprintf+0x2fc>
    1126:	4c 85       	ldd	r20, Y+12	; 0x0c
    1128:	5d 85       	ldd	r21, Y+13	; 0x0d
    112a:	42 15       	cp	r20, r2
    112c:	53 05       	cpc	r21, r3
    112e:	44 f4       	brge	.+16     	; 0x1140 <vfprintf+0x2fc>
    1130:	ee 85       	ldd	r30, Y+14	; 0x0e
    1132:	ff 85       	ldd	r31, Y+15	; 0x0f
    1134:	e2 0f       	add	r30, r18
    1136:	f3 1f       	adc	r31, r19
    1138:	e6 0d       	add	r30, r6
    113a:	f7 1d       	adc	r31, r7
    113c:	81 81       	ldd	r24, Z+1	; 0x01
    113e:	01 c0       	rjmp	.+2      	; 0x1142 <vfprintf+0x2fe>
    1140:	80 e3       	ldi	r24, 0x30	; 48
    1142:	51 e0       	ldi	r21, 0x01	; 1
    1144:	25 1a       	sub	r2, r21
    1146:	31 08       	sbc	r3, r1
    1148:	2f 5f       	subi	r18, 0xFF	; 255
    114a:	3f 4f       	sbci	r19, 0xFF	; 255
    114c:	48 89       	ldd	r20, Y+16	; 0x10
    114e:	59 89       	ldd	r21, Y+17	; 0x11
    1150:	24 16       	cp	r2, r20
    1152:	35 06       	cpc	r3, r21
    1154:	4c f0       	brlt	.+18     	; 0x1168 <vfprintf+0x324>
    1156:	b6 01       	movw	r22, r12
    1158:	90 e0       	ldi	r25, 0x00	; 0
    115a:	2a 8b       	std	Y+18, r18	; 0x12
    115c:	3b 8b       	std	Y+19, r19	; 0x13
    115e:	0e 94 f6 0b 	call	0x17ec	; 0x17ec <fputc>
    1162:	2a 89       	ldd	r18, Y+18	; 0x12
    1164:	3b 89       	ldd	r19, Y+19	; 0x13
    1166:	cf cf       	rjmp	.-98     	; 0x1106 <vfprintf+0x2c2>
    1168:	24 14       	cp	r2, r4
    116a:	35 04       	cpc	r3, r5
    116c:	39 f4       	brne	.+14     	; 0x117c <vfprintf+0x338>
    116e:	9a 81       	ldd	r25, Y+2	; 0x02
    1170:	96 33       	cpi	r25, 0x36	; 54
    1172:	18 f4       	brcc	.+6      	; 0x117a <vfprintf+0x336>
    1174:	95 33       	cpi	r25, 0x35	; 53
    1176:	11 f4       	brne	.+4      	; 0x117c <vfprintf+0x338>
    1178:	04 ff       	sbrs	r16, 4
    117a:	81 e3       	ldi	r24, 0x31	; 49
    117c:	b6 01       	movw	r22, r12
    117e:	90 e0       	ldi	r25, 0x00	; 0
    1180:	4b c0       	rjmp	.+150    	; 0x1218 <vfprintf+0x3d4>
    1182:	8a 81       	ldd	r24, Y+2	; 0x02
    1184:	81 33       	cpi	r24, 0x31	; 49
    1186:	09 f0       	breq	.+2      	; 0x118a <vfprintf+0x346>
    1188:	0f 7e       	andi	r16, 0xEF	; 239
    118a:	b6 01       	movw	r22, r12
    118c:	90 e0       	ldi	r25, 0x00	; 0
    118e:	0e 94 f6 0b 	call	0x17ec	; 0x17ec <fputc>
    1192:	11 11       	cpse	r17, r1
    1194:	05 c0       	rjmp	.+10     	; 0x11a0 <vfprintf+0x35c>
    1196:	34 fc       	sbrc	r3, 4
    1198:	18 c0       	rjmp	.+48     	; 0x11ca <vfprintf+0x386>
    119a:	85 e6       	ldi	r24, 0x65	; 101
    119c:	90 e0       	ldi	r25, 0x00	; 0
    119e:	17 c0       	rjmp	.+46     	; 0x11ce <vfprintf+0x38a>
    11a0:	b6 01       	movw	r22, r12
    11a2:	8e e2       	ldi	r24, 0x2E	; 46
    11a4:	90 e0       	ldi	r25, 0x00	; 0
    11a6:	0e 94 f6 0b 	call	0x17ec	; 0x17ec <fputc>
    11aa:	82 e0       	ldi	r24, 0x02	; 2
    11ac:	ee 24       	eor	r14, r14
    11ae:	e3 94       	inc	r14
    11b0:	e8 0e       	add	r14, r24
    11b2:	f3 01       	movw	r30, r6
    11b4:	e8 0f       	add	r30, r24
    11b6:	f1 1d       	adc	r31, r1
    11b8:	80 81       	ld	r24, Z
    11ba:	b6 01       	movw	r22, r12
    11bc:	90 e0       	ldi	r25, 0x00	; 0
    11be:	0e 94 f6 0b 	call	0x17ec	; 0x17ec <fputc>
    11c2:	11 50       	subi	r17, 0x01	; 1
    11c4:	8e 2d       	mov	r24, r14
    11c6:	91 f7       	brne	.-28     	; 0x11ac <vfprintf+0x368>
    11c8:	e6 cf       	rjmp	.-52     	; 0x1196 <vfprintf+0x352>
    11ca:	85 e4       	ldi	r24, 0x45	; 69
    11cc:	90 e0       	ldi	r25, 0x00	; 0
    11ce:	b6 01       	movw	r22, r12
    11d0:	0e 94 f6 0b 	call	0x17ec	; 0x17ec <fputc>
    11d4:	57 fc       	sbrc	r5, 7
    11d6:	05 c0       	rjmp	.+10     	; 0x11e2 <vfprintf+0x39e>
    11d8:	41 14       	cp	r4, r1
    11da:	51 04       	cpc	r5, r1
    11dc:	39 f4       	brne	.+14     	; 0x11ec <vfprintf+0x3a8>
    11de:	04 ff       	sbrs	r16, 4
    11e0:	05 c0       	rjmp	.+10     	; 0x11ec <vfprintf+0x3a8>
    11e2:	51 94       	neg	r5
    11e4:	41 94       	neg	r4
    11e6:	51 08       	sbc	r5, r1
    11e8:	8d e2       	ldi	r24, 0x2D	; 45
    11ea:	01 c0       	rjmp	.+2      	; 0x11ee <vfprintf+0x3aa>
    11ec:	8b e2       	ldi	r24, 0x2B	; 43
    11ee:	b6 01       	movw	r22, r12
    11f0:	90 e0       	ldi	r25, 0x00	; 0
    11f2:	0e 94 f6 0b 	call	0x17ec	; 0x17ec <fputc>
    11f6:	80 e3       	ldi	r24, 0x30	; 48
    11f8:	9a e0       	ldi	r25, 0x0A	; 10
    11fa:	49 16       	cp	r4, r25
    11fc:	51 04       	cpc	r5, r1
    11fe:	2c f0       	brlt	.+10     	; 0x120a <vfprintf+0x3c6>
    1200:	8f 5f       	subi	r24, 0xFF	; 255
    1202:	5a e0       	ldi	r21, 0x0A	; 10
    1204:	45 1a       	sub	r4, r21
    1206:	51 08       	sbc	r5, r1
    1208:	f7 cf       	rjmp	.-18     	; 0x11f8 <vfprintf+0x3b4>
    120a:	b6 01       	movw	r22, r12
    120c:	90 e0       	ldi	r25, 0x00	; 0
    120e:	0e 94 f6 0b 	call	0x17ec	; 0x17ec <fputc>
    1212:	b6 01       	movw	r22, r12
    1214:	c2 01       	movw	r24, r4
    1216:	c0 96       	adiw	r24, 0x30	; 48
    1218:	0e 94 f6 0b 	call	0x17ec	; 0x17ec <fputc>
    121c:	57 c1       	rjmp	.+686    	; 0x14cc <vfprintf+0x688>
    121e:	83 36       	cpi	r24, 0x63	; 99
    1220:	31 f0       	breq	.+12     	; 0x122e <vfprintf+0x3ea>
    1222:	83 37       	cpi	r24, 0x73	; 115
    1224:	79 f0       	breq	.+30     	; 0x1244 <vfprintf+0x400>
    1226:	83 35       	cpi	r24, 0x53	; 83
    1228:	09 f0       	breq	.+2      	; 0x122c <vfprintf+0x3e8>
    122a:	58 c0       	rjmp	.+176    	; 0x12dc <vfprintf+0x498>
    122c:	21 c0       	rjmp	.+66     	; 0x1270 <vfprintf+0x42c>
    122e:	52 01       	movw	r10, r4
    1230:	e2 e0       	ldi	r30, 0x02	; 2
    1232:	ae 0e       	add	r10, r30
    1234:	b1 1c       	adc	r11, r1
    1236:	f2 01       	movw	r30, r4
    1238:	80 81       	ld	r24, Z
    123a:	89 83       	std	Y+1, r24	; 0x01
    123c:	01 e0       	ldi	r16, 0x01	; 1
    123e:	10 e0       	ldi	r17, 0x00	; 0
    1240:	23 01       	movw	r4, r6
    1242:	14 c0       	rjmp	.+40     	; 0x126c <vfprintf+0x428>
    1244:	52 01       	movw	r10, r4
    1246:	f2 e0       	ldi	r31, 0x02	; 2
    1248:	af 0e       	add	r10, r31
    124a:	b1 1c       	adc	r11, r1
    124c:	f2 01       	movw	r30, r4
    124e:	40 80       	ld	r4, Z
    1250:	51 80       	ldd	r5, Z+1	; 0x01
    1252:	26 ff       	sbrs	r18, 6
    1254:	03 c0       	rjmp	.+6      	; 0x125c <vfprintf+0x418>
    1256:	61 2f       	mov	r22, r17
    1258:	70 e0       	ldi	r23, 0x00	; 0
    125a:	02 c0       	rjmp	.+4      	; 0x1260 <vfprintf+0x41c>
    125c:	6f ef       	ldi	r22, 0xFF	; 255
    125e:	7f ef       	ldi	r23, 0xFF	; 255
    1260:	c2 01       	movw	r24, r4
    1262:	2a 8b       	std	Y+18, r18	; 0x12
    1264:	0e 94 eb 0b 	call	0x17d6	; 0x17d6 <strnlen>
    1268:	8c 01       	movw	r16, r24
    126a:	2a 89       	ldd	r18, Y+18	; 0x12
    126c:	2f 77       	andi	r18, 0x7F	; 127
    126e:	15 c0       	rjmp	.+42     	; 0x129a <vfprintf+0x456>
    1270:	52 01       	movw	r10, r4
    1272:	f2 e0       	ldi	r31, 0x02	; 2
    1274:	af 0e       	add	r10, r31
    1276:	b1 1c       	adc	r11, r1
    1278:	f2 01       	movw	r30, r4
    127a:	40 80       	ld	r4, Z
    127c:	51 80       	ldd	r5, Z+1	; 0x01
    127e:	26 ff       	sbrs	r18, 6
    1280:	03 c0       	rjmp	.+6      	; 0x1288 <vfprintf+0x444>
    1282:	61 2f       	mov	r22, r17
    1284:	70 e0       	ldi	r23, 0x00	; 0
    1286:	02 c0       	rjmp	.+4      	; 0x128c <vfprintf+0x448>
    1288:	6f ef       	ldi	r22, 0xFF	; 255
    128a:	7f ef       	ldi	r23, 0xFF	; 255
    128c:	c2 01       	movw	r24, r4
    128e:	2a 8b       	std	Y+18, r18	; 0x12
    1290:	0e 94 d5 0b 	call	0x17aa	; 0x17aa <strnlen_P>
    1294:	8c 01       	movw	r16, r24
    1296:	2a 89       	ldd	r18, Y+18	; 0x12
    1298:	20 68       	ori	r18, 0x80	; 128
    129a:	32 2e       	mov	r3, r18
    129c:	23 fd       	sbrc	r18, 3
    129e:	1a c0       	rjmp	.+52     	; 0x12d4 <vfprintf+0x490>
    12a0:	8f 2d       	mov	r24, r15
    12a2:	90 e0       	ldi	r25, 0x00	; 0
    12a4:	08 17       	cp	r16, r24
    12a6:	19 07       	cpc	r17, r25
    12a8:	a8 f4       	brcc	.+42     	; 0x12d4 <vfprintf+0x490>
    12aa:	b6 01       	movw	r22, r12
    12ac:	80 e2       	ldi	r24, 0x20	; 32
    12ae:	90 e0       	ldi	r25, 0x00	; 0
    12b0:	0e 94 f6 0b 	call	0x17ec	; 0x17ec <fputc>
    12b4:	fa 94       	dec	r15
    12b6:	f4 cf       	rjmp	.-24     	; 0x12a0 <vfprintf+0x45c>
    12b8:	f2 01       	movw	r30, r4
    12ba:	37 fc       	sbrc	r3, 7
    12bc:	85 91       	lpm	r24, Z+
    12be:	37 fe       	sbrs	r3, 7
    12c0:	81 91       	ld	r24, Z+
    12c2:	2f 01       	movw	r4, r30
    12c4:	b6 01       	movw	r22, r12
    12c6:	90 e0       	ldi	r25, 0x00	; 0
    12c8:	0e 94 f6 0b 	call	0x17ec	; 0x17ec <fputc>
    12cc:	f1 10       	cpse	r15, r1
    12ce:	fa 94       	dec	r15
    12d0:	01 50       	subi	r16, 0x01	; 1
    12d2:	11 09       	sbc	r17, r1
    12d4:	01 15       	cp	r16, r1
    12d6:	11 05       	cpc	r17, r1
    12d8:	79 f7       	brne	.-34     	; 0x12b8 <vfprintf+0x474>
    12da:	f8 c0       	rjmp	.+496    	; 0x14cc <vfprintf+0x688>
    12dc:	84 36       	cpi	r24, 0x64	; 100
    12de:	11 f0       	breq	.+4      	; 0x12e4 <vfprintf+0x4a0>
    12e0:	89 36       	cpi	r24, 0x69	; 105
    12e2:	59 f5       	brne	.+86     	; 0x133a <vfprintf+0x4f6>
    12e4:	52 01       	movw	r10, r4
    12e6:	27 ff       	sbrs	r18, 7
    12e8:	09 c0       	rjmp	.+18     	; 0x12fc <vfprintf+0x4b8>
    12ea:	f4 e0       	ldi	r31, 0x04	; 4
    12ec:	af 0e       	add	r10, r31
    12ee:	b1 1c       	adc	r11, r1
    12f0:	f2 01       	movw	r30, r4
    12f2:	60 81       	ld	r22, Z
    12f4:	71 81       	ldd	r23, Z+1	; 0x01
    12f6:	82 81       	ldd	r24, Z+2	; 0x02
    12f8:	93 81       	ldd	r25, Z+3	; 0x03
    12fa:	0a c0       	rjmp	.+20     	; 0x1310 <vfprintf+0x4cc>
    12fc:	f2 e0       	ldi	r31, 0x02	; 2
    12fe:	af 0e       	add	r10, r31
    1300:	b1 1c       	adc	r11, r1
    1302:	f2 01       	movw	r30, r4
    1304:	60 81       	ld	r22, Z
    1306:	71 81       	ldd	r23, Z+1	; 0x01
    1308:	07 2e       	mov	r0, r23
    130a:	00 0c       	add	r0, r0
    130c:	88 0b       	sbc	r24, r24
    130e:	99 0b       	sbc	r25, r25
    1310:	2f 76       	andi	r18, 0x6F	; 111
    1312:	32 2e       	mov	r3, r18
    1314:	97 ff       	sbrs	r25, 7
    1316:	09 c0       	rjmp	.+18     	; 0x132a <vfprintf+0x4e6>
    1318:	90 95       	com	r25
    131a:	80 95       	com	r24
    131c:	70 95       	com	r23
    131e:	61 95       	neg	r22
    1320:	7f 4f       	sbci	r23, 0xFF	; 255
    1322:	8f 4f       	sbci	r24, 0xFF	; 255
    1324:	9f 4f       	sbci	r25, 0xFF	; 255
    1326:	20 68       	ori	r18, 0x80	; 128
    1328:	32 2e       	mov	r3, r18
    132a:	2a e0       	ldi	r18, 0x0A	; 10
    132c:	30 e0       	ldi	r19, 0x00	; 0
    132e:	a3 01       	movw	r20, r6
    1330:	0e 94 51 0c 	call	0x18a2	; 0x18a2 <__ultoa_invert>
    1334:	e8 2e       	mov	r14, r24
    1336:	e6 18       	sub	r14, r6
    1338:	3f c0       	rjmp	.+126    	; 0x13b8 <vfprintf+0x574>
    133a:	02 2f       	mov	r16, r18
    133c:	85 37       	cpi	r24, 0x75	; 117
    133e:	21 f4       	brne	.+8      	; 0x1348 <vfprintf+0x504>
    1340:	0f 7e       	andi	r16, 0xEF	; 239
    1342:	2a e0       	ldi	r18, 0x0A	; 10
    1344:	30 e0       	ldi	r19, 0x00	; 0
    1346:	1d c0       	rjmp	.+58     	; 0x1382 <vfprintf+0x53e>
    1348:	09 7f       	andi	r16, 0xF9	; 249
    134a:	8f 36       	cpi	r24, 0x6F	; 111
    134c:	91 f0       	breq	.+36     	; 0x1372 <vfprintf+0x52e>
    134e:	18 f4       	brcc	.+6      	; 0x1356 <vfprintf+0x512>
    1350:	88 35       	cpi	r24, 0x58	; 88
    1352:	59 f0       	breq	.+22     	; 0x136a <vfprintf+0x526>
    1354:	c5 c0       	rjmp	.+394    	; 0x14e0 <vfprintf+0x69c>
    1356:	80 37       	cpi	r24, 0x70	; 112
    1358:	19 f0       	breq	.+6      	; 0x1360 <vfprintf+0x51c>
    135a:	88 37       	cpi	r24, 0x78	; 120
    135c:	11 f0       	breq	.+4      	; 0x1362 <vfprintf+0x51e>
    135e:	c0 c0       	rjmp	.+384    	; 0x14e0 <vfprintf+0x69c>
    1360:	00 61       	ori	r16, 0x10	; 16
    1362:	04 ff       	sbrs	r16, 4
    1364:	09 c0       	rjmp	.+18     	; 0x1378 <vfprintf+0x534>
    1366:	04 60       	ori	r16, 0x04	; 4
    1368:	07 c0       	rjmp	.+14     	; 0x1378 <vfprintf+0x534>
    136a:	24 ff       	sbrs	r18, 4
    136c:	08 c0       	rjmp	.+16     	; 0x137e <vfprintf+0x53a>
    136e:	06 60       	ori	r16, 0x06	; 6
    1370:	06 c0       	rjmp	.+12     	; 0x137e <vfprintf+0x53a>
    1372:	28 e0       	ldi	r18, 0x08	; 8
    1374:	30 e0       	ldi	r19, 0x00	; 0
    1376:	05 c0       	rjmp	.+10     	; 0x1382 <vfprintf+0x53e>
    1378:	20 e1       	ldi	r18, 0x10	; 16
    137a:	30 e0       	ldi	r19, 0x00	; 0
    137c:	02 c0       	rjmp	.+4      	; 0x1382 <vfprintf+0x53e>
    137e:	20 e1       	ldi	r18, 0x10	; 16
    1380:	32 e0       	ldi	r19, 0x02	; 2
    1382:	52 01       	movw	r10, r4
    1384:	07 ff       	sbrs	r16, 7
    1386:	09 c0       	rjmp	.+18     	; 0x139a <vfprintf+0x556>
    1388:	f4 e0       	ldi	r31, 0x04	; 4
    138a:	af 0e       	add	r10, r31
    138c:	b1 1c       	adc	r11, r1
    138e:	f2 01       	movw	r30, r4
    1390:	60 81       	ld	r22, Z
    1392:	71 81       	ldd	r23, Z+1	; 0x01
    1394:	82 81       	ldd	r24, Z+2	; 0x02
    1396:	93 81       	ldd	r25, Z+3	; 0x03
    1398:	08 c0       	rjmp	.+16     	; 0x13aa <vfprintf+0x566>
    139a:	f2 e0       	ldi	r31, 0x02	; 2
    139c:	af 0e       	add	r10, r31
    139e:	b1 1c       	adc	r11, r1
    13a0:	f2 01       	movw	r30, r4
    13a2:	60 81       	ld	r22, Z
    13a4:	71 81       	ldd	r23, Z+1	; 0x01
    13a6:	80 e0       	ldi	r24, 0x00	; 0
    13a8:	90 e0       	ldi	r25, 0x00	; 0
    13aa:	a3 01       	movw	r20, r6
    13ac:	0e 94 51 0c 	call	0x18a2	; 0x18a2 <__ultoa_invert>
    13b0:	e8 2e       	mov	r14, r24
    13b2:	e6 18       	sub	r14, r6
    13b4:	0f 77       	andi	r16, 0x7F	; 127
    13b6:	30 2e       	mov	r3, r16
    13b8:	36 fe       	sbrs	r3, 6
    13ba:	0b c0       	rjmp	.+22     	; 0x13d2 <vfprintf+0x58e>
    13bc:	33 2d       	mov	r19, r3
    13be:	3e 7f       	andi	r19, 0xFE	; 254
    13c0:	e1 16       	cp	r14, r17
    13c2:	50 f4       	brcc	.+20     	; 0x13d8 <vfprintf+0x594>
    13c4:	34 fe       	sbrs	r3, 4
    13c6:	0a c0       	rjmp	.+20     	; 0x13dc <vfprintf+0x598>
    13c8:	32 fc       	sbrc	r3, 2
    13ca:	08 c0       	rjmp	.+16     	; 0x13dc <vfprintf+0x598>
    13cc:	33 2d       	mov	r19, r3
    13ce:	3e 7e       	andi	r19, 0xEE	; 238
    13d0:	05 c0       	rjmp	.+10     	; 0x13dc <vfprintf+0x598>
    13d2:	0e 2d       	mov	r16, r14
    13d4:	33 2d       	mov	r19, r3
    13d6:	03 c0       	rjmp	.+6      	; 0x13de <vfprintf+0x59a>
    13d8:	0e 2d       	mov	r16, r14
    13da:	01 c0       	rjmp	.+2      	; 0x13de <vfprintf+0x59a>
    13dc:	01 2f       	mov	r16, r17
    13de:	34 ff       	sbrs	r19, 4
    13e0:	0c c0       	rjmp	.+24     	; 0x13fa <vfprintf+0x5b6>
    13e2:	fe 01       	movw	r30, r28
    13e4:	ee 0d       	add	r30, r14
    13e6:	f1 1d       	adc	r31, r1
    13e8:	80 81       	ld	r24, Z
    13ea:	80 33       	cpi	r24, 0x30	; 48
    13ec:	11 f4       	brne	.+4      	; 0x13f2 <vfprintf+0x5ae>
    13ee:	39 7e       	andi	r19, 0xE9	; 233
    13f0:	08 c0       	rjmp	.+16     	; 0x1402 <vfprintf+0x5be>
    13f2:	32 ff       	sbrs	r19, 2
    13f4:	05 c0       	rjmp	.+10     	; 0x1400 <vfprintf+0x5bc>
    13f6:	0e 5f       	subi	r16, 0xFE	; 254
    13f8:	04 c0       	rjmp	.+8      	; 0x1402 <vfprintf+0x5be>
    13fa:	83 2f       	mov	r24, r19
    13fc:	86 78       	andi	r24, 0x86	; 134
    13fe:	09 f0       	breq	.+2      	; 0x1402 <vfprintf+0x5be>
    1400:	0f 5f       	subi	r16, 0xFF	; 255
    1402:	33 fd       	sbrc	r19, 3
    1404:	13 c0       	rjmp	.+38     	; 0x142c <vfprintf+0x5e8>
    1406:	30 ff       	sbrs	r19, 0
    1408:	06 c0       	rjmp	.+12     	; 0x1416 <vfprintf+0x5d2>
    140a:	1e 2d       	mov	r17, r14
    140c:	0f 15       	cp	r16, r15
    140e:	18 f4       	brcc	.+6      	; 0x1416 <vfprintf+0x5d2>
    1410:	1f 0d       	add	r17, r15
    1412:	10 1b       	sub	r17, r16
    1414:	0f 2d       	mov	r16, r15
    1416:	0f 15       	cp	r16, r15
    1418:	68 f4       	brcc	.+26     	; 0x1434 <vfprintf+0x5f0>
    141a:	b6 01       	movw	r22, r12
    141c:	80 e2       	ldi	r24, 0x20	; 32
    141e:	90 e0       	ldi	r25, 0x00	; 0
    1420:	3b 8b       	std	Y+19, r19	; 0x13
    1422:	0e 94 f6 0b 	call	0x17ec	; 0x17ec <fputc>
    1426:	0f 5f       	subi	r16, 0xFF	; 255
    1428:	3b 89       	ldd	r19, Y+19	; 0x13
    142a:	f5 cf       	rjmp	.-22     	; 0x1416 <vfprintf+0x5d2>
    142c:	0f 15       	cp	r16, r15
    142e:	10 f4       	brcc	.+4      	; 0x1434 <vfprintf+0x5f0>
    1430:	f0 1a       	sub	r15, r16
    1432:	01 c0       	rjmp	.+2      	; 0x1436 <vfprintf+0x5f2>
    1434:	f1 2c       	mov	r15, r1
    1436:	34 ff       	sbrs	r19, 4
    1438:	12 c0       	rjmp	.+36     	; 0x145e <vfprintf+0x61a>
    143a:	b6 01       	movw	r22, r12
    143c:	80 e3       	ldi	r24, 0x30	; 48
    143e:	90 e0       	ldi	r25, 0x00	; 0
    1440:	3b 8b       	std	Y+19, r19	; 0x13
    1442:	0e 94 f6 0b 	call	0x17ec	; 0x17ec <fputc>
    1446:	3b 89       	ldd	r19, Y+19	; 0x13
    1448:	32 ff       	sbrs	r19, 2
    144a:	17 c0       	rjmp	.+46     	; 0x147a <vfprintf+0x636>
    144c:	31 fd       	sbrc	r19, 1
    144e:	03 c0       	rjmp	.+6      	; 0x1456 <vfprintf+0x612>
    1450:	88 e7       	ldi	r24, 0x78	; 120
    1452:	90 e0       	ldi	r25, 0x00	; 0
    1454:	02 c0       	rjmp	.+4      	; 0x145a <vfprintf+0x616>
    1456:	88 e5       	ldi	r24, 0x58	; 88
    1458:	90 e0       	ldi	r25, 0x00	; 0
    145a:	b6 01       	movw	r22, r12
    145c:	0c c0       	rjmp	.+24     	; 0x1476 <vfprintf+0x632>
    145e:	83 2f       	mov	r24, r19
    1460:	86 78       	andi	r24, 0x86	; 134
    1462:	59 f0       	breq	.+22     	; 0x147a <vfprintf+0x636>
    1464:	31 ff       	sbrs	r19, 1
    1466:	02 c0       	rjmp	.+4      	; 0x146c <vfprintf+0x628>
    1468:	8b e2       	ldi	r24, 0x2B	; 43
    146a:	01 c0       	rjmp	.+2      	; 0x146e <vfprintf+0x62a>
    146c:	80 e2       	ldi	r24, 0x20	; 32
    146e:	37 fd       	sbrc	r19, 7
    1470:	8d e2       	ldi	r24, 0x2D	; 45
    1472:	b6 01       	movw	r22, r12
    1474:	90 e0       	ldi	r25, 0x00	; 0
    1476:	0e 94 f6 0b 	call	0x17ec	; 0x17ec <fputc>
    147a:	e1 16       	cp	r14, r17
    147c:	38 f4       	brcc	.+14     	; 0x148c <vfprintf+0x648>
    147e:	b6 01       	movw	r22, r12
    1480:	80 e3       	ldi	r24, 0x30	; 48
    1482:	90 e0       	ldi	r25, 0x00	; 0
    1484:	0e 94 f6 0b 	call	0x17ec	; 0x17ec <fputc>
    1488:	11 50       	subi	r17, 0x01	; 1
    148a:	f7 cf       	rjmp	.-18     	; 0x147a <vfprintf+0x636>
    148c:	ea 94       	dec	r14
    148e:	f3 01       	movw	r30, r6
    1490:	ee 0d       	add	r30, r14
    1492:	f1 1d       	adc	r31, r1
    1494:	80 81       	ld	r24, Z
    1496:	b6 01       	movw	r22, r12
    1498:	90 e0       	ldi	r25, 0x00	; 0
    149a:	0e 94 f6 0b 	call	0x17ec	; 0x17ec <fputc>
    149e:	e1 10       	cpse	r14, r1
    14a0:	f5 cf       	rjmp	.-22     	; 0x148c <vfprintf+0x648>
    14a2:	14 c0       	rjmp	.+40     	; 0x14cc <vfprintf+0x688>
    14a4:	f4 e0       	ldi	r31, 0x04	; 4
    14a6:	ff 15       	cp	r31, r15
    14a8:	58 f5       	brcc	.+86     	; 0x1500 <vfprintf+0x6bc>
    14aa:	84 e0       	ldi	r24, 0x04	; 4
    14ac:	f8 1a       	sub	r15, r24
    14ae:	33 fe       	sbrs	r3, 3
    14b0:	1e c0       	rjmp	.+60     	; 0x14ee <vfprintf+0x6aa>
    14b2:	21 10       	cpse	r2, r1
    14b4:	26 c0       	rjmp	.+76     	; 0x1502 <vfprintf+0x6be>
    14b6:	03 ff       	sbrs	r16, 3
    14b8:	2a c0       	rjmp	.+84     	; 0x150e <vfprintf+0x6ca>
    14ba:	08 e6       	ldi	r16, 0x68	; 104
    14bc:	10 e0       	ldi	r17, 0x00	; 0
    14be:	f3 2d       	mov	r31, r3
    14c0:	f0 71       	andi	r31, 0x10	; 16
    14c2:	3f 2e       	mov	r3, r31
    14c4:	f8 01       	movw	r30, r16
    14c6:	84 91       	lpm	r24, Z
    14c8:	81 11       	cpse	r24, r1
    14ca:	24 c0       	rjmp	.+72     	; 0x1514 <vfprintf+0x6d0>
    14cc:	ff 20       	and	r15, r15
    14ce:	09 f4       	brne	.+2      	; 0x14d2 <vfprintf+0x68e>
    14d0:	e5 cc       	rjmp	.-1590   	; 0xe9c <vfprintf+0x58>
    14d2:	b6 01       	movw	r22, r12
    14d4:	80 e2       	ldi	r24, 0x20	; 32
    14d6:	90 e0       	ldi	r25, 0x00	; 0
    14d8:	0e 94 f6 0b 	call	0x17ec	; 0x17ec <fputc>
    14dc:	fa 94       	dec	r15
    14de:	f6 cf       	rjmp	.-20     	; 0x14cc <vfprintf+0x688>
    14e0:	f6 01       	movw	r30, r12
    14e2:	86 81       	ldd	r24, Z+6	; 0x06
    14e4:	97 81       	ldd	r25, Z+7	; 0x07
    14e6:	26 c0       	rjmp	.+76     	; 0x1534 <vfprintf+0x6f0>
    14e8:	8f ef       	ldi	r24, 0xFF	; 255
    14ea:	9f ef       	ldi	r25, 0xFF	; 255
    14ec:	23 c0       	rjmp	.+70     	; 0x1534 <vfprintf+0x6f0>
    14ee:	b6 01       	movw	r22, r12
    14f0:	80 e2       	ldi	r24, 0x20	; 32
    14f2:	90 e0       	ldi	r25, 0x00	; 0
    14f4:	0e 94 f6 0b 	call	0x17ec	; 0x17ec <fputc>
    14f8:	fa 94       	dec	r15
    14fa:	f1 10       	cpse	r15, r1
    14fc:	f8 cf       	rjmp	.-16     	; 0x14ee <vfprintf+0x6aa>
    14fe:	d9 cf       	rjmp	.-78     	; 0x14b2 <vfprintf+0x66e>
    1500:	f1 2c       	mov	r15, r1
    1502:	b6 01       	movw	r22, r12
    1504:	82 2d       	mov	r24, r2
    1506:	90 e0       	ldi	r25, 0x00	; 0
    1508:	0e 94 f6 0b 	call	0x17ec	; 0x17ec <fputc>
    150c:	d4 cf       	rjmp	.-88     	; 0x14b6 <vfprintf+0x672>
    150e:	0c e6       	ldi	r16, 0x6C	; 108
    1510:	10 e0       	ldi	r17, 0x00	; 0
    1512:	d5 cf       	rjmp	.-86     	; 0x14be <vfprintf+0x67a>
    1514:	31 10       	cpse	r3, r1
    1516:	80 52       	subi	r24, 0x20	; 32
    1518:	b6 01       	movw	r22, r12
    151a:	90 e0       	ldi	r25, 0x00	; 0
    151c:	0e 94 f6 0b 	call	0x17ec	; 0x17ec <fputc>
    1520:	0f 5f       	subi	r16, 0xFF	; 255
    1522:	1f 4f       	sbci	r17, 0xFF	; 255
    1524:	cf cf       	rjmp	.-98     	; 0x14c4 <vfprintf+0x680>
    1526:	23 e0       	ldi	r18, 0x03	; 3
    1528:	2f 15       	cp	r18, r15
    152a:	10 f4       	brcc	.+4      	; 0x1530 <vfprintf+0x6ec>
    152c:	83 e0       	ldi	r24, 0x03	; 3
    152e:	be cf       	rjmp	.-132    	; 0x14ac <vfprintf+0x668>
    1530:	f1 2c       	mov	r15, r1
    1532:	c1 cf       	rjmp	.-126    	; 0x14b6 <vfprintf+0x672>
    1534:	63 96       	adiw	r28, 0x13	; 19
    1536:	e2 e1       	ldi	r30, 0x12	; 18
    1538:	0c 94 dc 0a 	jmp	0x15b8	; 0x15b8 <__epilogue_restores__>

0000153c <__udivmodsi4>:
    153c:	a1 e2       	ldi	r26, 0x21	; 33
    153e:	1a 2e       	mov	r1, r26
    1540:	aa 1b       	sub	r26, r26
    1542:	bb 1b       	sub	r27, r27
    1544:	fd 01       	movw	r30, r26
    1546:	0d c0       	rjmp	.+26     	; 0x1562 <__udivmodsi4_ep>

00001548 <__udivmodsi4_loop>:
    1548:	aa 1f       	adc	r26, r26
    154a:	bb 1f       	adc	r27, r27
    154c:	ee 1f       	adc	r30, r30
    154e:	ff 1f       	adc	r31, r31
    1550:	a2 17       	cp	r26, r18
    1552:	b3 07       	cpc	r27, r19
    1554:	e4 07       	cpc	r30, r20
    1556:	f5 07       	cpc	r31, r21
    1558:	20 f0       	brcs	.+8      	; 0x1562 <__udivmodsi4_ep>
    155a:	a2 1b       	sub	r26, r18
    155c:	b3 0b       	sbc	r27, r19
    155e:	e4 0b       	sbc	r30, r20
    1560:	f5 0b       	sbc	r31, r21

00001562 <__udivmodsi4_ep>:
    1562:	66 1f       	adc	r22, r22
    1564:	77 1f       	adc	r23, r23
    1566:	88 1f       	adc	r24, r24
    1568:	99 1f       	adc	r25, r25
    156a:	1a 94       	dec	r1
    156c:	69 f7       	brne	.-38     	; 0x1548 <__udivmodsi4_loop>
    156e:	60 95       	com	r22
    1570:	70 95       	com	r23
    1572:	80 95       	com	r24
    1574:	90 95       	com	r25
    1576:	9b 01       	movw	r18, r22
    1578:	ac 01       	movw	r20, r24
    157a:	bd 01       	movw	r22, r26
    157c:	cf 01       	movw	r24, r30
    157e:	08 95       	ret

00001580 <__prologue_saves__>:
    1580:	2f 92       	push	r2
    1582:	3f 92       	push	r3
    1584:	4f 92       	push	r4
    1586:	5f 92       	push	r5
    1588:	6f 92       	push	r6
    158a:	7f 92       	push	r7
    158c:	8f 92       	push	r8
    158e:	9f 92       	push	r9
    1590:	af 92       	push	r10
    1592:	bf 92       	push	r11
    1594:	cf 92       	push	r12
    1596:	df 92       	push	r13
    1598:	ef 92       	push	r14
    159a:	ff 92       	push	r15
    159c:	0f 93       	push	r16
    159e:	1f 93       	push	r17
    15a0:	cf 93       	push	r28
    15a2:	df 93       	push	r29
    15a4:	cd b7       	in	r28, 0x3d	; 61
    15a6:	de b7       	in	r29, 0x3e	; 62
    15a8:	ca 1b       	sub	r28, r26
    15aa:	db 0b       	sbc	r29, r27
    15ac:	0f b6       	in	r0, 0x3f	; 63
    15ae:	f8 94       	cli
    15b0:	de bf       	out	0x3e, r29	; 62
    15b2:	0f be       	out	0x3f, r0	; 63
    15b4:	cd bf       	out	0x3d, r28	; 61
    15b6:	09 94       	ijmp

000015b8 <__epilogue_restores__>:
    15b8:	2a 88       	ldd	r2, Y+18	; 0x12
    15ba:	39 88       	ldd	r3, Y+17	; 0x11
    15bc:	48 88       	ldd	r4, Y+16	; 0x10
    15be:	5f 84       	ldd	r5, Y+15	; 0x0f
    15c0:	6e 84       	ldd	r6, Y+14	; 0x0e
    15c2:	7d 84       	ldd	r7, Y+13	; 0x0d
    15c4:	8c 84       	ldd	r8, Y+12	; 0x0c
    15c6:	9b 84       	ldd	r9, Y+11	; 0x0b
    15c8:	aa 84       	ldd	r10, Y+10	; 0x0a
    15ca:	b9 84       	ldd	r11, Y+9	; 0x09
    15cc:	c8 84       	ldd	r12, Y+8	; 0x08
    15ce:	df 80       	ldd	r13, Y+7	; 0x07
    15d0:	ee 80       	ldd	r14, Y+6	; 0x06
    15d2:	fd 80       	ldd	r15, Y+5	; 0x05
    15d4:	0c 81       	ldd	r16, Y+4	; 0x04
    15d6:	1b 81       	ldd	r17, Y+3	; 0x03
    15d8:	aa 81       	ldd	r26, Y+2	; 0x02
    15da:	b9 81       	ldd	r27, Y+1	; 0x01
    15dc:	ce 0f       	add	r28, r30
    15de:	d1 1d       	adc	r29, r1
    15e0:	0f b6       	in	r0, 0x3f	; 63
    15e2:	f8 94       	cli
    15e4:	de bf       	out	0x3e, r29	; 62
    15e6:	0f be       	out	0x3f, r0	; 63
    15e8:	cd bf       	out	0x3d, r28	; 61
    15ea:	ed 01       	movw	r28, r26
    15ec:	08 95       	ret

000015ee <__tablejump2__>:
    15ee:	ee 0f       	add	r30, r30
    15f0:	ff 1f       	adc	r31, r31
    15f2:	05 90       	lpm	r0, Z+
    15f4:	f4 91       	lpm	r31, Z
    15f6:	e0 2d       	mov	r30, r0
    15f8:	09 94       	ijmp

000015fa <__ftoa_engine>:
    15fa:	28 30       	cpi	r18, 0x08	; 8
    15fc:	08 f0       	brcs	.+2      	; 0x1600 <__ftoa_engine+0x6>
    15fe:	27 e0       	ldi	r18, 0x07	; 7
    1600:	33 27       	eor	r19, r19
    1602:	da 01       	movw	r26, r20
    1604:	99 0f       	add	r25, r25
    1606:	31 1d       	adc	r19, r1
    1608:	87 fd       	sbrc	r24, 7
    160a:	91 60       	ori	r25, 0x01	; 1
    160c:	00 96       	adiw	r24, 0x00	; 0
    160e:	61 05       	cpc	r22, r1
    1610:	71 05       	cpc	r23, r1
    1612:	39 f4       	brne	.+14     	; 0x1622 <__ftoa_engine+0x28>
    1614:	32 60       	ori	r19, 0x02	; 2
    1616:	2e 5f       	subi	r18, 0xFE	; 254
    1618:	3d 93       	st	X+, r19
    161a:	30 e3       	ldi	r19, 0x30	; 48
    161c:	2a 95       	dec	r18
    161e:	e1 f7       	brne	.-8      	; 0x1618 <__ftoa_engine+0x1e>
    1620:	08 95       	ret
    1622:	9f 3f       	cpi	r25, 0xFF	; 255
    1624:	30 f0       	brcs	.+12     	; 0x1632 <__ftoa_engine+0x38>
    1626:	80 38       	cpi	r24, 0x80	; 128
    1628:	71 05       	cpc	r23, r1
    162a:	61 05       	cpc	r22, r1
    162c:	09 f0       	breq	.+2      	; 0x1630 <__ftoa_engine+0x36>
    162e:	3c 5f       	subi	r19, 0xFC	; 252
    1630:	3c 5f       	subi	r19, 0xFC	; 252
    1632:	3d 93       	st	X+, r19
    1634:	91 30       	cpi	r25, 0x01	; 1
    1636:	08 f0       	brcs	.+2      	; 0x163a <__ftoa_engine+0x40>
    1638:	80 68       	ori	r24, 0x80	; 128
    163a:	91 1d       	adc	r25, r1
    163c:	df 93       	push	r29
    163e:	cf 93       	push	r28
    1640:	1f 93       	push	r17
    1642:	0f 93       	push	r16
    1644:	ff 92       	push	r15
    1646:	ef 92       	push	r14
    1648:	19 2f       	mov	r17, r25
    164a:	98 7f       	andi	r25, 0xF8	; 248
    164c:	96 95       	lsr	r25
    164e:	e9 2f       	mov	r30, r25
    1650:	96 95       	lsr	r25
    1652:	96 95       	lsr	r25
    1654:	e9 0f       	add	r30, r25
    1656:	ff 27       	eor	r31, r31
    1658:	e6 53       	subi	r30, 0x36	; 54
    165a:	ff 4f       	sbci	r31, 0xFF	; 255
    165c:	99 27       	eor	r25, r25
    165e:	33 27       	eor	r19, r19
    1660:	ee 24       	eor	r14, r14
    1662:	ff 24       	eor	r15, r15
    1664:	a7 01       	movw	r20, r14
    1666:	e7 01       	movw	r28, r14
    1668:	05 90       	lpm	r0, Z+
    166a:	08 94       	sec
    166c:	07 94       	ror	r0
    166e:	28 f4       	brcc	.+10     	; 0x167a <__ftoa_engine+0x80>
    1670:	36 0f       	add	r19, r22
    1672:	e7 1e       	adc	r14, r23
    1674:	f8 1e       	adc	r15, r24
    1676:	49 1f       	adc	r20, r25
    1678:	51 1d       	adc	r21, r1
    167a:	66 0f       	add	r22, r22
    167c:	77 1f       	adc	r23, r23
    167e:	88 1f       	adc	r24, r24
    1680:	99 1f       	adc	r25, r25
    1682:	06 94       	lsr	r0
    1684:	a1 f7       	brne	.-24     	; 0x166e <__ftoa_engine+0x74>
    1686:	05 90       	lpm	r0, Z+
    1688:	07 94       	ror	r0
    168a:	28 f4       	brcc	.+10     	; 0x1696 <__ftoa_engine+0x9c>
    168c:	e7 0e       	add	r14, r23
    168e:	f8 1e       	adc	r15, r24
    1690:	49 1f       	adc	r20, r25
    1692:	56 1f       	adc	r21, r22
    1694:	c1 1d       	adc	r28, r1
    1696:	77 0f       	add	r23, r23
    1698:	88 1f       	adc	r24, r24
    169a:	99 1f       	adc	r25, r25
    169c:	66 1f       	adc	r22, r22
    169e:	06 94       	lsr	r0
    16a0:	a1 f7       	brne	.-24     	; 0x168a <__ftoa_engine+0x90>
    16a2:	05 90       	lpm	r0, Z+
    16a4:	07 94       	ror	r0
    16a6:	28 f4       	brcc	.+10     	; 0x16b2 <__ftoa_engine+0xb8>
    16a8:	f8 0e       	add	r15, r24
    16aa:	49 1f       	adc	r20, r25
    16ac:	56 1f       	adc	r21, r22
    16ae:	c7 1f       	adc	r28, r23
    16b0:	d1 1d       	adc	r29, r1
    16b2:	88 0f       	add	r24, r24
    16b4:	99 1f       	adc	r25, r25
    16b6:	66 1f       	adc	r22, r22
    16b8:	77 1f       	adc	r23, r23
    16ba:	06 94       	lsr	r0
    16bc:	a1 f7       	brne	.-24     	; 0x16a6 <__ftoa_engine+0xac>
    16be:	05 90       	lpm	r0, Z+
    16c0:	07 94       	ror	r0
    16c2:	20 f4       	brcc	.+8      	; 0x16cc <__ftoa_engine+0xd2>
    16c4:	49 0f       	add	r20, r25
    16c6:	56 1f       	adc	r21, r22
    16c8:	c7 1f       	adc	r28, r23
    16ca:	d8 1f       	adc	r29, r24
    16cc:	99 0f       	add	r25, r25
    16ce:	66 1f       	adc	r22, r22
    16d0:	77 1f       	adc	r23, r23
    16d2:	88 1f       	adc	r24, r24
    16d4:	06 94       	lsr	r0
    16d6:	a9 f7       	brne	.-22     	; 0x16c2 <__ftoa_engine+0xc8>
    16d8:	84 91       	lpm	r24, Z
    16da:	10 95       	com	r17
    16dc:	17 70       	andi	r17, 0x07	; 7
    16de:	41 f0       	breq	.+16     	; 0x16f0 <__ftoa_engine+0xf6>
    16e0:	d6 95       	lsr	r29
    16e2:	c7 95       	ror	r28
    16e4:	57 95       	ror	r21
    16e6:	47 95       	ror	r20
    16e8:	f7 94       	ror	r15
    16ea:	e7 94       	ror	r14
    16ec:	1a 95       	dec	r17
    16ee:	c1 f7       	brne	.-16     	; 0x16e0 <__ftoa_engine+0xe6>
    16f0:	e0 e7       	ldi	r30, 0x70	; 112
    16f2:	f0 e0       	ldi	r31, 0x00	; 0
    16f4:	68 94       	set
    16f6:	15 90       	lpm	r1, Z+
    16f8:	15 91       	lpm	r17, Z+
    16fa:	35 91       	lpm	r19, Z+
    16fc:	65 91       	lpm	r22, Z+
    16fe:	95 91       	lpm	r25, Z+
    1700:	05 90       	lpm	r0, Z+
    1702:	7f e2       	ldi	r23, 0x2F	; 47
    1704:	73 95       	inc	r23
    1706:	e1 18       	sub	r14, r1
    1708:	f1 0a       	sbc	r15, r17
    170a:	43 0b       	sbc	r20, r19
    170c:	56 0b       	sbc	r21, r22
    170e:	c9 0b       	sbc	r28, r25
    1710:	d0 09       	sbc	r29, r0
    1712:	c0 f7       	brcc	.-16     	; 0x1704 <__ftoa_engine+0x10a>
    1714:	e1 0c       	add	r14, r1
    1716:	f1 1e       	adc	r15, r17
    1718:	43 1f       	adc	r20, r19
    171a:	56 1f       	adc	r21, r22
    171c:	c9 1f       	adc	r28, r25
    171e:	d0 1d       	adc	r29, r0
    1720:	7e f4       	brtc	.+30     	; 0x1740 <__ftoa_engine+0x146>
    1722:	70 33       	cpi	r23, 0x30	; 48
    1724:	11 f4       	brne	.+4      	; 0x172a <__ftoa_engine+0x130>
    1726:	8a 95       	dec	r24
    1728:	e6 cf       	rjmp	.-52     	; 0x16f6 <__ftoa_engine+0xfc>
    172a:	e8 94       	clt
    172c:	01 50       	subi	r16, 0x01	; 1
    172e:	30 f0       	brcs	.+12     	; 0x173c <__ftoa_engine+0x142>
    1730:	08 0f       	add	r16, r24
    1732:	0a f4       	brpl	.+2      	; 0x1736 <__ftoa_engine+0x13c>
    1734:	00 27       	eor	r16, r16
    1736:	02 17       	cp	r16, r18
    1738:	08 f4       	brcc	.+2      	; 0x173c <__ftoa_engine+0x142>
    173a:	20 2f       	mov	r18, r16
    173c:	23 95       	inc	r18
    173e:	02 2f       	mov	r16, r18
    1740:	7a 33       	cpi	r23, 0x3A	; 58
    1742:	28 f0       	brcs	.+10     	; 0x174e <__ftoa_engine+0x154>
    1744:	79 e3       	ldi	r23, 0x39	; 57
    1746:	7d 93       	st	X+, r23
    1748:	2a 95       	dec	r18
    174a:	e9 f7       	brne	.-6      	; 0x1746 <__ftoa_engine+0x14c>
    174c:	10 c0       	rjmp	.+32     	; 0x176e <__ftoa_engine+0x174>
    174e:	7d 93       	st	X+, r23
    1750:	2a 95       	dec	r18
    1752:	89 f6       	brne	.-94     	; 0x16f6 <__ftoa_engine+0xfc>
    1754:	06 94       	lsr	r0
    1756:	97 95       	ror	r25
    1758:	67 95       	ror	r22
    175a:	37 95       	ror	r19
    175c:	17 95       	ror	r17
    175e:	17 94       	ror	r1
    1760:	e1 18       	sub	r14, r1
    1762:	f1 0a       	sbc	r15, r17
    1764:	43 0b       	sbc	r20, r19
    1766:	56 0b       	sbc	r21, r22
    1768:	c9 0b       	sbc	r28, r25
    176a:	d0 09       	sbc	r29, r0
    176c:	98 f0       	brcs	.+38     	; 0x1794 <__ftoa_engine+0x19a>
    176e:	23 95       	inc	r18
    1770:	7e 91       	ld	r23, -X
    1772:	73 95       	inc	r23
    1774:	7a 33       	cpi	r23, 0x3A	; 58
    1776:	08 f0       	brcs	.+2      	; 0x177a <__ftoa_engine+0x180>
    1778:	70 e3       	ldi	r23, 0x30	; 48
    177a:	7c 93       	st	X, r23
    177c:	20 13       	cpse	r18, r16
    177e:	b8 f7       	brcc	.-18     	; 0x176e <__ftoa_engine+0x174>
    1780:	7e 91       	ld	r23, -X
    1782:	70 61       	ori	r23, 0x10	; 16
    1784:	7d 93       	st	X+, r23
    1786:	30 f0       	brcs	.+12     	; 0x1794 <__ftoa_engine+0x19a>
    1788:	83 95       	inc	r24
    178a:	71 e3       	ldi	r23, 0x31	; 49
    178c:	7d 93       	st	X+, r23
    178e:	70 e3       	ldi	r23, 0x30	; 48
    1790:	2a 95       	dec	r18
    1792:	e1 f7       	brne	.-8      	; 0x178c <__ftoa_engine+0x192>
    1794:	11 24       	eor	r1, r1
    1796:	ef 90       	pop	r14
    1798:	ff 90       	pop	r15
    179a:	0f 91       	pop	r16
    179c:	1f 91       	pop	r17
    179e:	cf 91       	pop	r28
    17a0:	df 91       	pop	r29
    17a2:	99 27       	eor	r25, r25
    17a4:	87 fd       	sbrc	r24, 7
    17a6:	90 95       	com	r25
    17a8:	08 95       	ret

000017aa <strnlen_P>:
    17aa:	fc 01       	movw	r30, r24
    17ac:	05 90       	lpm	r0, Z+
    17ae:	61 50       	subi	r22, 0x01	; 1
    17b0:	70 40       	sbci	r23, 0x00	; 0
    17b2:	01 10       	cpse	r0, r1
    17b4:	d8 f7       	brcc	.-10     	; 0x17ac <strnlen_P+0x2>
    17b6:	80 95       	com	r24
    17b8:	90 95       	com	r25
    17ba:	8e 0f       	add	r24, r30
    17bc:	9f 1f       	adc	r25, r31
    17be:	08 95       	ret

000017c0 <strcat>:
    17c0:	fb 01       	movw	r30, r22
    17c2:	dc 01       	movw	r26, r24
    17c4:	0d 90       	ld	r0, X+
    17c6:	00 20       	and	r0, r0
    17c8:	e9 f7       	brne	.-6      	; 0x17c4 <strcat+0x4>
    17ca:	11 97       	sbiw	r26, 0x01	; 1
    17cc:	01 90       	ld	r0, Z+
    17ce:	0d 92       	st	X+, r0
    17d0:	00 20       	and	r0, r0
    17d2:	e1 f7       	brne	.-8      	; 0x17cc <strcat+0xc>
    17d4:	08 95       	ret

000017d6 <strnlen>:
    17d6:	fc 01       	movw	r30, r24
    17d8:	61 50       	subi	r22, 0x01	; 1
    17da:	70 40       	sbci	r23, 0x00	; 0
    17dc:	01 90       	ld	r0, Z+
    17de:	01 10       	cpse	r0, r1
    17e0:	d8 f7       	brcc	.-10     	; 0x17d8 <strnlen+0x2>
    17e2:	80 95       	com	r24
    17e4:	90 95       	com	r25
    17e6:	8e 0f       	add	r24, r30
    17e8:	9f 1f       	adc	r25, r31
    17ea:	08 95       	ret

000017ec <fputc>:
    17ec:	0f 93       	push	r16
    17ee:	1f 93       	push	r17
    17f0:	cf 93       	push	r28
    17f2:	df 93       	push	r29
    17f4:	fb 01       	movw	r30, r22
    17f6:	23 81       	ldd	r18, Z+3	; 0x03
    17f8:	21 fd       	sbrc	r18, 1
    17fa:	03 c0       	rjmp	.+6      	; 0x1802 <fputc+0x16>
    17fc:	8f ef       	ldi	r24, 0xFF	; 255
    17fe:	9f ef       	ldi	r25, 0xFF	; 255
    1800:	28 c0       	rjmp	.+80     	; 0x1852 <fputc+0x66>
    1802:	22 ff       	sbrs	r18, 2
    1804:	16 c0       	rjmp	.+44     	; 0x1832 <fputc+0x46>
    1806:	46 81       	ldd	r20, Z+6	; 0x06
    1808:	57 81       	ldd	r21, Z+7	; 0x07
    180a:	24 81       	ldd	r18, Z+4	; 0x04
    180c:	35 81       	ldd	r19, Z+5	; 0x05
    180e:	42 17       	cp	r20, r18
    1810:	53 07       	cpc	r21, r19
    1812:	44 f4       	brge	.+16     	; 0x1824 <fputc+0x38>
    1814:	a0 81       	ld	r26, Z
    1816:	b1 81       	ldd	r27, Z+1	; 0x01
    1818:	9d 01       	movw	r18, r26
    181a:	2f 5f       	subi	r18, 0xFF	; 255
    181c:	3f 4f       	sbci	r19, 0xFF	; 255
    181e:	31 83       	std	Z+1, r19	; 0x01
    1820:	20 83       	st	Z, r18
    1822:	8c 93       	st	X, r24
    1824:	26 81       	ldd	r18, Z+6	; 0x06
    1826:	37 81       	ldd	r19, Z+7	; 0x07
    1828:	2f 5f       	subi	r18, 0xFF	; 255
    182a:	3f 4f       	sbci	r19, 0xFF	; 255
    182c:	37 83       	std	Z+7, r19	; 0x07
    182e:	26 83       	std	Z+6, r18	; 0x06
    1830:	10 c0       	rjmp	.+32     	; 0x1852 <fputc+0x66>
    1832:	eb 01       	movw	r28, r22
    1834:	09 2f       	mov	r16, r25
    1836:	18 2f       	mov	r17, r24
    1838:	00 84       	ldd	r0, Z+8	; 0x08
    183a:	f1 85       	ldd	r31, Z+9	; 0x09
    183c:	e0 2d       	mov	r30, r0
    183e:	09 95       	icall
    1840:	89 2b       	or	r24, r25
    1842:	e1 f6       	brne	.-72     	; 0x17fc <fputc+0x10>
    1844:	8e 81       	ldd	r24, Y+6	; 0x06
    1846:	9f 81       	ldd	r25, Y+7	; 0x07
    1848:	01 96       	adiw	r24, 0x01	; 1
    184a:	9f 83       	std	Y+7, r25	; 0x07
    184c:	8e 83       	std	Y+6, r24	; 0x06
    184e:	81 2f       	mov	r24, r17
    1850:	90 2f       	mov	r25, r16
    1852:	df 91       	pop	r29
    1854:	cf 91       	pop	r28
    1856:	1f 91       	pop	r17
    1858:	0f 91       	pop	r16
    185a:	08 95       	ret

0000185c <sprintf>:
    185c:	ae e0       	ldi	r26, 0x0E	; 14
    185e:	b0 e0       	ldi	r27, 0x00	; 0
    1860:	e4 e3       	ldi	r30, 0x34	; 52
    1862:	fc e0       	ldi	r31, 0x0C	; 12
    1864:	0c 94 ce 0a 	jmp	0x159c	; 0x159c <__prologue_saves__+0x1c>
    1868:	0d 89       	ldd	r16, Y+21	; 0x15
    186a:	1e 89       	ldd	r17, Y+22	; 0x16
    186c:	86 e0       	ldi	r24, 0x06	; 6
    186e:	8c 83       	std	Y+4, r24	; 0x04
    1870:	1a 83       	std	Y+2, r17	; 0x02
    1872:	09 83       	std	Y+1, r16	; 0x01
    1874:	8f ef       	ldi	r24, 0xFF	; 255
    1876:	9f e7       	ldi	r25, 0x7F	; 127
    1878:	9e 83       	std	Y+6, r25	; 0x06
    187a:	8d 83       	std	Y+5, r24	; 0x05
    187c:	ae 01       	movw	r20, r28
    187e:	47 5e       	subi	r20, 0xE7	; 231
    1880:	5f 4f       	sbci	r21, 0xFF	; 255
    1882:	6f 89       	ldd	r22, Y+23	; 0x17
    1884:	78 8d       	ldd	r23, Y+24	; 0x18
    1886:	ce 01       	movw	r24, r28
    1888:	01 96       	adiw	r24, 0x01	; 1
    188a:	0e 94 22 07 	call	0xe44	; 0xe44 <vfprintf>
    188e:	2f 81       	ldd	r18, Y+7	; 0x07
    1890:	38 85       	ldd	r19, Y+8	; 0x08
    1892:	f8 01       	movw	r30, r16
    1894:	e2 0f       	add	r30, r18
    1896:	f3 1f       	adc	r31, r19
    1898:	10 82       	st	Z, r1
    189a:	2e 96       	adiw	r28, 0x0e	; 14
    189c:	e4 e0       	ldi	r30, 0x04	; 4
    189e:	0c 94 ea 0a 	jmp	0x15d4	; 0x15d4 <__epilogue_restores__+0x1c>

000018a2 <__ultoa_invert>:
    18a2:	fa 01       	movw	r30, r20
    18a4:	aa 27       	eor	r26, r26
    18a6:	28 30       	cpi	r18, 0x08	; 8
    18a8:	51 f1       	breq	.+84     	; 0x18fe <__ultoa_invert+0x5c>
    18aa:	20 31       	cpi	r18, 0x10	; 16
    18ac:	81 f1       	breq	.+96     	; 0x190e <__ultoa_invert+0x6c>
    18ae:	e8 94       	clt
    18b0:	6f 93       	push	r22
    18b2:	6e 7f       	andi	r22, 0xFE	; 254
    18b4:	6e 5f       	subi	r22, 0xFE	; 254
    18b6:	7f 4f       	sbci	r23, 0xFF	; 255
    18b8:	8f 4f       	sbci	r24, 0xFF	; 255
    18ba:	9f 4f       	sbci	r25, 0xFF	; 255
    18bc:	af 4f       	sbci	r26, 0xFF	; 255
    18be:	b1 e0       	ldi	r27, 0x01	; 1
    18c0:	3e d0       	rcall	.+124    	; 0x193e <__ultoa_invert+0x9c>
    18c2:	b4 e0       	ldi	r27, 0x04	; 4
    18c4:	3c d0       	rcall	.+120    	; 0x193e <__ultoa_invert+0x9c>
    18c6:	67 0f       	add	r22, r23
    18c8:	78 1f       	adc	r23, r24
    18ca:	89 1f       	adc	r24, r25
    18cc:	9a 1f       	adc	r25, r26
    18ce:	a1 1d       	adc	r26, r1
    18d0:	68 0f       	add	r22, r24
    18d2:	79 1f       	adc	r23, r25
    18d4:	8a 1f       	adc	r24, r26
    18d6:	91 1d       	adc	r25, r1
    18d8:	a1 1d       	adc	r26, r1
    18da:	6a 0f       	add	r22, r26
    18dc:	71 1d       	adc	r23, r1
    18de:	81 1d       	adc	r24, r1
    18e0:	91 1d       	adc	r25, r1
    18e2:	a1 1d       	adc	r26, r1
    18e4:	20 d0       	rcall	.+64     	; 0x1926 <__ultoa_invert+0x84>
    18e6:	09 f4       	brne	.+2      	; 0x18ea <__ultoa_invert+0x48>
    18e8:	68 94       	set
    18ea:	3f 91       	pop	r19
    18ec:	2a e0       	ldi	r18, 0x0A	; 10
    18ee:	26 9f       	mul	r18, r22
    18f0:	11 24       	eor	r1, r1
    18f2:	30 19       	sub	r19, r0
    18f4:	30 5d       	subi	r19, 0xD0	; 208
    18f6:	31 93       	st	Z+, r19
    18f8:	de f6       	brtc	.-74     	; 0x18b0 <__ultoa_invert+0xe>
    18fa:	cf 01       	movw	r24, r30
    18fc:	08 95       	ret
    18fe:	46 2f       	mov	r20, r22
    1900:	47 70       	andi	r20, 0x07	; 7
    1902:	40 5d       	subi	r20, 0xD0	; 208
    1904:	41 93       	st	Z+, r20
    1906:	b3 e0       	ldi	r27, 0x03	; 3
    1908:	0f d0       	rcall	.+30     	; 0x1928 <__ultoa_invert+0x86>
    190a:	c9 f7       	brne	.-14     	; 0x18fe <__ultoa_invert+0x5c>
    190c:	f6 cf       	rjmp	.-20     	; 0x18fa <__ultoa_invert+0x58>
    190e:	46 2f       	mov	r20, r22
    1910:	4f 70       	andi	r20, 0x0F	; 15
    1912:	40 5d       	subi	r20, 0xD0	; 208
    1914:	4a 33       	cpi	r20, 0x3A	; 58
    1916:	18 f0       	brcs	.+6      	; 0x191e <__ultoa_invert+0x7c>
    1918:	49 5d       	subi	r20, 0xD9	; 217
    191a:	31 fd       	sbrc	r19, 1
    191c:	40 52       	subi	r20, 0x20	; 32
    191e:	41 93       	st	Z+, r20
    1920:	02 d0       	rcall	.+4      	; 0x1926 <__ultoa_invert+0x84>
    1922:	a9 f7       	brne	.-22     	; 0x190e <__ultoa_invert+0x6c>
    1924:	ea cf       	rjmp	.-44     	; 0x18fa <__ultoa_invert+0x58>
    1926:	b4 e0       	ldi	r27, 0x04	; 4
    1928:	a6 95       	lsr	r26
    192a:	97 95       	ror	r25
    192c:	87 95       	ror	r24
    192e:	77 95       	ror	r23
    1930:	67 95       	ror	r22
    1932:	ba 95       	dec	r27
    1934:	c9 f7       	brne	.-14     	; 0x1928 <__ultoa_invert+0x86>
    1936:	00 97       	sbiw	r24, 0x00	; 0
    1938:	61 05       	cpc	r22, r1
    193a:	71 05       	cpc	r23, r1
    193c:	08 95       	ret
    193e:	9b 01       	movw	r18, r22
    1940:	ac 01       	movw	r20, r24
    1942:	0a 2e       	mov	r0, r26
    1944:	06 94       	lsr	r0
    1946:	57 95       	ror	r21
    1948:	47 95       	ror	r20
    194a:	37 95       	ror	r19
    194c:	27 95       	ror	r18
    194e:	ba 95       	dec	r27
    1950:	c9 f7       	brne	.-14     	; 0x1944 <__ultoa_invert+0xa2>
    1952:	62 0f       	add	r22, r18
    1954:	73 1f       	adc	r23, r19
    1956:	84 1f       	adc	r24, r20
    1958:	95 1f       	adc	r25, r21
    195a:	a0 1d       	adc	r26, r0
    195c:	08 95       	ret

0000195e <_exit>:
    195e:	f8 94       	cli

00001960 <__stop_program>:
    1960:	ff cf       	rjmp	.-2      	; 0x1960 <__stop_program>

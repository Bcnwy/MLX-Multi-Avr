
MLX Multi.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000032  00800100  0000157e  00001612  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000157e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000035  00800132  00800132  00001644  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001644  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000016a0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000170  00000000  00000000  000016e0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000209e  00000000  00000000  00001850  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000b79  00000000  00000000  000038ee  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000773  00000000  00000000  00004467  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000388  00000000  00000000  00004bdc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000007db  00000000  00000000  00004f64  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000e37  00000000  00000000  0000573f  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000150  00000000  00000000  00006576  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 b6 00 	jmp	0x16c	; 0x16c <__ctors_end>
       4:	0c 94 de 00 	jmp	0x1bc	; 0x1bc <__bad_interrupt>
       8:	0c 94 de 00 	jmp	0x1bc	; 0x1bc <__bad_interrupt>
       c:	0c 94 de 00 	jmp	0x1bc	; 0x1bc <__bad_interrupt>
      10:	0c 94 de 00 	jmp	0x1bc	; 0x1bc <__bad_interrupt>
      14:	0c 94 de 00 	jmp	0x1bc	; 0x1bc <__bad_interrupt>
      18:	0c 94 de 00 	jmp	0x1bc	; 0x1bc <__bad_interrupt>
      1c:	0c 94 de 00 	jmp	0x1bc	; 0x1bc <__bad_interrupt>
      20:	0c 94 de 00 	jmp	0x1bc	; 0x1bc <__bad_interrupt>
      24:	0c 94 de 00 	jmp	0x1bc	; 0x1bc <__bad_interrupt>
      28:	0c 94 de 00 	jmp	0x1bc	; 0x1bc <__bad_interrupt>
      2c:	0c 94 de 00 	jmp	0x1bc	; 0x1bc <__bad_interrupt>
      30:	0c 94 de 00 	jmp	0x1bc	; 0x1bc <__bad_interrupt>
      34:	0c 94 de 00 	jmp	0x1bc	; 0x1bc <__bad_interrupt>
      38:	0c 94 85 01 	jmp	0x30a	; 0x30a <__vector_14>
      3c:	0c 94 de 00 	jmp	0x1bc	; 0x1bc <__bad_interrupt>
      40:	0c 94 de 00 	jmp	0x1bc	; 0x1bc <__bad_interrupt>
      44:	0c 94 de 00 	jmp	0x1bc	; 0x1bc <__bad_interrupt>
      48:	0c 94 de 00 	jmp	0x1bc	; 0x1bc <__bad_interrupt>
      4c:	0c 94 de 00 	jmp	0x1bc	; 0x1bc <__bad_interrupt>
      50:	0c 94 de 00 	jmp	0x1bc	; 0x1bc <__bad_interrupt>
      54:	0c 94 de 00 	jmp	0x1bc	; 0x1bc <__bad_interrupt>
      58:	0c 94 de 00 	jmp	0x1bc	; 0x1bc <__bad_interrupt>
      5c:	0c 94 de 00 	jmp	0x1bc	; 0x1bc <__bad_interrupt>
      60:	0c 94 de 00 	jmp	0x1bc	; 0x1bc <__bad_interrupt>
      64:	0c 94 de 00 	jmp	0x1bc	; 0x1bc <__bad_interrupt>

00000068 <__trampolines_end>:
      68:	6e 61       	ori	r22, 0x1E	; 30
      6a:	6e 00       	.word	0x006e	; ????

0000006c <__c.2177>:
      6c:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      7c:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
      8c:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
      9c:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
      ac:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
      bc:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
      cc:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
      dc:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
      ec:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
      fc:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     10c:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     11c:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     12c:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     13c:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     14c:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     15c:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

0000016a <__ctors_start>:
     16a:	ca 02       	muls	r28, r26

0000016c <__ctors_end>:
     16c:	11 24       	eor	r1, r1
     16e:	1f be       	out	0x3f, r1	; 63
     170:	cf ef       	ldi	r28, 0xFF	; 255
     172:	d8 e0       	ldi	r29, 0x08	; 8
     174:	de bf       	out	0x3e, r29	; 62
     176:	cd bf       	out	0x3d, r28	; 61

00000178 <__do_copy_data>:
     178:	11 e0       	ldi	r17, 0x01	; 1
     17a:	a0 e0       	ldi	r26, 0x00	; 0
     17c:	b1 e0       	ldi	r27, 0x01	; 1
     17e:	ee e7       	ldi	r30, 0x7E	; 126
     180:	f5 e1       	ldi	r31, 0x15	; 21
     182:	02 c0       	rjmp	.+4      	; 0x188 <__do_copy_data+0x10>
     184:	05 90       	lpm	r0, Z+
     186:	0d 92       	st	X+, r0
     188:	a2 33       	cpi	r26, 0x32	; 50
     18a:	b1 07       	cpc	r27, r17
     18c:	d9 f7       	brne	.-10     	; 0x184 <__do_copy_data+0xc>

0000018e <__do_clear_bss>:
     18e:	21 e0       	ldi	r18, 0x01	; 1
     190:	a2 e3       	ldi	r26, 0x32	; 50
     192:	b1 e0       	ldi	r27, 0x01	; 1
     194:	01 c0       	rjmp	.+2      	; 0x198 <.do_clear_bss_start>

00000196 <.do_clear_bss_loop>:
     196:	1d 92       	st	X+, r1

00000198 <.do_clear_bss_start>:
     198:	a7 36       	cpi	r26, 0x67	; 103
     19a:	b2 07       	cpc	r27, r18
     19c:	e1 f7       	brne	.-8      	; 0x196 <.do_clear_bss_loop>

0000019e <__do_global_ctors>:
     19e:	10 e0       	ldi	r17, 0x00	; 0
     1a0:	c6 eb       	ldi	r28, 0xB6	; 182
     1a2:	d0 e0       	ldi	r29, 0x00	; 0
     1a4:	04 c0       	rjmp	.+8      	; 0x1ae <__do_global_ctors+0x10>
     1a6:	21 97       	sbiw	r28, 0x01	; 1
     1a8:	fe 01       	movw	r30, r28
     1aa:	0e 94 10 09 	call	0x1220	; 0x1220 <__tablejump2__>
     1ae:	c5 3b       	cpi	r28, 0xB5	; 181
     1b0:	d1 07       	cpc	r29, r17
     1b2:	c9 f7       	brne	.-14     	; 0x1a6 <__do_global_ctors+0x8>
     1b4:	0e 94 ac 01 	call	0x358	; 0x358 <main>
     1b8:	0c 94 bd 0a 	jmp	0x157a	; 0x157a <_exit>

000001bc <__bad_interrupt>:
     1bc:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001c0 <_ZN17Adafruit_MLX90614C1Eh>:
 ****************************************************/

#include "Adafruit_MLX90614.h"
#include "uart.h"
  
Adafruit_MLX90614::Adafruit_MLX90614(uint8_t i2caddr) {
     1c0:	1f 93       	push	r17
     1c2:	cf 93       	push	r28
     1c4:	df 93       	push	r29
     1c6:	ec 01       	movw	r28, r24
     1c8:	16 2f       	mov	r17, r22
	  }
 class I2c
 {
 public:
    I2c()
    {
     1ca:	18 86       	std	Y+8, r1	; 0x08
     1cc:	19 86       	std	Y+9, r1	; 0x09
	    i2c_init();
     1ce:	0e 94 da 02 	call	0x5b4	; 0x5b4 <i2c_init>
  _addr = i2caddr;
     1d2:	1a 87       	std	Y+10, r17	; 0x0a
}
     1d4:	df 91       	pop	r29
     1d6:	cf 91       	pop	r28
     1d8:	1f 91       	pop	r17
     1da:	08 95       	ret

000001dc <_ZN17Adafruit_MLX906146read16Eh>:
  return temp;
}

/*********************************************************************/

uint16_t Adafruit_MLX90614::read16(uint8_t a) {
     1dc:	0f 93       	push	r16
     1de:	1f 93       	push	r17
     1e0:	cf 93       	push	r28
     1e2:	8c 01       	movw	r16, r24
     1e4:	c6 2f       	mov	r28, r22
  uint16_t ret;
  Wire.beginTransmission(_addr); // start transmission to device 
     1e6:	fc 01       	movw	r30, r24
     1e8:	82 85       	ldd	r24, Z+10	; 0x0a
    }
     void beginTransmission(uint8_t address)
     {
         m_bufferIndex = 0;
     1ea:	10 86       	std	Z+8, r1	; 0x08

         i2c_start((address << 1) | I2C_WRITE);
     1ec:	88 0f       	add	r24, r24
     1ee:	0e 94 e3 02 	call	0x5c6	; 0x5c6 <i2c_start>
     }

     void write(uint8_t byte)
     {
         if (m_bufferIndex == c_bufferSize)
     1f2:	f8 01       	movw	r30, r16
     1f4:	80 85       	ldd	r24, Z+8	; 0x08
     1f6:	88 30       	cpi	r24, 0x08	; 8
     1f8:	59 f0       	breq	.+22     	; 0x210 <_ZN17Adafruit_MLX906146read16Eh+0x34>
             return;

         m_buffer[m_bufferIndex++] = byte;
     1fa:	91 e0       	ldi	r25, 0x01	; 1
     1fc:	98 0f       	add	r25, r24
     1fe:	90 87       	std	Z+8, r25	; 0x08
     200:	e8 0f       	add	r30, r24
     202:	f1 1d       	adc	r31, r1
     204:	c0 83       	st	Z, r28
    }

    void endTransmission(bool stop = true)
    {
         for (uint8_t index = 0; index < m_bufferIndex; ++index) {
     206:	f8 01       	movw	r30, r16
     208:	80 85       	ldd	r24, Z+8	; 0x08
     20a:	88 23       	and	r24, r24
     20c:	09 f4       	brne	.+2      	; 0x210 <_ZN17Adafruit_MLX906146read16Eh+0x34>
     20e:	4e c0       	rjmp	.+156    	; 0x2ac <_ZN17Adafruit_MLX906146read16Eh+0xd0>
  return temp;
}

/*********************************************************************/

uint16_t Adafruit_MLX90614::read16(uint8_t a) {
     210:	c0 e0       	ldi	r28, 0x00	; 0
             if (i2c_write(m_buffer[index]) != 0)
     212:	f8 01       	movw	r30, r16
     214:	ec 0f       	add	r30, r28
     216:	f1 1d       	adc	r31, r1
     218:	80 81       	ld	r24, Z
     21a:	0e 94 0e 03 	call	0x61c	; 0x61c <i2c_write>
     21e:	81 11       	cpse	r24, r1
     220:	45 c0       	rjmp	.+138    	; 0x2ac <_ZN17Adafruit_MLX906146read16Eh+0xd0>
         m_buffer[m_bufferIndex++] = byte;
    }

    void endTransmission(bool stop = true)
    {
         for (uint8_t index = 0; index < m_bufferIndex; ++index) {
     222:	cf 5f       	subi	r28, 0xFF	; 255
     224:	f8 01       	movw	r30, r16
     226:	80 85       	ldd	r24, Z+8	; 0x08
     228:	c8 17       	cp	r28, r24
     22a:	98 f3       	brcs	.-26     	; 0x212 <_ZN17Adafruit_MLX906146read16Eh+0x36>
     22c:	3f c0       	rjmp	.+126    	; 0x2ac <_ZN17Adafruit_MLX906146read16Eh+0xd0>
         return m_bufferIndex;
     }

     uint8_t read()
     {
         if (m_bufferReadIndex == m_bufferIndex)
     22e:	f8 01       	movw	r30, r16
     230:	91 85       	ldd	r25, Z+9	; 0x09
     232:	80 85       	ldd	r24, Z+8	; 0x08
     234:	98 17       	cp	r25, r24
     236:	b1 f0       	breq	.+44     	; 0x264 <_ZN17Adafruit_MLX906146read16Eh+0x88>
             return 0;
        return m_buffer[m_bufferReadIndex++];
     238:	41 e0       	ldi	r20, 0x01	; 1
     23a:	49 0f       	add	r20, r25
     23c:	41 87       	std	Z+9, r20	; 0x09
     23e:	e9 0f       	add	r30, r25
     240:	f1 1d       	adc	r31, r1
  Wire.beginTransmission(_addr); // start transmission to device 
  Wire.write(a); // sends register address to read from
  Wire.endTransmission(false); // end transmission
  
  Wire.requestFrom(_addr, (uint8_t)3);// send data n-bytes read
  ret = Wire.read(); // receive DATA
     242:	20 81       	ld	r18, Z
     244:	30 e0       	ldi	r19, 0x00	; 0
         return m_bufferIndex;
     }

     uint8_t read()
     {
         if (m_bufferReadIndex == m_bufferIndex)
     246:	84 17       	cp	r24, r20
     248:	d1 f1       	breq	.+116    	; 0x2be <_ZN17Adafruit_MLX906146read16Eh+0xe2>
             return 0;
        return m_buffer[m_bufferReadIndex++];
     24a:	9e 5f       	subi	r25, 0xFE	; 254
     24c:	f8 01       	movw	r30, r16
     24e:	91 87       	std	Z+9, r25	; 0x09
     250:	e4 0f       	add	r30, r20
     252:	f1 1d       	adc	r31, r1
  ret |= Wire.read() << 8; // receive DATA
     254:	40 81       	ld	r20, Z
     256:	34 2b       	or	r19, r20
         return m_bufferIndex;
     }

     uint8_t read()
     {
         if (m_bufferReadIndex == m_bufferIndex)
     258:	98 17       	cp	r25, r24
     25a:	89 f1       	breq	.+98     	; 0x2be <_ZN17Adafruit_MLX906146read16Eh+0xe2>
             return 0;
        return m_buffer[m_bufferReadIndex++];
     25c:	9f 5f       	subi	r25, 0xFF	; 255
     25e:	f8 01       	movw	r30, r16
     260:	91 87       	std	Z+9, r25	; 0x09
     262:	2d c0       	rjmp	.+90     	; 0x2be <_ZN17Adafruit_MLX906146read16Eh+0xe2>
     264:	20 e0       	ldi	r18, 0x00	; 0
     266:	30 e0       	ldi	r19, 0x00	; 0
     268:	2a c0       	rjmp	.+84     	; 0x2be <_ZN17Adafruit_MLX906146read16Eh+0xe2>
         if (i2c_start((address << 1) | I2C_READ) != 0)
             return 0;

        m_bufferIndex = 0;
         while (--quantity > 0) {
             m_buffer[m_bufferIndex++] = i2c_readAck();
     26a:	81 e0       	ldi	r24, 0x01	; 1
     26c:	f8 01       	movw	r30, r16
     26e:	80 87       	std	Z+8, r24	; 0x08
     270:	0e 94 20 03 	call	0x640	; 0x640 <i2c_readAck>
     274:	f8 01       	movw	r30, r16
     276:	80 83       	st	Z, r24
     278:	c0 85       	ldd	r28, Z+8	; 0x08
     27a:	81 e0       	ldi	r24, 0x01	; 1
     27c:	8c 0f       	add	r24, r28
     27e:	80 87       	std	Z+8, r24	; 0x08
     280:	0e 94 20 03 	call	0x640	; 0x640 <i2c_readAck>
     284:	f8 01       	movw	r30, r16
     286:	ec 0f       	add	r30, r28
     288:	f1 1d       	adc	r31, r1
     28a:	80 83       	st	Z, r24
         }
         m_buffer[m_bufferIndex++] = i2c_readNak();
     28c:	f8 01       	movw	r30, r16
     28e:	c0 85       	ldd	r28, Z+8	; 0x08
     290:	81 e0       	ldi	r24, 0x01	; 1
     292:	8c 0f       	add	r24, r28
     294:	80 87       	std	Z+8, r24	; 0x08
     296:	0e 94 2b 03 	call	0x656	; 0x656 <i2c_readNak>
     29a:	f8 01       	movw	r30, r16
     29c:	ec 0f       	add	r30, r28
     29e:	f1 1d       	adc	r31, r1
     2a0:	80 83       	st	Z, r24
         m_bufferReadIndex = 0;
     2a2:	f8 01       	movw	r30, r16
     2a4:	11 86       	std	Z+9, r1	; 0x09

         if (stop)
             i2c_stop();
     2a6:	0e 94 0a 03 	call	0x614	; 0x614 <i2c_stop>
     2aa:	c1 cf       	rjmp	.-126    	; 0x22e <_ZN17Adafruit_MLX906146read16Eh+0x52>
     {
        // quantity = Sensors::min(quantity, c_bufferSize);
         if (quantity == 0)
             return 0;

         if (i2c_start((address << 1) | I2C_READ) != 0)
     2ac:	f8 01       	movw	r30, r16
     2ae:	82 85       	ldd	r24, Z+10	; 0x0a
     2b0:	88 0f       	add	r24, r24
     2b2:	81 60       	ori	r24, 0x01	; 1
     2b4:	0e 94 e3 02 	call	0x5c6	; 0x5c6 <i2c_start>
     2b8:	88 23       	and	r24, r24
     2ba:	b9 f2       	breq	.-82     	; 0x26a <_ZN17Adafruit_MLX906146read16Eh+0x8e>
     2bc:	b8 cf       	rjmp	.-144    	; 0x22e <_ZN17Adafruit_MLX906146read16Eh+0x52>

  uint8_t pec = Wire.read();

  return ret;
}
     2be:	c9 01       	movw	r24, r18
     2c0:	cf 91       	pop	r28
     2c2:	1f 91       	pop	r17
     2c4:	0f 91       	pop	r16
     2c6:	08 95       	ret

000002c8 <_ZN17Adafruit_MLX906148readTempEh>:
}

float Adafruit_MLX90614::readTemp(uint8_t reg) {
  float temp;
  
  temp = read16(reg);
     2c8:	0e 94 ee 00 	call	0x1dc	; 0x1dc <_ZN17Adafruit_MLX906146read16Eh>
     2cc:	bc 01       	movw	r22, r24
     2ce:	80 e0       	ldi	r24, 0x00	; 0
     2d0:	90 e0       	ldi	r25, 0x00	; 0
     2d2:	0e 94 40 04 	call	0x880	; 0x880 <__floatunsisf>
  temp *= .02;
     2d6:	2a e0       	ldi	r18, 0x0A	; 10
     2d8:	37 ed       	ldi	r19, 0xD7	; 215
     2da:	43 ea       	ldi	r20, 0xA3	; 163
     2dc:	5c e3       	ldi	r21, 0x3C	; 60
     2de:	0e 94 ce 04 	call	0x99c	; 0x99c <__mulsf3>
  temp  -= 273.15;
     2e2:	23 e3       	ldi	r18, 0x33	; 51
     2e4:	33 e9       	ldi	r19, 0x93	; 147
     2e6:	48 e8       	ldi	r20, 0x88	; 136
     2e8:	53 e4       	ldi	r21, 0x43	; 67
     2ea:	0e 94 9d 03 	call	0x73a	; 0x73a <__subsf3>
  return temp;
}
     2ee:	08 95       	ret

000002f0 <_ZN17Adafruit_MLX9061415readObjectTempCEv>:
}

//////////////////////////////////////////////////////

double Adafruit_MLX90614::readObjectTempC(void) {
  return readTemp(MLX90614_TOBJ1);
     2f0:	67 e0       	ldi	r22, 0x07	; 7
     2f2:	0e 94 64 01 	call	0x2c8	; 0x2c8 <_ZN17Adafruit_MLX906148readTempEh>
}
     2f6:	08 95       	ret

000002f8 <_ZN17Adafruit_MLX9061416readAmbientTempCEv>:


double Adafruit_MLX90614::readAmbientTempC(void) {
  return readTemp(MLX90614_TA);
     2f8:	66 e0       	ldi	r22, 0x06	; 6
     2fa:	0e 94 64 01 	call	0x2c8	; 0x2c8 <_ZN17Adafruit_MLX906148readTempEh>
}
     2fe:	08 95       	ret

00000300 <_ZN7HC_SR044initEv>:
// Anything over 400/500 cm (23200/29410 us pulse) is "out of range"
const unsigned long MAX_DIST = 23200;
  
void HC_SR04::init() {
  // The Trigger pin will tell the sensor to range find
  DDRD = 0x20;
     300:	80 e2       	ldi	r24, 0x20	; 32
     302:	8a b9       	out	0x0a, r24	; 10
  PORTD = 0x00;
     304:	1b b8       	out	0x0b, r1	; 11
  clr_pin(PORTD, TRIG_PIN);  
     306:	5d 98       	cbi	0x0b, 5	; 11
     308:	08 95       	ret

0000030a <__vector_14>:

HC_SR04 sonic;

volatile unsigned long int count = 0; 
ISR(TIMER0_COMPA_vect)
{
     30a:	1f 92       	push	r1
     30c:	0f 92       	push	r0
     30e:	0f b6       	in	r0, 0x3f	; 63
     310:	0f 92       	push	r0
     312:	11 24       	eor	r1, r1
     314:	8f 93       	push	r24
     316:	9f 93       	push	r25
     318:	af 93       	push	r26
     31a:	bf 93       	push	r27
	cli();
     31c:	f8 94       	cli
	count++;
     31e:	80 91 32 01 	lds	r24, 0x0132
     322:	90 91 33 01 	lds	r25, 0x0133
     326:	a0 91 34 01 	lds	r26, 0x0134
     32a:	b0 91 35 01 	lds	r27, 0x0135
     32e:	01 96       	adiw	r24, 0x01	; 1
     330:	a1 1d       	adc	r26, r1
     332:	b1 1d       	adc	r27, r1
     334:	80 93 32 01 	sts	0x0132, r24
     338:	90 93 33 01 	sts	0x0133, r25
     33c:	a0 93 34 01 	sts	0x0134, r26
     340:	b0 93 35 01 	sts	0x0135, r27
	sei();
     344:	78 94       	sei
}
     346:	bf 91       	pop	r27
     348:	af 91       	pop	r26
     34a:	9f 91       	pop	r25
     34c:	8f 91       	pop	r24
     34e:	0f 90       	pop	r0
     350:	0f be       	out	0x3f, r0	; 63
     352:	0f 90       	pop	r0
     354:	1f 90       	pop	r1
     356:	18 95       	reti

00000358 <main>:

	return d;
}
/*********************************************************************/
int main(void)
{
     358:	cf 93       	push	r28
     35a:	df 93       	push	r29
     35c:	cd b7       	in	r28, 0x3d	; 61
     35e:	de b7       	in	r29, 0x3e	; 62
     360:	60 97       	sbiw	r28, 0x10	; 16
     362:	0f b6       	in	r0, 0x3f	; 63
     364:	f8 94       	cli
     366:	de bf       	out	0x3e, r29	; 62
     368:	0f be       	out	0x3f, r0	; 63
     36a:	cd bf       	out	0x3d, r28	; 61
	char str[16];
	double obj;
	double amb;
	unsigned long start_time;
	TCNT0 = 0;
     36c:	16 bc       	out	0x26, r1	; 38
	TCNT1 = 0;
     36e:	10 92 85 00 	sts	0x0085, r1
     372:	10 92 84 00 	sts	0x0084, r1
	EIMSK |= (_BV(INT1) | _BV(INT0));
     376:	8d b3       	in	r24, 0x1d	; 29
     378:	83 60       	ori	r24, 0x03	; 3
     37a:	8d bb       	out	0x1d, r24	; 29
	EICRA |= (_BV(ISC01) | _BV(ISC00) | _BV(ISC11) | _BV(ISC10));
     37c:	e9 e6       	ldi	r30, 0x69	; 105
     37e:	f0 e0       	ldi	r31, 0x00	; 0
     380:	80 81       	ld	r24, Z
     382:	8f 60       	ori	r24, 0x0F	; 15
     384:	80 83       	st	Z, r24
	TCCR0A |= (1<<WGM01);
     386:	84 b5       	in	r24, 0x24	; 36
     388:	82 60       	ori	r24, 0x02	; 2
     38a:	84 bd       	out	0x24, r24	; 36
	TCCR1A |= (1<<WGM12);
     38c:	e0 e8       	ldi	r30, 0x80	; 128
     38e:	f0 e0       	ldi	r31, 0x00	; 0
     390:	80 81       	ld	r24, Z
     392:	88 60       	ori	r24, 0x08	; 8
     394:	80 83       	st	Z, r24
	OCR0A = 249;
     396:	89 ef       	ldi	r24, 0xF9	; 249
     398:	87 bd       	out	0x27, r24	; 39
	OCR1AH = 0xFF;
     39a:	8f ef       	ldi	r24, 0xFF	; 255
     39c:	80 93 89 00 	sts	0x0089, r24
	OCR1AL = 0xFF;
     3a0:	80 93 88 00 	sts	0x0088, r24
	TIMSK0 |= (1 << OCIE0A);
     3a4:	ee e6       	ldi	r30, 0x6E	; 110
     3a6:	f0 e0       	ldi	r31, 0x00	; 0
     3a8:	80 81       	ld	r24, Z
     3aa:	82 60       	ori	r24, 0x02	; 2
     3ac:	80 83       	st	Z, r24
	TIMSK1 |= (1 << OCIE1A);
     3ae:	ef e6       	ldi	r30, 0x6F	; 111
     3b0:	f0 e0       	ldi	r31, 0x00	; 0
     3b2:	80 81       	ld	r24, Z
     3b4:	82 60       	ori	r24, 0x02	; 2
     3b6:	80 83       	st	Z, r24
	TCCR0B |= (1<<CS01) | (1<<CS00);
     3b8:	85 b5       	in	r24, 0x25	; 37
     3ba:	83 60       	ori	r24, 0x03	; 3
     3bc:	85 bd       	out	0x25, r24	; 37
	TCCR1B |= (1<<CS11);
     3be:	e1 e8       	ldi	r30, 0x81	; 129
     3c0:	f0 e0       	ldi	r31, 0x00	; 0
     3c2:	80 81       	ld	r24, Z
     3c4:	82 60       	ori	r24, 0x02	; 2
     3c6:	80 83       	st	Z, r24
	sei();
     3c8:	78 94       	sei

	Serial.init(9600);
     3ca:	60 e8       	ldi	r22, 0x80	; 128
     3cc:	75 e2       	ldi	r23, 0x25	; 37
     3ce:	8f e5       	ldi	r24, 0x5F	; 95
     3d0:	91 e0       	ldi	r25, 0x01	; 1
     3d2:	0e 94 36 03 	call	0x66c	; 0x66c <_ZN5USART4initEi>
	sonic.init();
     3d6:	86 e3       	ldi	r24, 0x36	; 54
     3d8:	91 e0       	ldi	r25, 0x01	; 1
     3da:	0e 94 80 01 	call	0x300	; 0x300 <_ZN7HC_SR044initEv>
		//void send_int(int d);
		void send(double data, int base);
		//void send(uint32_t str);
			
		void sendln(void) {send("\r\n");};
		void sendln(const char* c) {send(c);send("\r\n");};
     3de:	60 e0       	ldi	r22, 0x00	; 0
     3e0:	71 e0       	ldi	r23, 0x01	; 1
     3e2:	8f e5       	ldi	r24, 0x5F	; 95
     3e4:	91 e0       	ldi	r25, 0x01	; 1
     3e6:	0e 94 88 03 	call	0x710	; 0x710 <_ZN5USART4sendEPKc>
     3ea:	6e e2       	ldi	r22, 0x2E	; 46
     3ec:	71 e0       	ldi	r23, 0x01	; 1
     3ee:	8f e5       	ldi	r24, 0x5F	; 95
     3f0:	91 e0       	ldi	r25, 0x01	; 1
     3f2:	0e 94 88 03 	call	0x710	; 0x710 <_ZN5USART4sendEPKc>
		start_time = millis();
		Serial.sendln("> Read sensors");
		//sonic.read();
		obj = MLX_5a.readObjectTempC();
		amb = MLX_5a.readAmbientTempC();
		sprintf(str, "T%d,%0.1f,%0.1f,%i\r\n", 1, obj, amb, (int)sonic.Distance);
     3f6:	0f 2e       	mov	r0, r31
     3f8:	fc e1       	ldi	r31, 0x1C	; 28
     3fa:	af 2e       	mov	r10, r31
     3fc:	f1 e0       	ldi	r31, 0x01	; 1
     3fe:	bf 2e       	mov	r11, r31
     400:	f0 2d       	mov	r31, r0
     402:	8e 01       	movw	r16, r28
     404:	0f 5f       	subi	r16, 0xFF	; 255
     406:	1f 4f       	sbci	r17, 0xFF	; 255
}
/*********************************************************************/
unsigned long int millis(void)
{

	unsigned long int d = count;
     408:	c0 90 32 01 	lds	r12, 0x0132
     40c:	d0 90 33 01 	lds	r13, 0x0133
     410:	e0 90 34 01 	lds	r14, 0x0134
     414:	f0 90 35 01 	lds	r15, 0x0135
     418:	6d e0       	ldi	r22, 0x0D	; 13
     41a:	71 e0       	ldi	r23, 0x01	; 1
     41c:	8f e5       	ldi	r24, 0x5F	; 95
     41e:	91 e0       	ldi	r25, 0x01	; 1
     420:	0e 94 88 03 	call	0x710	; 0x710 <_ZN5USART4sendEPKc>
     424:	6e e2       	ldi	r22, 0x2E	; 46
     426:	71 e0       	ldi	r23, 0x01	; 1
     428:	8f e5       	ldi	r24, 0x5F	; 95
     42a:	91 e0       	ldi	r25, 0x01	; 1
     42c:	0e 94 88 03 	call	0x710	; 0x710 <_ZN5USART4sendEPKc>
	while (1) 
    {	
		start_time = millis();
		Serial.sendln("> Read sensors");
		//sonic.read();
		obj = MLX_5a.readObjectTempC();
     430:	84 e5       	ldi	r24, 0x54	; 84
     432:	91 e0       	ldi	r25, 0x01	; 1
     434:	0e 94 78 01 	call	0x2f0	; 0x2f0 <_ZN17Adafruit_MLX9061415readObjectTempCEv>
     438:	96 2e       	mov	r9, r22
     43a:	87 2e       	mov	r8, r23
     43c:	78 2e       	mov	r7, r24
     43e:	69 2e       	mov	r6, r25
		amb = MLX_5a.readAmbientTempC();
     440:	84 e5       	ldi	r24, 0x54	; 84
     442:	91 e0       	ldi	r25, 0x01	; 1
     444:	0e 94 7c 01 	call	0x2f8	; 0x2f8 <_ZN17Adafruit_MLX9061416readAmbientTempCEv>
     448:	56 2e       	mov	r5, r22
     44a:	47 2e       	mov	r4, r23
     44c:	38 2e       	mov	r3, r24
     44e:	29 2e       	mov	r2, r25
		sprintf(str, "T%d,%0.1f,%0.1f,%i\r\n", 1, obj, amb, (int)sonic.Distance);
     450:	e6 e3       	ldi	r30, 0x36	; 54
     452:	f1 e0       	ldi	r31, 0x01	; 1
     454:	60 81       	ld	r22, Z
     456:	71 81       	ldd	r23, Z+1	; 0x01
     458:	82 81       	ldd	r24, Z+2	; 0x02
     45a:	93 81       	ldd	r25, Z+3	; 0x03
     45c:	0e 94 0a 04 	call	0x814	; 0x814 <__fixsfsi>
     460:	7f 93       	push	r23
     462:	6f 93       	push	r22
     464:	2f 92       	push	r2
     466:	3f 92       	push	r3
     468:	4f 92       	push	r4
     46a:	5f 92       	push	r5
     46c:	6f 92       	push	r6
     46e:	7f 92       	push	r7
     470:	8f 92       	push	r8
     472:	9f 92       	push	r9
     474:	1f 92       	push	r1
     476:	f1 e0       	ldi	r31, 0x01	; 1
     478:	ff 93       	push	r31
     47a:	bf 92       	push	r11
     47c:	af 92       	push	r10
     47e:	1f 93       	push	r17
     480:	0f 93       	push	r16
     482:	0e 94 3c 0a 	call	0x1478	; 0x1478 <sprintf>
		Serial.send(str);
     486:	b8 01       	movw	r22, r16
     488:	8f e5       	ldi	r24, 0x5F	; 95
     48a:	91 e0       	ldi	r25, 0x01	; 1
     48c:	0e 94 88 03 	call	0x710	; 0x710 <_ZN5USART4sendEPKc>
		obj = MLX_5b.readObjectTempC();
     490:	89 e4       	ldi	r24, 0x49	; 73
     492:	91 e0       	ldi	r25, 0x01	; 1
     494:	0e 94 78 01 	call	0x2f0	; 0x2f0 <_ZN17Adafruit_MLX9061415readObjectTempCEv>
     498:	96 2e       	mov	r9, r22
     49a:	87 2e       	mov	r8, r23
     49c:	78 2e       	mov	r7, r24
     49e:	69 2e       	mov	r6, r25
		amb = MLX_5b.readAmbientTempC();
     4a0:	89 e4       	ldi	r24, 0x49	; 73
     4a2:	91 e0       	ldi	r25, 0x01	; 1
     4a4:	0e 94 7c 01 	call	0x2f8	; 0x2f8 <_ZN17Adafruit_MLX9061416readAmbientTempCEv>
     4a8:	56 2e       	mov	r5, r22
     4aa:	47 2e       	mov	r4, r23
     4ac:	38 2e       	mov	r3, r24
     4ae:	29 2e       	mov	r2, r25
		sprintf(str, "T%d,%0.1f,%0.1f,%i\r\n", 2, obj, amb, (int)sonic.Distance);
     4b0:	e6 e3       	ldi	r30, 0x36	; 54
     4b2:	f1 e0       	ldi	r31, 0x01	; 1
     4b4:	60 81       	ld	r22, Z
     4b6:	71 81       	ldd	r23, Z+1	; 0x01
     4b8:	82 81       	ldd	r24, Z+2	; 0x02
     4ba:	93 81       	ldd	r25, Z+3	; 0x03
     4bc:	0e 94 0a 04 	call	0x814	; 0x814 <__fixsfsi>
     4c0:	7f 93       	push	r23
     4c2:	6f 93       	push	r22
     4c4:	2f 92       	push	r2
     4c6:	3f 92       	push	r3
     4c8:	4f 92       	push	r4
     4ca:	5f 92       	push	r5
     4cc:	6f 92       	push	r6
     4ce:	7f 92       	push	r7
     4d0:	8f 92       	push	r8
     4d2:	9f 92       	push	r9
     4d4:	1f 92       	push	r1
     4d6:	f2 e0       	ldi	r31, 0x02	; 2
     4d8:	ff 93       	push	r31
     4da:	bf 92       	push	r11
     4dc:	af 92       	push	r10
     4de:	1f 93       	push	r17
     4e0:	0f 93       	push	r16
     4e2:	0e 94 3c 0a 	call	0x1478	; 0x1478 <sprintf>
		Serial.send(str);
     4e6:	0f b6       	in	r0, 0x3f	; 63
     4e8:	f8 94       	cli
     4ea:	de bf       	out	0x3e, r29	; 62
     4ec:	0f be       	out	0x3f, r0	; 63
     4ee:	cd bf       	out	0x3d, r28	; 61
     4f0:	b8 01       	movw	r22, r16
     4f2:	8f e5       	ldi	r24, 0x5F	; 95
     4f4:	91 e0       	ldi	r25, 0x01	; 1
     4f6:	0e 94 88 03 	call	0x710	; 0x710 <_ZN5USART4sendEPKc>
		obj = MLX_5c.readObjectTempC();
     4fa:	8e e3       	ldi	r24, 0x3E	; 62
     4fc:	91 e0       	ldi	r25, 0x01	; 1
     4fe:	0e 94 78 01 	call	0x2f0	; 0x2f0 <_ZN17Adafruit_MLX9061415readObjectTempCEv>
     502:	96 2e       	mov	r9, r22
     504:	87 2e       	mov	r8, r23
     506:	78 2e       	mov	r7, r24
     508:	69 2e       	mov	r6, r25
		amb = MLX_5c.readAmbientTempC();
     50a:	8e e3       	ldi	r24, 0x3E	; 62
     50c:	91 e0       	ldi	r25, 0x01	; 1
     50e:	0e 94 7c 01 	call	0x2f8	; 0x2f8 <_ZN17Adafruit_MLX9061416readAmbientTempCEv>
     512:	56 2e       	mov	r5, r22
     514:	47 2e       	mov	r4, r23
     516:	38 2e       	mov	r3, r24
     518:	29 2e       	mov	r2, r25
		sprintf(str, "T%d,%0.1f,%0.1f,%i\r\n", 3, obj, amb, (int)sonic.Distance);
     51a:	e6 e3       	ldi	r30, 0x36	; 54
     51c:	f1 e0       	ldi	r31, 0x01	; 1
     51e:	60 81       	ld	r22, Z
     520:	71 81       	ldd	r23, Z+1	; 0x01
     522:	82 81       	ldd	r24, Z+2	; 0x02
     524:	93 81       	ldd	r25, Z+3	; 0x03
     526:	0e 94 0a 04 	call	0x814	; 0x814 <__fixsfsi>
     52a:	7f 93       	push	r23
     52c:	6f 93       	push	r22
     52e:	2f 92       	push	r2
     530:	3f 92       	push	r3
     532:	4f 92       	push	r4
     534:	5f 92       	push	r5
     536:	6f 92       	push	r6
     538:	7f 92       	push	r7
     53a:	8f 92       	push	r8
     53c:	9f 92       	push	r9
     53e:	1f 92       	push	r1
     540:	f3 e0       	ldi	r31, 0x03	; 3
     542:	ff 93       	push	r31
     544:	bf 92       	push	r11
     546:	af 92       	push	r10
     548:	1f 93       	push	r17
     54a:	0f 93       	push	r16
     54c:	0e 94 3c 0a 	call	0x1478	; 0x1478 <sprintf>
		Serial.send(str);
     550:	b8 01       	movw	r22, r16
     552:	8f e5       	ldi	r24, 0x5F	; 95
     554:	91 e0       	ldi	r25, 0x01	; 1
     556:	0e 94 88 03 	call	0x710	; 0x710 <_ZN5USART4sendEPKc>
		void send(uint8_t data, int base);
		//void send_int(int d);
		void send(double data, int base);
		//void send(uint32_t str);
			
		void sendln(void) {send("\r\n");};
     55a:	6e e2       	ldi	r22, 0x2E	; 46
     55c:	71 e0       	ldi	r23, 0x01	; 1
     55e:	8f e5       	ldi	r24, 0x5F	; 95
     560:	91 e0       	ldi	r25, 0x01	; 1
     562:	0e 94 88 03 	call	0x710	; 0x710 <_ZN5USART4sendEPKc>
     566:	0f b6       	in	r0, 0x3f	; 63
     568:	f8 94       	cli
     56a:	de bf       	out	0x3e, r29	; 62
     56c:	0f be       	out	0x3f, r0	; 63
     56e:	cd bf       	out	0x3d, r28	; 61
}
/*********************************************************************/
unsigned long int millis(void)
{

	unsigned long int d = count;
     570:	80 91 32 01 	lds	r24, 0x0132
     574:	90 91 33 01 	lds	r25, 0x0133
     578:	a0 91 34 01 	lds	r26, 0x0134
     57c:	b0 91 35 01 	lds	r27, 0x0135
		amb = MLX_5c.readAmbientTempC();
		sprintf(str, "T%d,%0.1f,%0.1f,%i\r\n", 3, obj, amb, (int)sonic.Distance);
		Serial.send(str);
		Serial.sendln();
		
		while((millis()-start_time) <= 250);
     580:	8c 19       	sub	r24, r12
     582:	9d 09       	sbc	r25, r13
     584:	ae 09       	sbc	r26, r14
     586:	bf 09       	sbc	r27, r15
     588:	8b 3f       	cpi	r24, 0xFB	; 251
     58a:	91 05       	cpc	r25, r1
     58c:	a1 05       	cpc	r26, r1
     58e:	b1 05       	cpc	r27, r1
     590:	78 f3       	brcs	.-34     	; 0x570 <main+0x218>
     592:	3a cf       	rjmp	.-396    	; 0x408 <main+0xb0>

00000594 <_GLOBAL__sub_I_MLX_5a>:
#include <string.h> 
#include "uart.h"
#include "Adafruit_MLX90614.h"
#include "HCSR04.h"

Adafruit_MLX90614 MLX_5a(0x5a);
     594:	6a e5       	ldi	r22, 0x5A	; 90
     596:	84 e5       	ldi	r24, 0x54	; 84
     598:	91 e0       	ldi	r25, 0x01	; 1
     59a:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <_ZN17Adafruit_MLX90614C1Eh>
Adafruit_MLX90614 MLX_5b(0x5b);
     59e:	6b e5       	ldi	r22, 0x5B	; 91
     5a0:	89 e4       	ldi	r24, 0x49	; 73
     5a2:	91 e0       	ldi	r25, 0x01	; 1
     5a4:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <_ZN17Adafruit_MLX90614C1Eh>
Adafruit_MLX90614 MLX_5c(0x5c);
     5a8:	6c e5       	ldi	r22, 0x5C	; 92
     5aa:	8e e3       	ldi	r24, 0x3E	; 62
     5ac:	91 e0       	ldi	r25, 0x01	; 1
     5ae:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <_ZN17Adafruit_MLX90614C1Eh>
     5b2:	08 95       	ret

000005b4 <i2c_init>:
 Initialization of the I2C bus interface. Need to be called only once
*************************************************************************/
void i2c_init(void)
{
  /* initialize TWI clock: 100 kHz clock, TWPS = 0 => prescaler = 1 */
  DDRC = 0;
     5b4:	17 b8       	out	0x07, r1	; 7
  PORTC = (1 << PORTC4) | (1 << PORTC5);//enable pull up
     5b6:	80 e3       	ldi	r24, 0x30	; 48
     5b8:	88 b9       	out	0x08, r24	; 8
  TWSR = 0;                         /* no prescaler */
     5ba:	10 92 b9 00 	sts	0x00B9, r1
  TWBR = ((F_CPU/SCL_CLOCK)-16)/2;  /* must be > 10 for stable operation */
     5be:	88 e4       	ldi	r24, 0x48	; 72
     5c0:	80 93 b8 00 	sts	0x00B8, r24
     5c4:	08 95       	ret

000005c6 <i2c_start>:
unsigned char i2c_start(unsigned char address)
{
    uint8_t   twst;

	// send START condition
	TWCR = (1<<TWINT) | (1<<TWSTA) | (1<<TWEN);
     5c6:	94 ea       	ldi	r25, 0xA4	; 164
     5c8:	90 93 bc 00 	sts	0x00BC, r25

	// wait until transmission completed
	while(!(TWCR & (1<<TWINT)));
     5cc:	ec eb       	ldi	r30, 0xBC	; 188
     5ce:	f0 e0       	ldi	r31, 0x00	; 0
     5d0:	90 81       	ld	r25, Z
     5d2:	99 23       	and	r25, r25
     5d4:	ec f7       	brge	.-6      	; 0x5d0 <i2c_start+0xa>

	// check value of TWI Status Register. Mask prescaler bits.
	twst = TW_STATUS & 0xF8;
     5d6:	90 91 b9 00 	lds	r25, 0x00B9
     5da:	98 7f       	andi	r25, 0xF8	; 248
	if ( (twst != TW_START) && (twst != TW_REP_START)) return 1;
     5dc:	98 30       	cpi	r25, 0x08	; 8
     5de:	11 f0       	breq	.+4      	; 0x5e4 <i2c_start+0x1e>
     5e0:	90 31       	cpi	r25, 0x10	; 16
     5e2:	a1 f4       	brne	.+40     	; 0x60c <i2c_start+0x46>

	// send device address
	TWDR = address;
     5e4:	80 93 bb 00 	sts	0x00BB, r24
	TWCR = (1<<TWINT) | (1<<TWEN);
     5e8:	84 e8       	ldi	r24, 0x84	; 132
     5ea:	80 93 bc 00 	sts	0x00BC, r24

	// wail until transmission completed and ACK/NACK has been received
	while(!(TWCR & (1<<TWINT)));
     5ee:	ec eb       	ldi	r30, 0xBC	; 188
     5f0:	f0 e0       	ldi	r31, 0x00	; 0
     5f2:	80 81       	ld	r24, Z
     5f4:	88 23       	and	r24, r24
     5f6:	ec f7       	brge	.-6      	; 0x5f2 <i2c_start+0x2c>

	// check value of TWI Status Register. Mask prescaler bits.
	twst = TW_STATUS & 0xF8;
     5f8:	90 91 b9 00 	lds	r25, 0x00B9
     5fc:	98 7f       	andi	r25, 0xF8	; 248
	if ( (twst != TW_MT_SLA_ACK) && (twst != TW_MR_SLA_ACK) ) return 1;
     5fe:	98 31       	cpi	r25, 0x18	; 24
     600:	39 f0       	breq	.+14     	; 0x610 <i2c_start+0x4a>
     602:	81 e0       	ldi	r24, 0x01	; 1
     604:	90 34       	cpi	r25, 0x40	; 64
     606:	29 f4       	brne	.+10     	; 0x612 <i2c_start+0x4c>
     608:	80 e0       	ldi	r24, 0x00	; 0
     60a:	08 95       	ret
	// wait until transmission completed
	while(!(TWCR & (1<<TWINT)));

	// check value of TWI Status Register. Mask prescaler bits.
	twst = TW_STATUS & 0xF8;
	if ( (twst != TW_START) && (twst != TW_REP_START)) return 1;
     60c:	81 e0       	ldi	r24, 0x01	; 1
     60e:	08 95       	ret

	// check value of TWI Status Register. Mask prescaler bits.
	twst = TW_STATUS & 0xF8;
	if ( (twst != TW_MT_SLA_ACK) && (twst != TW_MR_SLA_ACK) ) return 1;

	return 0;
     610:	80 e0       	ldi	r24, 0x00	; 0

}/* i2c_start */
     612:	08 95       	ret

00000614 <i2c_stop>:
 Terminates the data transfer and releases the I2C bus
*************************************************************************/
void i2c_stop(void)
{
    /* send stop condition */
	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWSTO);
     614:	84 e9       	ldi	r24, 0x94	; 148
     616:	80 93 bc 00 	sts	0x00BC, r24
     61a:	08 95       	ret

0000061c <i2c_write>:
unsigned char i2c_write( unsigned char data )
{	
    uint8_t   twst;
    
	// send data to the previously addressed device
	TWDR = data;
     61c:	80 93 bb 00 	sts	0x00BB, r24
	TWCR = (1<<TWINT) | (1<<TWEN);
     620:	84 e8       	ldi	r24, 0x84	; 132
     622:	80 93 bc 00 	sts	0x00BC, r24

	// wait until transmission completed
	while(!(TWCR & (1<<TWINT)));
     626:	ec eb       	ldi	r30, 0xBC	; 188
     628:	f0 e0       	ldi	r31, 0x00	; 0
     62a:	80 81       	ld	r24, Z
     62c:	88 23       	and	r24, r24
     62e:	ec f7       	brge	.-6      	; 0x62a <i2c_write+0xe>

	// check value of TWI Status Register. Mask prescaler bits
	twst = TW_STATUS & 0xF8;
     630:	90 91 b9 00 	lds	r25, 0x00B9
     634:	98 7f       	andi	r25, 0xF8	; 248
	if( twst != TW_MT_DATA_ACK) return 1;
     636:	81 e0       	ldi	r24, 0x01	; 1
     638:	98 32       	cpi	r25, 0x28	; 40
     63a:	09 f4       	brne	.+2      	; 0x63e <i2c_write+0x22>
     63c:	80 e0       	ldi	r24, 0x00	; 0
	return 0;

}/* i2c_write */
     63e:	08 95       	ret

00000640 <i2c_readAck>:
 
 Return:  byte read from I2C device
*************************************************************************/
unsigned char i2c_readAck(void)
{
	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWEA);
     640:	84 ec       	ldi	r24, 0xC4	; 196
     642:	80 93 bc 00 	sts	0x00BC, r24
	while(!(TWCR & (1<<TWINT)));    
     646:	ec eb       	ldi	r30, 0xBC	; 188
     648:	f0 e0       	ldi	r31, 0x00	; 0
     64a:	80 81       	ld	r24, Z
     64c:	88 23       	and	r24, r24
     64e:	ec f7       	brge	.-6      	; 0x64a <i2c_readAck+0xa>
    return TWDR;
     650:	80 91 bb 00 	lds	r24, 0x00BB
}/* i2c_readAck */
     654:	08 95       	ret

00000656 <i2c_readNak>:
 
 Return:  byte read from I2C device
*************************************************************************/
unsigned char i2c_readNak(void)
{
	TWCR = (1<<TWINT) | (1<<TWEN);
     656:	84 e8       	ldi	r24, 0x84	; 132
     658:	80 93 bc 00 	sts	0x00BC, r24
	while(!(TWCR & (1<<TWINT)));
     65c:	ec eb       	ldi	r30, 0xBC	; 188
     65e:	f0 e0       	ldi	r31, 0x00	; 0
     660:	80 81       	ld	r24, Z
     662:	88 23       	and	r24, r24
     664:	ec f7       	brge	.-6      	; 0x660 <i2c_readNak+0xa>
    return TWDR;
     666:	80 91 bb 00 	lds	r24, 0x00BB
}/* i2c_readNak */
     66a:	08 95       	ret

0000066c <_ZN5USART4initEi>:
USART Serial; //Initialize new instance of the serial class
//Setup Baud rate in header file
//set to 8 bits, no stop bit, no parity

/*********************************************************************/
void USART::init(int BAUDRATE){
     66c:	0f 93       	push	r16
     66e:	1f 93       	push	r17
	UBRR0H = (uint8_t)(BAUD_PRESCALLER>>8);
     670:	8b 01       	movw	r16, r22
     672:	77 0f       	add	r23, r23
     674:	22 0b       	sbc	r18, r18
     676:	33 0b       	sbc	r19, r19
     678:	d9 01       	movw	r26, r18
     67a:	c8 01       	movw	r24, r16
     67c:	80 58       	subi	r24, 0x80	; 128
     67e:	9b 47       	sbci	r25, 0x7B	; 123
     680:	a1 4e       	sbci	r26, 0xE1	; 225
     682:	bf 4f       	sbci	r27, 0xFF	; 255
     684:	88 0f       	add	r24, r24
     686:	99 1f       	adc	r25, r25
     688:	aa 1f       	adc	r26, r26
     68a:	bb 1f       	adc	r27, r27
     68c:	88 0f       	add	r24, r24
     68e:	99 1f       	adc	r25, r25
     690:	aa 1f       	adc	r26, r26
     692:	bb 1f       	adc	r27, r27
     694:	bc 01       	movw	r22, r24
     696:	cd 01       	movw	r24, r26
     698:	66 0f       	add	r22, r22
     69a:	77 1f       	adc	r23, r23
     69c:	88 1f       	adc	r24, r24
     69e:	99 1f       	adc	r25, r25
     6a0:	00 0f       	add	r16, r16
     6a2:	11 1f       	adc	r17, r17
     6a4:	22 1f       	adc	r18, r18
     6a6:	33 1f       	adc	r19, r19
     6a8:	00 0f       	add	r16, r16
     6aa:	11 1f       	adc	r17, r17
     6ac:	22 1f       	adc	r18, r18
     6ae:	33 1f       	adc	r19, r19
     6b0:	a9 01       	movw	r20, r18
     6b2:	98 01       	movw	r18, r16
     6b4:	22 0f       	add	r18, r18
     6b6:	33 1f       	adc	r19, r19
     6b8:	44 1f       	adc	r20, r20
     6ba:	55 1f       	adc	r21, r21
     6bc:	22 0f       	add	r18, r18
     6be:	33 1f       	adc	r19, r19
     6c0:	44 1f       	adc	r20, r20
     6c2:	55 1f       	adc	r21, r21
     6c4:	0e 94 b7 08 	call	0x116e	; 0x116e <__udivmodsi4>
     6c8:	da 01       	movw	r26, r20
     6ca:	c9 01       	movw	r24, r18
     6cc:	01 97       	sbiw	r24, 0x01	; 1
     6ce:	a1 09       	sbc	r26, r1
     6d0:	b1 09       	sbc	r27, r1
     6d2:	89 2f       	mov	r24, r25
     6d4:	9a 2f       	mov	r25, r26
     6d6:	ab 2f       	mov	r26, r27
     6d8:	bb 27       	eor	r27, r27
     6da:	80 93 c5 00 	sts	0x00C5, r24
	UBRR0L = (uint8_t)(BAUD_PRESCALLER);
     6de:	21 50       	subi	r18, 0x01	; 1
     6e0:	20 93 c4 00 	sts	0x00C4, r18
	UCSR0B = (1<<RXEN0)|(1<<TXEN0);
     6e4:	e1 ec       	ldi	r30, 0xC1	; 193
     6e6:	f0 e0       	ldi	r31, 0x00	; 0
     6e8:	88 e1       	ldi	r24, 0x18	; 24
     6ea:	80 83       	st	Z, r24
	UCSR0C = (1<<UCSZ00)|(1<<UCSZ01);
     6ec:	86 e0       	ldi	r24, 0x06	; 6
     6ee:	80 93 c2 00 	sts	0x00C2, r24

	UCSR0B |= (1 << RXCIE0); // Enable the USART Receive Complete interrupt (USART_RXC)
     6f2:	80 81       	ld	r24, Z
     6f4:	80 68       	ori	r24, 0x80	; 128
     6f6:	80 83       	st	Z, r24
	sei();
     6f8:	78 94       	sei
}
     6fa:	1f 91       	pop	r17
     6fc:	0f 91       	pop	r16
     6fe:	08 95       	ret

00000700 <_ZN5USART4sendEh>:
 return UDR0;// read buffer
}
/*********************************************************************/
void USART::send(uint8_t data){

	while(!(UCSR0A & (1<<UDRE0))); //wait until buffer is empty
     700:	e0 ec       	ldi	r30, 0xC0	; 192
     702:	f0 e0       	ldi	r31, 0x00	; 0
     704:	80 81       	ld	r24, Z
     706:	85 ff       	sbrs	r24, 5
     708:	fd cf       	rjmp	.-6      	; 0x704 <_ZN5USART4sendEh+0x4>
	UDR0 = data; //Load data into buffer
     70a:	60 93 c6 00 	sts	0x00C6, r22
     70e:	08 95       	ret

00000710 <_ZN5USART4sendEPKc>:
}
/*********************************************************************/
//send one char at a time
void USART::send(const char* StringPtr)
{
     710:	0f 93       	push	r16
     712:	1f 93       	push	r17
     714:	cf 93       	push	r28
     716:	df 93       	push	r29
     718:	eb 01       	movw	r28, r22
	//st = millis();
	while(*StringPtr != 0x00)
     71a:	68 81       	ld	r22, Y
     71c:	66 23       	and	r22, r22
     71e:	41 f0       	breq	.+16     	; 0x730 <_ZN5USART4sendEPKc+0x20>
     720:	8c 01       	movw	r16, r24
     722:	21 96       	adiw	r28, 0x01	; 1
		void init(int BAUDRATE = 9600); 
		bool available(void);
		unsigned char read(void);
		bool flush(void);
		void send(uint8_t data);
		void send(char data) {send((uint8_t)data); };
     724:	c8 01       	movw	r24, r16
     726:	0e 94 80 03 	call	0x700	; 0x700 <_ZN5USART4sendEh>
     72a:	69 91       	ld	r22, Y+
     72c:	61 11       	cpse	r22, r1
     72e:	fa cf       	rjmp	.-12     	; 0x724 <_ZN5USART4sendEPKc+0x14>
	{
		send(*StringPtr++);
	}
	//ft = millis();
}
     730:	df 91       	pop	r29
     732:	cf 91       	pop	r28
     734:	1f 91       	pop	r17
     736:	0f 91       	pop	r16
     738:	08 95       	ret

0000073a <__subsf3>:
     73a:	50 58       	subi	r21, 0x80	; 128

0000073c <__addsf3>:
     73c:	bb 27       	eor	r27, r27
     73e:	aa 27       	eor	r26, r26
     740:	0e 94 b5 03 	call	0x76a	; 0x76a <__addsf3x>
     744:	0c 94 94 04 	jmp	0x928	; 0x928 <__fp_round>
     748:	0e 94 86 04 	call	0x90c	; 0x90c <__fp_pscA>
     74c:	38 f0       	brcs	.+14     	; 0x75c <__addsf3+0x20>
     74e:	0e 94 8d 04 	call	0x91a	; 0x91a <__fp_pscB>
     752:	20 f0       	brcs	.+8      	; 0x75c <__addsf3+0x20>
     754:	39 f4       	brne	.+14     	; 0x764 <__addsf3+0x28>
     756:	9f 3f       	cpi	r25, 0xFF	; 255
     758:	19 f4       	brne	.+6      	; 0x760 <__addsf3+0x24>
     75a:	26 f4       	brtc	.+8      	; 0x764 <__addsf3+0x28>
     75c:	0c 94 83 04 	jmp	0x906	; 0x906 <__fp_nan>
     760:	0e f4       	brtc	.+2      	; 0x764 <__addsf3+0x28>
     762:	e0 95       	com	r30
     764:	e7 fb       	bst	r30, 7
     766:	0c 94 7d 04 	jmp	0x8fa	; 0x8fa <__fp_inf>

0000076a <__addsf3x>:
     76a:	e9 2f       	mov	r30, r25
     76c:	0e 94 a5 04 	call	0x94a	; 0x94a <__fp_split3>
     770:	58 f3       	brcs	.-42     	; 0x748 <__addsf3+0xc>
     772:	ba 17       	cp	r27, r26
     774:	62 07       	cpc	r22, r18
     776:	73 07       	cpc	r23, r19
     778:	84 07       	cpc	r24, r20
     77a:	95 07       	cpc	r25, r21
     77c:	20 f0       	brcs	.+8      	; 0x786 <__addsf3x+0x1c>
     77e:	79 f4       	brne	.+30     	; 0x79e <__addsf3x+0x34>
     780:	a6 f5       	brtc	.+104    	; 0x7ea <__addsf3x+0x80>
     782:	0c 94 c7 04 	jmp	0x98e	; 0x98e <__fp_zero>
     786:	0e f4       	brtc	.+2      	; 0x78a <__addsf3x+0x20>
     788:	e0 95       	com	r30
     78a:	0b 2e       	mov	r0, r27
     78c:	ba 2f       	mov	r27, r26
     78e:	a0 2d       	mov	r26, r0
     790:	0b 01       	movw	r0, r22
     792:	b9 01       	movw	r22, r18
     794:	90 01       	movw	r18, r0
     796:	0c 01       	movw	r0, r24
     798:	ca 01       	movw	r24, r20
     79a:	a0 01       	movw	r20, r0
     79c:	11 24       	eor	r1, r1
     79e:	ff 27       	eor	r31, r31
     7a0:	59 1b       	sub	r21, r25
     7a2:	99 f0       	breq	.+38     	; 0x7ca <__addsf3x+0x60>
     7a4:	59 3f       	cpi	r21, 0xF9	; 249
     7a6:	50 f4       	brcc	.+20     	; 0x7bc <__addsf3x+0x52>
     7a8:	50 3e       	cpi	r21, 0xE0	; 224
     7aa:	68 f1       	brcs	.+90     	; 0x806 <__addsf3x+0x9c>
     7ac:	1a 16       	cp	r1, r26
     7ae:	f0 40       	sbci	r31, 0x00	; 0
     7b0:	a2 2f       	mov	r26, r18
     7b2:	23 2f       	mov	r18, r19
     7b4:	34 2f       	mov	r19, r20
     7b6:	44 27       	eor	r20, r20
     7b8:	58 5f       	subi	r21, 0xF8	; 248
     7ba:	f3 cf       	rjmp	.-26     	; 0x7a2 <__addsf3x+0x38>
     7bc:	46 95       	lsr	r20
     7be:	37 95       	ror	r19
     7c0:	27 95       	ror	r18
     7c2:	a7 95       	ror	r26
     7c4:	f0 40       	sbci	r31, 0x00	; 0
     7c6:	53 95       	inc	r21
     7c8:	c9 f7       	brne	.-14     	; 0x7bc <__addsf3x+0x52>
     7ca:	7e f4       	brtc	.+30     	; 0x7ea <__addsf3x+0x80>
     7cc:	1f 16       	cp	r1, r31
     7ce:	ba 0b       	sbc	r27, r26
     7d0:	62 0b       	sbc	r22, r18
     7d2:	73 0b       	sbc	r23, r19
     7d4:	84 0b       	sbc	r24, r20
     7d6:	ba f0       	brmi	.+46     	; 0x806 <__addsf3x+0x9c>
     7d8:	91 50       	subi	r25, 0x01	; 1
     7da:	a1 f0       	breq	.+40     	; 0x804 <__addsf3x+0x9a>
     7dc:	ff 0f       	add	r31, r31
     7de:	bb 1f       	adc	r27, r27
     7e0:	66 1f       	adc	r22, r22
     7e2:	77 1f       	adc	r23, r23
     7e4:	88 1f       	adc	r24, r24
     7e6:	c2 f7       	brpl	.-16     	; 0x7d8 <__addsf3x+0x6e>
     7e8:	0e c0       	rjmp	.+28     	; 0x806 <__addsf3x+0x9c>
     7ea:	ba 0f       	add	r27, r26
     7ec:	62 1f       	adc	r22, r18
     7ee:	73 1f       	adc	r23, r19
     7f0:	84 1f       	adc	r24, r20
     7f2:	48 f4       	brcc	.+18     	; 0x806 <__addsf3x+0x9c>
     7f4:	87 95       	ror	r24
     7f6:	77 95       	ror	r23
     7f8:	67 95       	ror	r22
     7fa:	b7 95       	ror	r27
     7fc:	f7 95       	ror	r31
     7fe:	9e 3f       	cpi	r25, 0xFE	; 254
     800:	08 f0       	brcs	.+2      	; 0x804 <__addsf3x+0x9a>
     802:	b0 cf       	rjmp	.-160    	; 0x764 <__addsf3+0x28>
     804:	93 95       	inc	r25
     806:	88 0f       	add	r24, r24
     808:	08 f0       	brcs	.+2      	; 0x80c <__addsf3x+0xa2>
     80a:	99 27       	eor	r25, r25
     80c:	ee 0f       	add	r30, r30
     80e:	97 95       	ror	r25
     810:	87 95       	ror	r24
     812:	08 95       	ret

00000814 <__fixsfsi>:
     814:	0e 94 11 04 	call	0x822	; 0x822 <__fixunssfsi>
     818:	68 94       	set
     81a:	b1 11       	cpse	r27, r1
     81c:	0c 94 c8 04 	jmp	0x990	; 0x990 <__fp_szero>
     820:	08 95       	ret

00000822 <__fixunssfsi>:
     822:	0e 94 ad 04 	call	0x95a	; 0x95a <__fp_splitA>
     826:	88 f0       	brcs	.+34     	; 0x84a <__fixunssfsi+0x28>
     828:	9f 57       	subi	r25, 0x7F	; 127
     82a:	98 f0       	brcs	.+38     	; 0x852 <__fixunssfsi+0x30>
     82c:	b9 2f       	mov	r27, r25
     82e:	99 27       	eor	r25, r25
     830:	b7 51       	subi	r27, 0x17	; 23
     832:	b0 f0       	brcs	.+44     	; 0x860 <__fixunssfsi+0x3e>
     834:	e1 f0       	breq	.+56     	; 0x86e <__fixunssfsi+0x4c>
     836:	66 0f       	add	r22, r22
     838:	77 1f       	adc	r23, r23
     83a:	88 1f       	adc	r24, r24
     83c:	99 1f       	adc	r25, r25
     83e:	1a f0       	brmi	.+6      	; 0x846 <__fixunssfsi+0x24>
     840:	ba 95       	dec	r27
     842:	c9 f7       	brne	.-14     	; 0x836 <__fixunssfsi+0x14>
     844:	14 c0       	rjmp	.+40     	; 0x86e <__fixunssfsi+0x4c>
     846:	b1 30       	cpi	r27, 0x01	; 1
     848:	91 f0       	breq	.+36     	; 0x86e <__fixunssfsi+0x4c>
     84a:	0e 94 c7 04 	call	0x98e	; 0x98e <__fp_zero>
     84e:	b1 e0       	ldi	r27, 0x01	; 1
     850:	08 95       	ret
     852:	0c 94 c7 04 	jmp	0x98e	; 0x98e <__fp_zero>
     856:	67 2f       	mov	r22, r23
     858:	78 2f       	mov	r23, r24
     85a:	88 27       	eor	r24, r24
     85c:	b8 5f       	subi	r27, 0xF8	; 248
     85e:	39 f0       	breq	.+14     	; 0x86e <__fixunssfsi+0x4c>
     860:	b9 3f       	cpi	r27, 0xF9	; 249
     862:	cc f3       	brlt	.-14     	; 0x856 <__fixunssfsi+0x34>
     864:	86 95       	lsr	r24
     866:	77 95       	ror	r23
     868:	67 95       	ror	r22
     86a:	b3 95       	inc	r27
     86c:	d9 f7       	brne	.-10     	; 0x864 <__fixunssfsi+0x42>
     86e:	3e f4       	brtc	.+14     	; 0x87e <__fixunssfsi+0x5c>
     870:	90 95       	com	r25
     872:	80 95       	com	r24
     874:	70 95       	com	r23
     876:	61 95       	neg	r22
     878:	7f 4f       	sbci	r23, 0xFF	; 255
     87a:	8f 4f       	sbci	r24, 0xFF	; 255
     87c:	9f 4f       	sbci	r25, 0xFF	; 255
     87e:	08 95       	ret

00000880 <__floatunsisf>:
     880:	e8 94       	clt
     882:	09 c0       	rjmp	.+18     	; 0x896 <__floatsisf+0x12>

00000884 <__floatsisf>:
     884:	97 fb       	bst	r25, 7
     886:	3e f4       	brtc	.+14     	; 0x896 <__floatsisf+0x12>
     888:	90 95       	com	r25
     88a:	80 95       	com	r24
     88c:	70 95       	com	r23
     88e:	61 95       	neg	r22
     890:	7f 4f       	sbci	r23, 0xFF	; 255
     892:	8f 4f       	sbci	r24, 0xFF	; 255
     894:	9f 4f       	sbci	r25, 0xFF	; 255
     896:	99 23       	and	r25, r25
     898:	a9 f0       	breq	.+42     	; 0x8c4 <__floatsisf+0x40>
     89a:	f9 2f       	mov	r31, r25
     89c:	96 e9       	ldi	r25, 0x96	; 150
     89e:	bb 27       	eor	r27, r27
     8a0:	93 95       	inc	r25
     8a2:	f6 95       	lsr	r31
     8a4:	87 95       	ror	r24
     8a6:	77 95       	ror	r23
     8a8:	67 95       	ror	r22
     8aa:	b7 95       	ror	r27
     8ac:	f1 11       	cpse	r31, r1
     8ae:	f8 cf       	rjmp	.-16     	; 0x8a0 <__floatsisf+0x1c>
     8b0:	fa f4       	brpl	.+62     	; 0x8f0 <__floatsisf+0x6c>
     8b2:	bb 0f       	add	r27, r27
     8b4:	11 f4       	brne	.+4      	; 0x8ba <__floatsisf+0x36>
     8b6:	60 ff       	sbrs	r22, 0
     8b8:	1b c0       	rjmp	.+54     	; 0x8f0 <__floatsisf+0x6c>
     8ba:	6f 5f       	subi	r22, 0xFF	; 255
     8bc:	7f 4f       	sbci	r23, 0xFF	; 255
     8be:	8f 4f       	sbci	r24, 0xFF	; 255
     8c0:	9f 4f       	sbci	r25, 0xFF	; 255
     8c2:	16 c0       	rjmp	.+44     	; 0x8f0 <__floatsisf+0x6c>
     8c4:	88 23       	and	r24, r24
     8c6:	11 f0       	breq	.+4      	; 0x8cc <__floatsisf+0x48>
     8c8:	96 e9       	ldi	r25, 0x96	; 150
     8ca:	11 c0       	rjmp	.+34     	; 0x8ee <__floatsisf+0x6a>
     8cc:	77 23       	and	r23, r23
     8ce:	21 f0       	breq	.+8      	; 0x8d8 <__floatsisf+0x54>
     8d0:	9e e8       	ldi	r25, 0x8E	; 142
     8d2:	87 2f       	mov	r24, r23
     8d4:	76 2f       	mov	r23, r22
     8d6:	05 c0       	rjmp	.+10     	; 0x8e2 <__floatsisf+0x5e>
     8d8:	66 23       	and	r22, r22
     8da:	71 f0       	breq	.+28     	; 0x8f8 <__floatsisf+0x74>
     8dc:	96 e8       	ldi	r25, 0x86	; 134
     8de:	86 2f       	mov	r24, r22
     8e0:	70 e0       	ldi	r23, 0x00	; 0
     8e2:	60 e0       	ldi	r22, 0x00	; 0
     8e4:	2a f0       	brmi	.+10     	; 0x8f0 <__floatsisf+0x6c>
     8e6:	9a 95       	dec	r25
     8e8:	66 0f       	add	r22, r22
     8ea:	77 1f       	adc	r23, r23
     8ec:	88 1f       	adc	r24, r24
     8ee:	da f7       	brpl	.-10     	; 0x8e6 <__floatsisf+0x62>
     8f0:	88 0f       	add	r24, r24
     8f2:	96 95       	lsr	r25
     8f4:	87 95       	ror	r24
     8f6:	97 f9       	bld	r25, 7
     8f8:	08 95       	ret

000008fa <__fp_inf>:
     8fa:	97 f9       	bld	r25, 7
     8fc:	9f 67       	ori	r25, 0x7F	; 127
     8fe:	80 e8       	ldi	r24, 0x80	; 128
     900:	70 e0       	ldi	r23, 0x00	; 0
     902:	60 e0       	ldi	r22, 0x00	; 0
     904:	08 95       	ret

00000906 <__fp_nan>:
     906:	9f ef       	ldi	r25, 0xFF	; 255
     908:	80 ec       	ldi	r24, 0xC0	; 192
     90a:	08 95       	ret

0000090c <__fp_pscA>:
     90c:	00 24       	eor	r0, r0
     90e:	0a 94       	dec	r0
     910:	16 16       	cp	r1, r22
     912:	17 06       	cpc	r1, r23
     914:	18 06       	cpc	r1, r24
     916:	09 06       	cpc	r0, r25
     918:	08 95       	ret

0000091a <__fp_pscB>:
     91a:	00 24       	eor	r0, r0
     91c:	0a 94       	dec	r0
     91e:	12 16       	cp	r1, r18
     920:	13 06       	cpc	r1, r19
     922:	14 06       	cpc	r1, r20
     924:	05 06       	cpc	r0, r21
     926:	08 95       	ret

00000928 <__fp_round>:
     928:	09 2e       	mov	r0, r25
     92a:	03 94       	inc	r0
     92c:	00 0c       	add	r0, r0
     92e:	11 f4       	brne	.+4      	; 0x934 <__fp_round+0xc>
     930:	88 23       	and	r24, r24
     932:	52 f0       	brmi	.+20     	; 0x948 <__fp_round+0x20>
     934:	bb 0f       	add	r27, r27
     936:	40 f4       	brcc	.+16     	; 0x948 <__fp_round+0x20>
     938:	bf 2b       	or	r27, r31
     93a:	11 f4       	brne	.+4      	; 0x940 <__fp_round+0x18>
     93c:	60 ff       	sbrs	r22, 0
     93e:	04 c0       	rjmp	.+8      	; 0x948 <__fp_round+0x20>
     940:	6f 5f       	subi	r22, 0xFF	; 255
     942:	7f 4f       	sbci	r23, 0xFF	; 255
     944:	8f 4f       	sbci	r24, 0xFF	; 255
     946:	9f 4f       	sbci	r25, 0xFF	; 255
     948:	08 95       	ret

0000094a <__fp_split3>:
     94a:	57 fd       	sbrc	r21, 7
     94c:	90 58       	subi	r25, 0x80	; 128
     94e:	44 0f       	add	r20, r20
     950:	55 1f       	adc	r21, r21
     952:	59 f0       	breq	.+22     	; 0x96a <__fp_splitA+0x10>
     954:	5f 3f       	cpi	r21, 0xFF	; 255
     956:	71 f0       	breq	.+28     	; 0x974 <__fp_splitA+0x1a>
     958:	47 95       	ror	r20

0000095a <__fp_splitA>:
     95a:	88 0f       	add	r24, r24
     95c:	97 fb       	bst	r25, 7
     95e:	99 1f       	adc	r25, r25
     960:	61 f0       	breq	.+24     	; 0x97a <__fp_splitA+0x20>
     962:	9f 3f       	cpi	r25, 0xFF	; 255
     964:	79 f0       	breq	.+30     	; 0x984 <__fp_splitA+0x2a>
     966:	87 95       	ror	r24
     968:	08 95       	ret
     96a:	12 16       	cp	r1, r18
     96c:	13 06       	cpc	r1, r19
     96e:	14 06       	cpc	r1, r20
     970:	55 1f       	adc	r21, r21
     972:	f2 cf       	rjmp	.-28     	; 0x958 <__fp_split3+0xe>
     974:	46 95       	lsr	r20
     976:	f1 df       	rcall	.-30     	; 0x95a <__fp_splitA>
     978:	08 c0       	rjmp	.+16     	; 0x98a <__fp_splitA+0x30>
     97a:	16 16       	cp	r1, r22
     97c:	17 06       	cpc	r1, r23
     97e:	18 06       	cpc	r1, r24
     980:	99 1f       	adc	r25, r25
     982:	f1 cf       	rjmp	.-30     	; 0x966 <__fp_splitA+0xc>
     984:	86 95       	lsr	r24
     986:	71 05       	cpc	r23, r1
     988:	61 05       	cpc	r22, r1
     98a:	08 94       	sec
     98c:	08 95       	ret

0000098e <__fp_zero>:
     98e:	e8 94       	clt

00000990 <__fp_szero>:
     990:	bb 27       	eor	r27, r27
     992:	66 27       	eor	r22, r22
     994:	77 27       	eor	r23, r23
     996:	cb 01       	movw	r24, r22
     998:	97 f9       	bld	r25, 7
     99a:	08 95       	ret

0000099c <__mulsf3>:
     99c:	0e 94 e1 04 	call	0x9c2	; 0x9c2 <__mulsf3x>
     9a0:	0c 94 94 04 	jmp	0x928	; 0x928 <__fp_round>
     9a4:	0e 94 86 04 	call	0x90c	; 0x90c <__fp_pscA>
     9a8:	38 f0       	brcs	.+14     	; 0x9b8 <__mulsf3+0x1c>
     9aa:	0e 94 8d 04 	call	0x91a	; 0x91a <__fp_pscB>
     9ae:	20 f0       	brcs	.+8      	; 0x9b8 <__mulsf3+0x1c>
     9b0:	95 23       	and	r25, r21
     9b2:	11 f0       	breq	.+4      	; 0x9b8 <__mulsf3+0x1c>
     9b4:	0c 94 7d 04 	jmp	0x8fa	; 0x8fa <__fp_inf>
     9b8:	0c 94 83 04 	jmp	0x906	; 0x906 <__fp_nan>
     9bc:	11 24       	eor	r1, r1
     9be:	0c 94 c8 04 	jmp	0x990	; 0x990 <__fp_szero>

000009c2 <__mulsf3x>:
     9c2:	0e 94 a5 04 	call	0x94a	; 0x94a <__fp_split3>
     9c6:	70 f3       	brcs	.-36     	; 0x9a4 <__mulsf3+0x8>

000009c8 <__mulsf3_pse>:
     9c8:	95 9f       	mul	r25, r21
     9ca:	c1 f3       	breq	.-16     	; 0x9bc <__mulsf3+0x20>
     9cc:	95 0f       	add	r25, r21
     9ce:	50 e0       	ldi	r21, 0x00	; 0
     9d0:	55 1f       	adc	r21, r21
     9d2:	62 9f       	mul	r22, r18
     9d4:	f0 01       	movw	r30, r0
     9d6:	72 9f       	mul	r23, r18
     9d8:	bb 27       	eor	r27, r27
     9da:	f0 0d       	add	r31, r0
     9dc:	b1 1d       	adc	r27, r1
     9de:	63 9f       	mul	r22, r19
     9e0:	aa 27       	eor	r26, r26
     9e2:	f0 0d       	add	r31, r0
     9e4:	b1 1d       	adc	r27, r1
     9e6:	aa 1f       	adc	r26, r26
     9e8:	64 9f       	mul	r22, r20
     9ea:	66 27       	eor	r22, r22
     9ec:	b0 0d       	add	r27, r0
     9ee:	a1 1d       	adc	r26, r1
     9f0:	66 1f       	adc	r22, r22
     9f2:	82 9f       	mul	r24, r18
     9f4:	22 27       	eor	r18, r18
     9f6:	b0 0d       	add	r27, r0
     9f8:	a1 1d       	adc	r26, r1
     9fa:	62 1f       	adc	r22, r18
     9fc:	73 9f       	mul	r23, r19
     9fe:	b0 0d       	add	r27, r0
     a00:	a1 1d       	adc	r26, r1
     a02:	62 1f       	adc	r22, r18
     a04:	83 9f       	mul	r24, r19
     a06:	a0 0d       	add	r26, r0
     a08:	61 1d       	adc	r22, r1
     a0a:	22 1f       	adc	r18, r18
     a0c:	74 9f       	mul	r23, r20
     a0e:	33 27       	eor	r19, r19
     a10:	a0 0d       	add	r26, r0
     a12:	61 1d       	adc	r22, r1
     a14:	23 1f       	adc	r18, r19
     a16:	84 9f       	mul	r24, r20
     a18:	60 0d       	add	r22, r0
     a1a:	21 1d       	adc	r18, r1
     a1c:	82 2f       	mov	r24, r18
     a1e:	76 2f       	mov	r23, r22
     a20:	6a 2f       	mov	r22, r26
     a22:	11 24       	eor	r1, r1
     a24:	9f 57       	subi	r25, 0x7F	; 127
     a26:	50 40       	sbci	r21, 0x00	; 0
     a28:	9a f0       	brmi	.+38     	; 0xa50 <__mulsf3_pse+0x88>
     a2a:	f1 f0       	breq	.+60     	; 0xa68 <__mulsf3_pse+0xa0>
     a2c:	88 23       	and	r24, r24
     a2e:	4a f0       	brmi	.+18     	; 0xa42 <__mulsf3_pse+0x7a>
     a30:	ee 0f       	add	r30, r30
     a32:	ff 1f       	adc	r31, r31
     a34:	bb 1f       	adc	r27, r27
     a36:	66 1f       	adc	r22, r22
     a38:	77 1f       	adc	r23, r23
     a3a:	88 1f       	adc	r24, r24
     a3c:	91 50       	subi	r25, 0x01	; 1
     a3e:	50 40       	sbci	r21, 0x00	; 0
     a40:	a9 f7       	brne	.-22     	; 0xa2c <__mulsf3_pse+0x64>
     a42:	9e 3f       	cpi	r25, 0xFE	; 254
     a44:	51 05       	cpc	r21, r1
     a46:	80 f0       	brcs	.+32     	; 0xa68 <__mulsf3_pse+0xa0>
     a48:	0c 94 7d 04 	jmp	0x8fa	; 0x8fa <__fp_inf>
     a4c:	0c 94 c8 04 	jmp	0x990	; 0x990 <__fp_szero>
     a50:	5f 3f       	cpi	r21, 0xFF	; 255
     a52:	e4 f3       	brlt	.-8      	; 0xa4c <__mulsf3_pse+0x84>
     a54:	98 3e       	cpi	r25, 0xE8	; 232
     a56:	d4 f3       	brlt	.-12     	; 0xa4c <__mulsf3_pse+0x84>
     a58:	86 95       	lsr	r24
     a5a:	77 95       	ror	r23
     a5c:	67 95       	ror	r22
     a5e:	b7 95       	ror	r27
     a60:	f7 95       	ror	r31
     a62:	e7 95       	ror	r30
     a64:	9f 5f       	subi	r25, 0xFF	; 255
     a66:	c1 f7       	brne	.-16     	; 0xa58 <__mulsf3_pse+0x90>
     a68:	fe 2b       	or	r31, r30
     a6a:	88 0f       	add	r24, r24
     a6c:	91 1d       	adc	r25, r1
     a6e:	96 95       	lsr	r25
     a70:	87 95       	ror	r24
     a72:	97 f9       	bld	r25, 7
     a74:	08 95       	ret

00000a76 <vfprintf>:
     a76:	a3 e1       	ldi	r26, 0x13	; 19
     a78:	b0 e0       	ldi	r27, 0x00	; 0
     a7a:	e1 e4       	ldi	r30, 0x41	; 65
     a7c:	f5 e0       	ldi	r31, 0x05	; 5
     a7e:	0c 94 d9 08 	jmp	0x11b2	; 0x11b2 <__prologue_saves__>
     a82:	6c 01       	movw	r12, r24
     a84:	4b 01       	movw	r8, r22
     a86:	2a 01       	movw	r4, r20
     a88:	fc 01       	movw	r30, r24
     a8a:	17 82       	std	Z+7, r1	; 0x07
     a8c:	16 82       	std	Z+6, r1	; 0x06
     a8e:	83 81       	ldd	r24, Z+3	; 0x03
     a90:	81 ff       	sbrs	r24, 1
     a92:	43 c3       	rjmp	.+1670   	; 0x111a <vfprintf+0x6a4>
     a94:	ae 01       	movw	r20, r28
     a96:	4f 5f       	subi	r20, 0xFF	; 255
     a98:	5f 4f       	sbci	r21, 0xFF	; 255
     a9a:	3a 01       	movw	r6, r20
     a9c:	f6 01       	movw	r30, r12
     a9e:	93 81       	ldd	r25, Z+3	; 0x03
     aa0:	f4 01       	movw	r30, r8
     aa2:	93 fd       	sbrc	r25, 3
     aa4:	85 91       	lpm	r24, Z+
     aa6:	93 ff       	sbrs	r25, 3
     aa8:	81 91       	ld	r24, Z+
     aaa:	4f 01       	movw	r8, r30
     aac:	88 23       	and	r24, r24
     aae:	09 f4       	brne	.+2      	; 0xab2 <vfprintf+0x3c>
     ab0:	30 c3       	rjmp	.+1632   	; 0x1112 <vfprintf+0x69c>
     ab2:	85 32       	cpi	r24, 0x25	; 37
     ab4:	39 f4       	brne	.+14     	; 0xac4 <vfprintf+0x4e>
     ab6:	93 fd       	sbrc	r25, 3
     ab8:	85 91       	lpm	r24, Z+
     aba:	93 ff       	sbrs	r25, 3
     abc:	81 91       	ld	r24, Z+
     abe:	4f 01       	movw	r8, r30
     ac0:	85 32       	cpi	r24, 0x25	; 37
     ac2:	39 f4       	brne	.+14     	; 0xad2 <vfprintf+0x5c>
     ac4:	b6 01       	movw	r22, r12
     ac6:	90 e0       	ldi	r25, 0x00	; 0
     ac8:	0e 94 04 0a 	call	0x1408	; 0x1408 <fputc>
     acc:	52 01       	movw	r10, r4
     ace:	25 01       	movw	r4, r10
     ad0:	e5 cf       	rjmp	.-54     	; 0xa9c <vfprintf+0x26>
     ad2:	10 e0       	ldi	r17, 0x00	; 0
     ad4:	f1 2c       	mov	r15, r1
     ad6:	20 e0       	ldi	r18, 0x00	; 0
     ad8:	20 32       	cpi	r18, 0x20	; 32
     ada:	a0 f4       	brcc	.+40     	; 0xb04 <vfprintf+0x8e>
     adc:	8b 32       	cpi	r24, 0x2B	; 43
     ade:	69 f0       	breq	.+26     	; 0xafa <vfprintf+0x84>
     ae0:	30 f4       	brcc	.+12     	; 0xaee <vfprintf+0x78>
     ae2:	80 32       	cpi	r24, 0x20	; 32
     ae4:	59 f0       	breq	.+22     	; 0xafc <vfprintf+0x86>
     ae6:	83 32       	cpi	r24, 0x23	; 35
     ae8:	69 f4       	brne	.+26     	; 0xb04 <vfprintf+0x8e>
     aea:	20 61       	ori	r18, 0x10	; 16
     aec:	2c c0       	rjmp	.+88     	; 0xb46 <vfprintf+0xd0>
     aee:	8d 32       	cpi	r24, 0x2D	; 45
     af0:	39 f0       	breq	.+14     	; 0xb00 <vfprintf+0x8a>
     af2:	80 33       	cpi	r24, 0x30	; 48
     af4:	39 f4       	brne	.+14     	; 0xb04 <vfprintf+0x8e>
     af6:	21 60       	ori	r18, 0x01	; 1
     af8:	26 c0       	rjmp	.+76     	; 0xb46 <vfprintf+0xd0>
     afa:	22 60       	ori	r18, 0x02	; 2
     afc:	24 60       	ori	r18, 0x04	; 4
     afe:	23 c0       	rjmp	.+70     	; 0xb46 <vfprintf+0xd0>
     b00:	28 60       	ori	r18, 0x08	; 8
     b02:	21 c0       	rjmp	.+66     	; 0xb46 <vfprintf+0xd0>
     b04:	27 fd       	sbrc	r18, 7
     b06:	27 c0       	rjmp	.+78     	; 0xb56 <vfprintf+0xe0>
     b08:	30 ed       	ldi	r19, 0xD0	; 208
     b0a:	38 0f       	add	r19, r24
     b0c:	3a 30       	cpi	r19, 0x0A	; 10
     b0e:	78 f4       	brcc	.+30     	; 0xb2e <vfprintf+0xb8>
     b10:	26 ff       	sbrs	r18, 6
     b12:	06 c0       	rjmp	.+12     	; 0xb20 <vfprintf+0xaa>
     b14:	fa e0       	ldi	r31, 0x0A	; 10
     b16:	1f 9f       	mul	r17, r31
     b18:	30 0d       	add	r19, r0
     b1a:	11 24       	eor	r1, r1
     b1c:	13 2f       	mov	r17, r19
     b1e:	13 c0       	rjmp	.+38     	; 0xb46 <vfprintf+0xd0>
     b20:	4a e0       	ldi	r20, 0x0A	; 10
     b22:	f4 9e       	mul	r15, r20
     b24:	30 0d       	add	r19, r0
     b26:	11 24       	eor	r1, r1
     b28:	f3 2e       	mov	r15, r19
     b2a:	20 62       	ori	r18, 0x20	; 32
     b2c:	0c c0       	rjmp	.+24     	; 0xb46 <vfprintf+0xd0>
     b2e:	8e 32       	cpi	r24, 0x2E	; 46
     b30:	21 f4       	brne	.+8      	; 0xb3a <vfprintf+0xc4>
     b32:	26 fd       	sbrc	r18, 6
     b34:	ee c2       	rjmp	.+1500   	; 0x1112 <vfprintf+0x69c>
     b36:	20 64       	ori	r18, 0x40	; 64
     b38:	06 c0       	rjmp	.+12     	; 0xb46 <vfprintf+0xd0>
     b3a:	8c 36       	cpi	r24, 0x6C	; 108
     b3c:	11 f4       	brne	.+4      	; 0xb42 <vfprintf+0xcc>
     b3e:	20 68       	ori	r18, 0x80	; 128
     b40:	02 c0       	rjmp	.+4      	; 0xb46 <vfprintf+0xd0>
     b42:	88 36       	cpi	r24, 0x68	; 104
     b44:	41 f4       	brne	.+16     	; 0xb56 <vfprintf+0xe0>
     b46:	f4 01       	movw	r30, r8
     b48:	93 fd       	sbrc	r25, 3
     b4a:	85 91       	lpm	r24, Z+
     b4c:	93 ff       	sbrs	r25, 3
     b4e:	81 91       	ld	r24, Z+
     b50:	4f 01       	movw	r8, r30
     b52:	81 11       	cpse	r24, r1
     b54:	c1 cf       	rjmp	.-126    	; 0xad8 <vfprintf+0x62>
     b56:	9b eb       	ldi	r25, 0xBB	; 187
     b58:	98 0f       	add	r25, r24
     b5a:	93 30       	cpi	r25, 0x03	; 3
     b5c:	18 f4       	brcc	.+6      	; 0xb64 <vfprintf+0xee>
     b5e:	20 61       	ori	r18, 0x10	; 16
     b60:	80 5e       	subi	r24, 0xE0	; 224
     b62:	06 c0       	rjmp	.+12     	; 0xb70 <vfprintf+0xfa>
     b64:	9b e9       	ldi	r25, 0x9B	; 155
     b66:	98 0f       	add	r25, r24
     b68:	93 30       	cpi	r25, 0x03	; 3
     b6a:	08 f0       	brcs	.+2      	; 0xb6e <vfprintf+0xf8>
     b6c:	71 c1       	rjmp	.+738    	; 0xe50 <vfprintf+0x3da>
     b6e:	2f 7e       	andi	r18, 0xEF	; 239
     b70:	26 ff       	sbrs	r18, 6
     b72:	16 e0       	ldi	r17, 0x06	; 6
     b74:	2f 73       	andi	r18, 0x3F	; 63
     b76:	32 2e       	mov	r3, r18
     b78:	85 36       	cpi	r24, 0x65	; 101
     b7a:	19 f4       	brne	.+6      	; 0xb82 <vfprintf+0x10c>
     b7c:	20 64       	ori	r18, 0x40	; 64
     b7e:	32 2e       	mov	r3, r18
     b80:	08 c0       	rjmp	.+16     	; 0xb92 <vfprintf+0x11c>
     b82:	86 36       	cpi	r24, 0x66	; 102
     b84:	21 f4       	brne	.+8      	; 0xb8e <vfprintf+0x118>
     b86:	f2 2f       	mov	r31, r18
     b88:	f0 68       	ori	r31, 0x80	; 128
     b8a:	3f 2e       	mov	r3, r31
     b8c:	02 c0       	rjmp	.+4      	; 0xb92 <vfprintf+0x11c>
     b8e:	11 11       	cpse	r17, r1
     b90:	11 50       	subi	r17, 0x01	; 1
     b92:	37 fe       	sbrs	r3, 7
     b94:	07 c0       	rjmp	.+14     	; 0xba4 <vfprintf+0x12e>
     b96:	1c 33       	cpi	r17, 0x3C	; 60
     b98:	50 f4       	brcc	.+20     	; 0xbae <vfprintf+0x138>
     b9a:	ee 24       	eor	r14, r14
     b9c:	e3 94       	inc	r14
     b9e:	e1 0e       	add	r14, r17
     ba0:	27 e0       	ldi	r18, 0x07	; 7
     ba2:	0b c0       	rjmp	.+22     	; 0xbba <vfprintf+0x144>
     ba4:	18 30       	cpi	r17, 0x08	; 8
     ba6:	38 f0       	brcs	.+14     	; 0xbb6 <vfprintf+0x140>
     ba8:	27 e0       	ldi	r18, 0x07	; 7
     baa:	17 e0       	ldi	r17, 0x07	; 7
     bac:	05 c0       	rjmp	.+10     	; 0xbb8 <vfprintf+0x142>
     bae:	27 e0       	ldi	r18, 0x07	; 7
     bb0:	4c e3       	ldi	r20, 0x3C	; 60
     bb2:	e4 2e       	mov	r14, r20
     bb4:	02 c0       	rjmp	.+4      	; 0xbba <vfprintf+0x144>
     bb6:	21 2f       	mov	r18, r17
     bb8:	e1 2c       	mov	r14, r1
     bba:	52 01       	movw	r10, r4
     bbc:	44 e0       	ldi	r20, 0x04	; 4
     bbe:	a4 0e       	add	r10, r20
     bc0:	b1 1c       	adc	r11, r1
     bc2:	f2 01       	movw	r30, r4
     bc4:	60 81       	ld	r22, Z
     bc6:	71 81       	ldd	r23, Z+1	; 0x01
     bc8:	82 81       	ldd	r24, Z+2	; 0x02
     bca:	93 81       	ldd	r25, Z+3	; 0x03
     bcc:	0e 2d       	mov	r16, r14
     bce:	a3 01       	movw	r20, r6
     bd0:	0e 94 16 09 	call	0x122c	; 0x122c <__ftoa_engine>
     bd4:	2c 01       	movw	r4, r24
     bd6:	09 81       	ldd	r16, Y+1	; 0x01
     bd8:	00 ff       	sbrs	r16, 0
     bda:	02 c0       	rjmp	.+4      	; 0xbe0 <vfprintf+0x16a>
     bdc:	03 ff       	sbrs	r16, 3
     bde:	07 c0       	rjmp	.+14     	; 0xbee <vfprintf+0x178>
     be0:	31 fc       	sbrc	r3, 1
     be2:	08 c0       	rjmp	.+16     	; 0xbf4 <vfprintf+0x17e>
     be4:	32 fe       	sbrs	r3, 2
     be6:	09 c0       	rjmp	.+18     	; 0xbfa <vfprintf+0x184>
     be8:	30 e2       	ldi	r19, 0x20	; 32
     bea:	23 2e       	mov	r2, r19
     bec:	07 c0       	rjmp	.+14     	; 0xbfc <vfprintf+0x186>
     bee:	2d e2       	ldi	r18, 0x2D	; 45
     bf0:	22 2e       	mov	r2, r18
     bf2:	04 c0       	rjmp	.+8      	; 0xbfc <vfprintf+0x186>
     bf4:	9b e2       	ldi	r25, 0x2B	; 43
     bf6:	29 2e       	mov	r2, r25
     bf8:	01 c0       	rjmp	.+2      	; 0xbfc <vfprintf+0x186>
     bfa:	21 2c       	mov	r2, r1
     bfc:	80 2f       	mov	r24, r16
     bfe:	8c 70       	andi	r24, 0x0C	; 12
     c00:	19 f0       	breq	.+6      	; 0xc08 <vfprintf+0x192>
     c02:	21 10       	cpse	r2, r1
     c04:	68 c2       	rjmp	.+1232   	; 0x10d6 <vfprintf+0x660>
     c06:	a8 c2       	rjmp	.+1360   	; 0x1158 <vfprintf+0x6e2>
     c08:	37 fe       	sbrs	r3, 7
     c0a:	0f c0       	rjmp	.+30     	; 0xc2a <vfprintf+0x1b4>
     c0c:	e4 0c       	add	r14, r4
     c0e:	04 ff       	sbrs	r16, 4
     c10:	04 c0       	rjmp	.+8      	; 0xc1a <vfprintf+0x1a4>
     c12:	8a 81       	ldd	r24, Y+2	; 0x02
     c14:	81 33       	cpi	r24, 0x31	; 49
     c16:	09 f4       	brne	.+2      	; 0xc1a <vfprintf+0x1a4>
     c18:	ea 94       	dec	r14
     c1a:	1e 14       	cp	r1, r14
     c1c:	74 f5       	brge	.+92     	; 0xc7a <vfprintf+0x204>
     c1e:	f8 e0       	ldi	r31, 0x08	; 8
     c20:	fe 15       	cp	r31, r14
     c22:	78 f5       	brcc	.+94     	; 0xc82 <vfprintf+0x20c>
     c24:	88 e0       	ldi	r24, 0x08	; 8
     c26:	e8 2e       	mov	r14, r24
     c28:	2c c0       	rjmp	.+88     	; 0xc82 <vfprintf+0x20c>
     c2a:	36 fc       	sbrc	r3, 6
     c2c:	2a c0       	rjmp	.+84     	; 0xc82 <vfprintf+0x20c>
     c2e:	81 2f       	mov	r24, r17
     c30:	90 e0       	ldi	r25, 0x00	; 0
     c32:	84 15       	cp	r24, r4
     c34:	95 05       	cpc	r25, r5
     c36:	9c f0       	brlt	.+38     	; 0xc5e <vfprintf+0x1e8>
     c38:	2c ef       	ldi	r18, 0xFC	; 252
     c3a:	42 16       	cp	r4, r18
     c3c:	2f ef       	ldi	r18, 0xFF	; 255
     c3e:	52 06       	cpc	r5, r18
     c40:	74 f0       	brlt	.+28     	; 0xc5e <vfprintf+0x1e8>
     c42:	43 2d       	mov	r20, r3
     c44:	40 68       	ori	r20, 0x80	; 128
     c46:	34 2e       	mov	r3, r20
     c48:	0a c0       	rjmp	.+20     	; 0xc5e <vfprintf+0x1e8>
     c4a:	e2 e0       	ldi	r30, 0x02	; 2
     c4c:	f0 e0       	ldi	r31, 0x00	; 0
     c4e:	ec 0f       	add	r30, r28
     c50:	fd 1f       	adc	r31, r29
     c52:	e1 0f       	add	r30, r17
     c54:	f1 1d       	adc	r31, r1
     c56:	80 81       	ld	r24, Z
     c58:	80 33       	cpi	r24, 0x30	; 48
     c5a:	19 f4       	brne	.+6      	; 0xc62 <vfprintf+0x1ec>
     c5c:	11 50       	subi	r17, 0x01	; 1
     c5e:	11 11       	cpse	r17, r1
     c60:	f4 cf       	rjmp	.-24     	; 0xc4a <vfprintf+0x1d4>
     c62:	37 fe       	sbrs	r3, 7
     c64:	0e c0       	rjmp	.+28     	; 0xc82 <vfprintf+0x20c>
     c66:	ee 24       	eor	r14, r14
     c68:	e3 94       	inc	r14
     c6a:	e1 0e       	add	r14, r17
     c6c:	81 2f       	mov	r24, r17
     c6e:	90 e0       	ldi	r25, 0x00	; 0
     c70:	48 16       	cp	r4, r24
     c72:	59 06       	cpc	r5, r25
     c74:	2c f4       	brge	.+10     	; 0xc80 <vfprintf+0x20a>
     c76:	14 19       	sub	r17, r4
     c78:	04 c0       	rjmp	.+8      	; 0xc82 <vfprintf+0x20c>
     c7a:	ee 24       	eor	r14, r14
     c7c:	e3 94       	inc	r14
     c7e:	01 c0       	rjmp	.+2      	; 0xc82 <vfprintf+0x20c>
     c80:	10 e0       	ldi	r17, 0x00	; 0
     c82:	37 fe       	sbrs	r3, 7
     c84:	06 c0       	rjmp	.+12     	; 0xc92 <vfprintf+0x21c>
     c86:	14 14       	cp	r1, r4
     c88:	15 04       	cpc	r1, r5
     c8a:	34 f4       	brge	.+12     	; 0xc98 <vfprintf+0x222>
     c8c:	c2 01       	movw	r24, r4
     c8e:	01 96       	adiw	r24, 0x01	; 1
     c90:	05 c0       	rjmp	.+10     	; 0xc9c <vfprintf+0x226>
     c92:	85 e0       	ldi	r24, 0x05	; 5
     c94:	90 e0       	ldi	r25, 0x00	; 0
     c96:	02 c0       	rjmp	.+4      	; 0xc9c <vfprintf+0x226>
     c98:	81 e0       	ldi	r24, 0x01	; 1
     c9a:	90 e0       	ldi	r25, 0x00	; 0
     c9c:	21 10       	cpse	r2, r1
     c9e:	01 96       	adiw	r24, 0x01	; 1
     ca0:	11 23       	and	r17, r17
     ca2:	31 f0       	breq	.+12     	; 0xcb0 <vfprintf+0x23a>
     ca4:	21 2f       	mov	r18, r17
     ca6:	30 e0       	ldi	r19, 0x00	; 0
     ca8:	2f 5f       	subi	r18, 0xFF	; 255
     caa:	3f 4f       	sbci	r19, 0xFF	; 255
     cac:	82 0f       	add	r24, r18
     cae:	93 1f       	adc	r25, r19
     cb0:	2f 2d       	mov	r18, r15
     cb2:	30 e0       	ldi	r19, 0x00	; 0
     cb4:	82 17       	cp	r24, r18
     cb6:	93 07       	cpc	r25, r19
     cb8:	14 f4       	brge	.+4      	; 0xcbe <vfprintf+0x248>
     cba:	f8 1a       	sub	r15, r24
     cbc:	01 c0       	rjmp	.+2      	; 0xcc0 <vfprintf+0x24a>
     cbe:	f1 2c       	mov	r15, r1
     cc0:	83 2d       	mov	r24, r3
     cc2:	89 70       	andi	r24, 0x09	; 9
     cc4:	49 f4       	brne	.+18     	; 0xcd8 <vfprintf+0x262>
     cc6:	ff 20       	and	r15, r15
     cc8:	39 f0       	breq	.+14     	; 0xcd8 <vfprintf+0x262>
     cca:	b6 01       	movw	r22, r12
     ccc:	80 e2       	ldi	r24, 0x20	; 32
     cce:	90 e0       	ldi	r25, 0x00	; 0
     cd0:	0e 94 04 0a 	call	0x1408	; 0x1408 <fputc>
     cd4:	fa 94       	dec	r15
     cd6:	f7 cf       	rjmp	.-18     	; 0xcc6 <vfprintf+0x250>
     cd8:	22 20       	and	r2, r2
     cda:	29 f0       	breq	.+10     	; 0xce6 <vfprintf+0x270>
     cdc:	b6 01       	movw	r22, r12
     cde:	82 2d       	mov	r24, r2
     ce0:	90 e0       	ldi	r25, 0x00	; 0
     ce2:	0e 94 04 0a 	call	0x1408	; 0x1408 <fputc>
     ce6:	33 fc       	sbrc	r3, 3
     ce8:	09 c0       	rjmp	.+18     	; 0xcfc <vfprintf+0x286>
     cea:	ff 20       	and	r15, r15
     cec:	39 f0       	breq	.+14     	; 0xcfc <vfprintf+0x286>
     cee:	b6 01       	movw	r22, r12
     cf0:	80 e3       	ldi	r24, 0x30	; 48
     cf2:	90 e0       	ldi	r25, 0x00	; 0
     cf4:	0e 94 04 0a 	call	0x1408	; 0x1408 <fputc>
     cf8:	fa 94       	dec	r15
     cfa:	f7 cf       	rjmp	.-18     	; 0xcea <vfprintf+0x274>
     cfc:	37 fe       	sbrs	r3, 7
     cfe:	5a c0       	rjmp	.+180    	; 0xdb4 <vfprintf+0x33e>
     d00:	94 2d       	mov	r25, r4
     d02:	85 2d       	mov	r24, r5
     d04:	57 fe       	sbrs	r5, 7
     d06:	02 c0       	rjmp	.+4      	; 0xd0c <vfprintf+0x296>
     d08:	90 e0       	ldi	r25, 0x00	; 0
     d0a:	80 e0       	ldi	r24, 0x00	; 0
     d0c:	29 2e       	mov	r2, r25
     d0e:	38 2e       	mov	r3, r24
     d10:	20 e0       	ldi	r18, 0x00	; 0
     d12:	30 e0       	ldi	r19, 0x00	; 0
     d14:	a2 01       	movw	r20, r4
     d16:	4e 19       	sub	r20, r14
     d18:	51 09       	sbc	r21, r1
     d1a:	5d 87       	std	Y+13, r21	; 0x0d
     d1c:	4c 87       	std	Y+12, r20	; 0x0c
     d1e:	a2 01       	movw	r20, r4
     d20:	42 19       	sub	r20, r2
     d22:	53 09       	sbc	r21, r3
     d24:	5f 87       	std	Y+15, r21	; 0x0f
     d26:	4e 87       	std	Y+14, r20	; 0x0e
     d28:	61 2f       	mov	r22, r17
     d2a:	70 e0       	ldi	r23, 0x00	; 0
     d2c:	44 27       	eor	r20, r20
     d2e:	55 27       	eor	r21, r21
     d30:	46 1b       	sub	r20, r22
     d32:	57 0b       	sbc	r21, r23
     d34:	59 8b       	std	Y+17, r21	; 0x11
     d36:	48 8b       	std	Y+16, r20	; 0x10
     d38:	5f ef       	ldi	r21, 0xFF	; 255
     d3a:	25 16       	cp	r2, r21
     d3c:	35 06       	cpc	r3, r21
     d3e:	49 f4       	brne	.+18     	; 0xd52 <vfprintf+0x2dc>
     d40:	b6 01       	movw	r22, r12
     d42:	8e e2       	ldi	r24, 0x2E	; 46
     d44:	90 e0       	ldi	r25, 0x00	; 0
     d46:	2a 8b       	std	Y+18, r18	; 0x12
     d48:	3b 8b       	std	Y+19, r19	; 0x13
     d4a:	0e 94 04 0a 	call	0x1408	; 0x1408 <fputc>
     d4e:	3b 89       	ldd	r19, Y+19	; 0x13
     d50:	2a 89       	ldd	r18, Y+18	; 0x12
     d52:	42 14       	cp	r4, r2
     d54:	53 04       	cpc	r5, r3
     d56:	6c f0       	brlt	.+26     	; 0xd72 <vfprintf+0x2fc>
     d58:	4c 85       	ldd	r20, Y+12	; 0x0c
     d5a:	5d 85       	ldd	r21, Y+13	; 0x0d
     d5c:	42 15       	cp	r20, r2
     d5e:	53 05       	cpc	r21, r3
     d60:	44 f4       	brge	.+16     	; 0xd72 <vfprintf+0x2fc>
     d62:	ee 85       	ldd	r30, Y+14	; 0x0e
     d64:	ff 85       	ldd	r31, Y+15	; 0x0f
     d66:	e2 0f       	add	r30, r18
     d68:	f3 1f       	adc	r31, r19
     d6a:	e6 0d       	add	r30, r6
     d6c:	f7 1d       	adc	r31, r7
     d6e:	81 81       	ldd	r24, Z+1	; 0x01
     d70:	01 c0       	rjmp	.+2      	; 0xd74 <vfprintf+0x2fe>
     d72:	80 e3       	ldi	r24, 0x30	; 48
     d74:	51 e0       	ldi	r21, 0x01	; 1
     d76:	25 1a       	sub	r2, r21
     d78:	31 08       	sbc	r3, r1
     d7a:	2f 5f       	subi	r18, 0xFF	; 255
     d7c:	3f 4f       	sbci	r19, 0xFF	; 255
     d7e:	48 89       	ldd	r20, Y+16	; 0x10
     d80:	59 89       	ldd	r21, Y+17	; 0x11
     d82:	24 16       	cp	r2, r20
     d84:	35 06       	cpc	r3, r21
     d86:	4c f0       	brlt	.+18     	; 0xd9a <vfprintf+0x324>
     d88:	b6 01       	movw	r22, r12
     d8a:	90 e0       	ldi	r25, 0x00	; 0
     d8c:	2a 8b       	std	Y+18, r18	; 0x12
     d8e:	3b 8b       	std	Y+19, r19	; 0x13
     d90:	0e 94 04 0a 	call	0x1408	; 0x1408 <fputc>
     d94:	2a 89       	ldd	r18, Y+18	; 0x12
     d96:	3b 89       	ldd	r19, Y+19	; 0x13
     d98:	cf cf       	rjmp	.-98     	; 0xd38 <vfprintf+0x2c2>
     d9a:	24 14       	cp	r2, r4
     d9c:	35 04       	cpc	r3, r5
     d9e:	39 f4       	brne	.+14     	; 0xdae <vfprintf+0x338>
     da0:	9a 81       	ldd	r25, Y+2	; 0x02
     da2:	96 33       	cpi	r25, 0x36	; 54
     da4:	18 f4       	brcc	.+6      	; 0xdac <vfprintf+0x336>
     da6:	95 33       	cpi	r25, 0x35	; 53
     da8:	11 f4       	brne	.+4      	; 0xdae <vfprintf+0x338>
     daa:	04 ff       	sbrs	r16, 4
     dac:	81 e3       	ldi	r24, 0x31	; 49
     dae:	b6 01       	movw	r22, r12
     db0:	90 e0       	ldi	r25, 0x00	; 0
     db2:	4b c0       	rjmp	.+150    	; 0xe4a <vfprintf+0x3d4>
     db4:	8a 81       	ldd	r24, Y+2	; 0x02
     db6:	81 33       	cpi	r24, 0x31	; 49
     db8:	09 f0       	breq	.+2      	; 0xdbc <vfprintf+0x346>
     dba:	0f 7e       	andi	r16, 0xEF	; 239
     dbc:	b6 01       	movw	r22, r12
     dbe:	90 e0       	ldi	r25, 0x00	; 0
     dc0:	0e 94 04 0a 	call	0x1408	; 0x1408 <fputc>
     dc4:	11 11       	cpse	r17, r1
     dc6:	05 c0       	rjmp	.+10     	; 0xdd2 <vfprintf+0x35c>
     dc8:	34 fc       	sbrc	r3, 4
     dca:	18 c0       	rjmp	.+48     	; 0xdfc <vfprintf+0x386>
     dcc:	85 e6       	ldi	r24, 0x65	; 101
     dce:	90 e0       	ldi	r25, 0x00	; 0
     dd0:	17 c0       	rjmp	.+46     	; 0xe00 <vfprintf+0x38a>
     dd2:	b6 01       	movw	r22, r12
     dd4:	8e e2       	ldi	r24, 0x2E	; 46
     dd6:	90 e0       	ldi	r25, 0x00	; 0
     dd8:	0e 94 04 0a 	call	0x1408	; 0x1408 <fputc>
     ddc:	82 e0       	ldi	r24, 0x02	; 2
     dde:	ee 24       	eor	r14, r14
     de0:	e3 94       	inc	r14
     de2:	e8 0e       	add	r14, r24
     de4:	f3 01       	movw	r30, r6
     de6:	e8 0f       	add	r30, r24
     de8:	f1 1d       	adc	r31, r1
     dea:	80 81       	ld	r24, Z
     dec:	b6 01       	movw	r22, r12
     dee:	90 e0       	ldi	r25, 0x00	; 0
     df0:	0e 94 04 0a 	call	0x1408	; 0x1408 <fputc>
     df4:	11 50       	subi	r17, 0x01	; 1
     df6:	8e 2d       	mov	r24, r14
     df8:	91 f7       	brne	.-28     	; 0xdde <vfprintf+0x368>
     dfa:	e6 cf       	rjmp	.-52     	; 0xdc8 <vfprintf+0x352>
     dfc:	85 e4       	ldi	r24, 0x45	; 69
     dfe:	90 e0       	ldi	r25, 0x00	; 0
     e00:	b6 01       	movw	r22, r12
     e02:	0e 94 04 0a 	call	0x1408	; 0x1408 <fputc>
     e06:	57 fc       	sbrc	r5, 7
     e08:	05 c0       	rjmp	.+10     	; 0xe14 <vfprintf+0x39e>
     e0a:	41 14       	cp	r4, r1
     e0c:	51 04       	cpc	r5, r1
     e0e:	39 f4       	brne	.+14     	; 0xe1e <vfprintf+0x3a8>
     e10:	04 ff       	sbrs	r16, 4
     e12:	05 c0       	rjmp	.+10     	; 0xe1e <vfprintf+0x3a8>
     e14:	51 94       	neg	r5
     e16:	41 94       	neg	r4
     e18:	51 08       	sbc	r5, r1
     e1a:	8d e2       	ldi	r24, 0x2D	; 45
     e1c:	01 c0       	rjmp	.+2      	; 0xe20 <vfprintf+0x3aa>
     e1e:	8b e2       	ldi	r24, 0x2B	; 43
     e20:	b6 01       	movw	r22, r12
     e22:	90 e0       	ldi	r25, 0x00	; 0
     e24:	0e 94 04 0a 	call	0x1408	; 0x1408 <fputc>
     e28:	80 e3       	ldi	r24, 0x30	; 48
     e2a:	9a e0       	ldi	r25, 0x0A	; 10
     e2c:	49 16       	cp	r4, r25
     e2e:	51 04       	cpc	r5, r1
     e30:	2c f0       	brlt	.+10     	; 0xe3c <vfprintf+0x3c6>
     e32:	8f 5f       	subi	r24, 0xFF	; 255
     e34:	5a e0       	ldi	r21, 0x0A	; 10
     e36:	45 1a       	sub	r4, r21
     e38:	51 08       	sbc	r5, r1
     e3a:	f7 cf       	rjmp	.-18     	; 0xe2a <vfprintf+0x3b4>
     e3c:	b6 01       	movw	r22, r12
     e3e:	90 e0       	ldi	r25, 0x00	; 0
     e40:	0e 94 04 0a 	call	0x1408	; 0x1408 <fputc>
     e44:	b6 01       	movw	r22, r12
     e46:	c2 01       	movw	r24, r4
     e48:	c0 96       	adiw	r24, 0x30	; 48
     e4a:	0e 94 04 0a 	call	0x1408	; 0x1408 <fputc>
     e4e:	57 c1       	rjmp	.+686    	; 0x10fe <vfprintf+0x688>
     e50:	83 36       	cpi	r24, 0x63	; 99
     e52:	31 f0       	breq	.+12     	; 0xe60 <vfprintf+0x3ea>
     e54:	83 37       	cpi	r24, 0x73	; 115
     e56:	79 f0       	breq	.+30     	; 0xe76 <vfprintf+0x400>
     e58:	83 35       	cpi	r24, 0x53	; 83
     e5a:	09 f0       	breq	.+2      	; 0xe5e <vfprintf+0x3e8>
     e5c:	58 c0       	rjmp	.+176    	; 0xf0e <vfprintf+0x498>
     e5e:	21 c0       	rjmp	.+66     	; 0xea2 <vfprintf+0x42c>
     e60:	52 01       	movw	r10, r4
     e62:	e2 e0       	ldi	r30, 0x02	; 2
     e64:	ae 0e       	add	r10, r30
     e66:	b1 1c       	adc	r11, r1
     e68:	f2 01       	movw	r30, r4
     e6a:	80 81       	ld	r24, Z
     e6c:	89 83       	std	Y+1, r24	; 0x01
     e6e:	01 e0       	ldi	r16, 0x01	; 1
     e70:	10 e0       	ldi	r17, 0x00	; 0
     e72:	23 01       	movw	r4, r6
     e74:	14 c0       	rjmp	.+40     	; 0xe9e <vfprintf+0x428>
     e76:	52 01       	movw	r10, r4
     e78:	f2 e0       	ldi	r31, 0x02	; 2
     e7a:	af 0e       	add	r10, r31
     e7c:	b1 1c       	adc	r11, r1
     e7e:	f2 01       	movw	r30, r4
     e80:	40 80       	ld	r4, Z
     e82:	51 80       	ldd	r5, Z+1	; 0x01
     e84:	26 ff       	sbrs	r18, 6
     e86:	03 c0       	rjmp	.+6      	; 0xe8e <vfprintf+0x418>
     e88:	61 2f       	mov	r22, r17
     e8a:	70 e0       	ldi	r23, 0x00	; 0
     e8c:	02 c0       	rjmp	.+4      	; 0xe92 <vfprintf+0x41c>
     e8e:	6f ef       	ldi	r22, 0xFF	; 255
     e90:	7f ef       	ldi	r23, 0xFF	; 255
     e92:	c2 01       	movw	r24, r4
     e94:	2a 8b       	std	Y+18, r18	; 0x12
     e96:	0e 94 f9 09 	call	0x13f2	; 0x13f2 <strnlen>
     e9a:	8c 01       	movw	r16, r24
     e9c:	2a 89       	ldd	r18, Y+18	; 0x12
     e9e:	2f 77       	andi	r18, 0x7F	; 127
     ea0:	15 c0       	rjmp	.+42     	; 0xecc <vfprintf+0x456>
     ea2:	52 01       	movw	r10, r4
     ea4:	f2 e0       	ldi	r31, 0x02	; 2
     ea6:	af 0e       	add	r10, r31
     ea8:	b1 1c       	adc	r11, r1
     eaa:	f2 01       	movw	r30, r4
     eac:	40 80       	ld	r4, Z
     eae:	51 80       	ldd	r5, Z+1	; 0x01
     eb0:	26 ff       	sbrs	r18, 6
     eb2:	03 c0       	rjmp	.+6      	; 0xeba <vfprintf+0x444>
     eb4:	61 2f       	mov	r22, r17
     eb6:	70 e0       	ldi	r23, 0x00	; 0
     eb8:	02 c0       	rjmp	.+4      	; 0xebe <vfprintf+0x448>
     eba:	6f ef       	ldi	r22, 0xFF	; 255
     ebc:	7f ef       	ldi	r23, 0xFF	; 255
     ebe:	c2 01       	movw	r24, r4
     ec0:	2a 8b       	std	Y+18, r18	; 0x12
     ec2:	0e 94 ee 09 	call	0x13dc	; 0x13dc <strnlen_P>
     ec6:	8c 01       	movw	r16, r24
     ec8:	2a 89       	ldd	r18, Y+18	; 0x12
     eca:	20 68       	ori	r18, 0x80	; 128
     ecc:	32 2e       	mov	r3, r18
     ece:	23 fd       	sbrc	r18, 3
     ed0:	1a c0       	rjmp	.+52     	; 0xf06 <vfprintf+0x490>
     ed2:	8f 2d       	mov	r24, r15
     ed4:	90 e0       	ldi	r25, 0x00	; 0
     ed6:	08 17       	cp	r16, r24
     ed8:	19 07       	cpc	r17, r25
     eda:	a8 f4       	brcc	.+42     	; 0xf06 <vfprintf+0x490>
     edc:	b6 01       	movw	r22, r12
     ede:	80 e2       	ldi	r24, 0x20	; 32
     ee0:	90 e0       	ldi	r25, 0x00	; 0
     ee2:	0e 94 04 0a 	call	0x1408	; 0x1408 <fputc>
     ee6:	fa 94       	dec	r15
     ee8:	f4 cf       	rjmp	.-24     	; 0xed2 <vfprintf+0x45c>
     eea:	f2 01       	movw	r30, r4
     eec:	37 fc       	sbrc	r3, 7
     eee:	85 91       	lpm	r24, Z+
     ef0:	37 fe       	sbrs	r3, 7
     ef2:	81 91       	ld	r24, Z+
     ef4:	2f 01       	movw	r4, r30
     ef6:	b6 01       	movw	r22, r12
     ef8:	90 e0       	ldi	r25, 0x00	; 0
     efa:	0e 94 04 0a 	call	0x1408	; 0x1408 <fputc>
     efe:	f1 10       	cpse	r15, r1
     f00:	fa 94       	dec	r15
     f02:	01 50       	subi	r16, 0x01	; 1
     f04:	11 09       	sbc	r17, r1
     f06:	01 15       	cp	r16, r1
     f08:	11 05       	cpc	r17, r1
     f0a:	79 f7       	brne	.-34     	; 0xeea <vfprintf+0x474>
     f0c:	f8 c0       	rjmp	.+496    	; 0x10fe <vfprintf+0x688>
     f0e:	84 36       	cpi	r24, 0x64	; 100
     f10:	11 f0       	breq	.+4      	; 0xf16 <vfprintf+0x4a0>
     f12:	89 36       	cpi	r24, 0x69	; 105
     f14:	59 f5       	brne	.+86     	; 0xf6c <vfprintf+0x4f6>
     f16:	52 01       	movw	r10, r4
     f18:	27 ff       	sbrs	r18, 7
     f1a:	09 c0       	rjmp	.+18     	; 0xf2e <vfprintf+0x4b8>
     f1c:	f4 e0       	ldi	r31, 0x04	; 4
     f1e:	af 0e       	add	r10, r31
     f20:	b1 1c       	adc	r11, r1
     f22:	f2 01       	movw	r30, r4
     f24:	60 81       	ld	r22, Z
     f26:	71 81       	ldd	r23, Z+1	; 0x01
     f28:	82 81       	ldd	r24, Z+2	; 0x02
     f2a:	93 81       	ldd	r25, Z+3	; 0x03
     f2c:	0a c0       	rjmp	.+20     	; 0xf42 <vfprintf+0x4cc>
     f2e:	f2 e0       	ldi	r31, 0x02	; 2
     f30:	af 0e       	add	r10, r31
     f32:	b1 1c       	adc	r11, r1
     f34:	f2 01       	movw	r30, r4
     f36:	60 81       	ld	r22, Z
     f38:	71 81       	ldd	r23, Z+1	; 0x01
     f3a:	07 2e       	mov	r0, r23
     f3c:	00 0c       	add	r0, r0
     f3e:	88 0b       	sbc	r24, r24
     f40:	99 0b       	sbc	r25, r25
     f42:	2f 76       	andi	r18, 0x6F	; 111
     f44:	32 2e       	mov	r3, r18
     f46:	97 ff       	sbrs	r25, 7
     f48:	09 c0       	rjmp	.+18     	; 0xf5c <vfprintf+0x4e6>
     f4a:	90 95       	com	r25
     f4c:	80 95       	com	r24
     f4e:	70 95       	com	r23
     f50:	61 95       	neg	r22
     f52:	7f 4f       	sbci	r23, 0xFF	; 255
     f54:	8f 4f       	sbci	r24, 0xFF	; 255
     f56:	9f 4f       	sbci	r25, 0xFF	; 255
     f58:	20 68       	ori	r18, 0x80	; 128
     f5a:	32 2e       	mov	r3, r18
     f5c:	2a e0       	ldi	r18, 0x0A	; 10
     f5e:	30 e0       	ldi	r19, 0x00	; 0
     f60:	a3 01       	movw	r20, r6
     f62:	0e 94 5f 0a 	call	0x14be	; 0x14be <__ultoa_invert>
     f66:	e8 2e       	mov	r14, r24
     f68:	e6 18       	sub	r14, r6
     f6a:	3f c0       	rjmp	.+126    	; 0xfea <vfprintf+0x574>
     f6c:	02 2f       	mov	r16, r18
     f6e:	85 37       	cpi	r24, 0x75	; 117
     f70:	21 f4       	brne	.+8      	; 0xf7a <vfprintf+0x504>
     f72:	0f 7e       	andi	r16, 0xEF	; 239
     f74:	2a e0       	ldi	r18, 0x0A	; 10
     f76:	30 e0       	ldi	r19, 0x00	; 0
     f78:	1d c0       	rjmp	.+58     	; 0xfb4 <vfprintf+0x53e>
     f7a:	09 7f       	andi	r16, 0xF9	; 249
     f7c:	8f 36       	cpi	r24, 0x6F	; 111
     f7e:	91 f0       	breq	.+36     	; 0xfa4 <vfprintf+0x52e>
     f80:	18 f4       	brcc	.+6      	; 0xf88 <vfprintf+0x512>
     f82:	88 35       	cpi	r24, 0x58	; 88
     f84:	59 f0       	breq	.+22     	; 0xf9c <vfprintf+0x526>
     f86:	c5 c0       	rjmp	.+394    	; 0x1112 <vfprintf+0x69c>
     f88:	80 37       	cpi	r24, 0x70	; 112
     f8a:	19 f0       	breq	.+6      	; 0xf92 <vfprintf+0x51c>
     f8c:	88 37       	cpi	r24, 0x78	; 120
     f8e:	11 f0       	breq	.+4      	; 0xf94 <vfprintf+0x51e>
     f90:	c0 c0       	rjmp	.+384    	; 0x1112 <vfprintf+0x69c>
     f92:	00 61       	ori	r16, 0x10	; 16
     f94:	04 ff       	sbrs	r16, 4
     f96:	09 c0       	rjmp	.+18     	; 0xfaa <vfprintf+0x534>
     f98:	04 60       	ori	r16, 0x04	; 4
     f9a:	07 c0       	rjmp	.+14     	; 0xfaa <vfprintf+0x534>
     f9c:	24 ff       	sbrs	r18, 4
     f9e:	08 c0       	rjmp	.+16     	; 0xfb0 <vfprintf+0x53a>
     fa0:	06 60       	ori	r16, 0x06	; 6
     fa2:	06 c0       	rjmp	.+12     	; 0xfb0 <vfprintf+0x53a>
     fa4:	28 e0       	ldi	r18, 0x08	; 8
     fa6:	30 e0       	ldi	r19, 0x00	; 0
     fa8:	05 c0       	rjmp	.+10     	; 0xfb4 <vfprintf+0x53e>
     faa:	20 e1       	ldi	r18, 0x10	; 16
     fac:	30 e0       	ldi	r19, 0x00	; 0
     fae:	02 c0       	rjmp	.+4      	; 0xfb4 <vfprintf+0x53e>
     fb0:	20 e1       	ldi	r18, 0x10	; 16
     fb2:	32 e0       	ldi	r19, 0x02	; 2
     fb4:	52 01       	movw	r10, r4
     fb6:	07 ff       	sbrs	r16, 7
     fb8:	09 c0       	rjmp	.+18     	; 0xfcc <vfprintf+0x556>
     fba:	f4 e0       	ldi	r31, 0x04	; 4
     fbc:	af 0e       	add	r10, r31
     fbe:	b1 1c       	adc	r11, r1
     fc0:	f2 01       	movw	r30, r4
     fc2:	60 81       	ld	r22, Z
     fc4:	71 81       	ldd	r23, Z+1	; 0x01
     fc6:	82 81       	ldd	r24, Z+2	; 0x02
     fc8:	93 81       	ldd	r25, Z+3	; 0x03
     fca:	08 c0       	rjmp	.+16     	; 0xfdc <vfprintf+0x566>
     fcc:	f2 e0       	ldi	r31, 0x02	; 2
     fce:	af 0e       	add	r10, r31
     fd0:	b1 1c       	adc	r11, r1
     fd2:	f2 01       	movw	r30, r4
     fd4:	60 81       	ld	r22, Z
     fd6:	71 81       	ldd	r23, Z+1	; 0x01
     fd8:	80 e0       	ldi	r24, 0x00	; 0
     fda:	90 e0       	ldi	r25, 0x00	; 0
     fdc:	a3 01       	movw	r20, r6
     fde:	0e 94 5f 0a 	call	0x14be	; 0x14be <__ultoa_invert>
     fe2:	e8 2e       	mov	r14, r24
     fe4:	e6 18       	sub	r14, r6
     fe6:	0f 77       	andi	r16, 0x7F	; 127
     fe8:	30 2e       	mov	r3, r16
     fea:	36 fe       	sbrs	r3, 6
     fec:	0b c0       	rjmp	.+22     	; 0x1004 <vfprintf+0x58e>
     fee:	33 2d       	mov	r19, r3
     ff0:	3e 7f       	andi	r19, 0xFE	; 254
     ff2:	e1 16       	cp	r14, r17
     ff4:	50 f4       	brcc	.+20     	; 0x100a <vfprintf+0x594>
     ff6:	34 fe       	sbrs	r3, 4
     ff8:	0a c0       	rjmp	.+20     	; 0x100e <vfprintf+0x598>
     ffa:	32 fc       	sbrc	r3, 2
     ffc:	08 c0       	rjmp	.+16     	; 0x100e <vfprintf+0x598>
     ffe:	33 2d       	mov	r19, r3
    1000:	3e 7e       	andi	r19, 0xEE	; 238
    1002:	05 c0       	rjmp	.+10     	; 0x100e <vfprintf+0x598>
    1004:	0e 2d       	mov	r16, r14
    1006:	33 2d       	mov	r19, r3
    1008:	03 c0       	rjmp	.+6      	; 0x1010 <vfprintf+0x59a>
    100a:	0e 2d       	mov	r16, r14
    100c:	01 c0       	rjmp	.+2      	; 0x1010 <vfprintf+0x59a>
    100e:	01 2f       	mov	r16, r17
    1010:	34 ff       	sbrs	r19, 4
    1012:	0c c0       	rjmp	.+24     	; 0x102c <vfprintf+0x5b6>
    1014:	fe 01       	movw	r30, r28
    1016:	ee 0d       	add	r30, r14
    1018:	f1 1d       	adc	r31, r1
    101a:	80 81       	ld	r24, Z
    101c:	80 33       	cpi	r24, 0x30	; 48
    101e:	11 f4       	brne	.+4      	; 0x1024 <vfprintf+0x5ae>
    1020:	39 7e       	andi	r19, 0xE9	; 233
    1022:	08 c0       	rjmp	.+16     	; 0x1034 <vfprintf+0x5be>
    1024:	32 ff       	sbrs	r19, 2
    1026:	05 c0       	rjmp	.+10     	; 0x1032 <vfprintf+0x5bc>
    1028:	0e 5f       	subi	r16, 0xFE	; 254
    102a:	04 c0       	rjmp	.+8      	; 0x1034 <vfprintf+0x5be>
    102c:	83 2f       	mov	r24, r19
    102e:	86 78       	andi	r24, 0x86	; 134
    1030:	09 f0       	breq	.+2      	; 0x1034 <vfprintf+0x5be>
    1032:	0f 5f       	subi	r16, 0xFF	; 255
    1034:	33 fd       	sbrc	r19, 3
    1036:	13 c0       	rjmp	.+38     	; 0x105e <vfprintf+0x5e8>
    1038:	30 ff       	sbrs	r19, 0
    103a:	06 c0       	rjmp	.+12     	; 0x1048 <vfprintf+0x5d2>
    103c:	1e 2d       	mov	r17, r14
    103e:	0f 15       	cp	r16, r15
    1040:	18 f4       	brcc	.+6      	; 0x1048 <vfprintf+0x5d2>
    1042:	1f 0d       	add	r17, r15
    1044:	10 1b       	sub	r17, r16
    1046:	0f 2d       	mov	r16, r15
    1048:	0f 15       	cp	r16, r15
    104a:	68 f4       	brcc	.+26     	; 0x1066 <vfprintf+0x5f0>
    104c:	b6 01       	movw	r22, r12
    104e:	80 e2       	ldi	r24, 0x20	; 32
    1050:	90 e0       	ldi	r25, 0x00	; 0
    1052:	3b 8b       	std	Y+19, r19	; 0x13
    1054:	0e 94 04 0a 	call	0x1408	; 0x1408 <fputc>
    1058:	0f 5f       	subi	r16, 0xFF	; 255
    105a:	3b 89       	ldd	r19, Y+19	; 0x13
    105c:	f5 cf       	rjmp	.-22     	; 0x1048 <vfprintf+0x5d2>
    105e:	0f 15       	cp	r16, r15
    1060:	10 f4       	brcc	.+4      	; 0x1066 <vfprintf+0x5f0>
    1062:	f0 1a       	sub	r15, r16
    1064:	01 c0       	rjmp	.+2      	; 0x1068 <vfprintf+0x5f2>
    1066:	f1 2c       	mov	r15, r1
    1068:	34 ff       	sbrs	r19, 4
    106a:	12 c0       	rjmp	.+36     	; 0x1090 <vfprintf+0x61a>
    106c:	b6 01       	movw	r22, r12
    106e:	80 e3       	ldi	r24, 0x30	; 48
    1070:	90 e0       	ldi	r25, 0x00	; 0
    1072:	3b 8b       	std	Y+19, r19	; 0x13
    1074:	0e 94 04 0a 	call	0x1408	; 0x1408 <fputc>
    1078:	3b 89       	ldd	r19, Y+19	; 0x13
    107a:	32 ff       	sbrs	r19, 2
    107c:	17 c0       	rjmp	.+46     	; 0x10ac <vfprintf+0x636>
    107e:	31 fd       	sbrc	r19, 1
    1080:	03 c0       	rjmp	.+6      	; 0x1088 <vfprintf+0x612>
    1082:	88 e7       	ldi	r24, 0x78	; 120
    1084:	90 e0       	ldi	r25, 0x00	; 0
    1086:	02 c0       	rjmp	.+4      	; 0x108c <vfprintf+0x616>
    1088:	88 e5       	ldi	r24, 0x58	; 88
    108a:	90 e0       	ldi	r25, 0x00	; 0
    108c:	b6 01       	movw	r22, r12
    108e:	0c c0       	rjmp	.+24     	; 0x10a8 <vfprintf+0x632>
    1090:	83 2f       	mov	r24, r19
    1092:	86 78       	andi	r24, 0x86	; 134
    1094:	59 f0       	breq	.+22     	; 0x10ac <vfprintf+0x636>
    1096:	31 ff       	sbrs	r19, 1
    1098:	02 c0       	rjmp	.+4      	; 0x109e <vfprintf+0x628>
    109a:	8b e2       	ldi	r24, 0x2B	; 43
    109c:	01 c0       	rjmp	.+2      	; 0x10a0 <vfprintf+0x62a>
    109e:	80 e2       	ldi	r24, 0x20	; 32
    10a0:	37 fd       	sbrc	r19, 7
    10a2:	8d e2       	ldi	r24, 0x2D	; 45
    10a4:	b6 01       	movw	r22, r12
    10a6:	90 e0       	ldi	r25, 0x00	; 0
    10a8:	0e 94 04 0a 	call	0x1408	; 0x1408 <fputc>
    10ac:	e1 16       	cp	r14, r17
    10ae:	38 f4       	brcc	.+14     	; 0x10be <vfprintf+0x648>
    10b0:	b6 01       	movw	r22, r12
    10b2:	80 e3       	ldi	r24, 0x30	; 48
    10b4:	90 e0       	ldi	r25, 0x00	; 0
    10b6:	0e 94 04 0a 	call	0x1408	; 0x1408 <fputc>
    10ba:	11 50       	subi	r17, 0x01	; 1
    10bc:	f7 cf       	rjmp	.-18     	; 0x10ac <vfprintf+0x636>
    10be:	ea 94       	dec	r14
    10c0:	f3 01       	movw	r30, r6
    10c2:	ee 0d       	add	r30, r14
    10c4:	f1 1d       	adc	r31, r1
    10c6:	80 81       	ld	r24, Z
    10c8:	b6 01       	movw	r22, r12
    10ca:	90 e0       	ldi	r25, 0x00	; 0
    10cc:	0e 94 04 0a 	call	0x1408	; 0x1408 <fputc>
    10d0:	e1 10       	cpse	r14, r1
    10d2:	f5 cf       	rjmp	.-22     	; 0x10be <vfprintf+0x648>
    10d4:	14 c0       	rjmp	.+40     	; 0x10fe <vfprintf+0x688>
    10d6:	f4 e0       	ldi	r31, 0x04	; 4
    10d8:	ff 15       	cp	r31, r15
    10da:	58 f5       	brcc	.+86     	; 0x1132 <vfprintf+0x6bc>
    10dc:	84 e0       	ldi	r24, 0x04	; 4
    10de:	f8 1a       	sub	r15, r24
    10e0:	33 fe       	sbrs	r3, 3
    10e2:	1e c0       	rjmp	.+60     	; 0x1120 <vfprintf+0x6aa>
    10e4:	21 10       	cpse	r2, r1
    10e6:	26 c0       	rjmp	.+76     	; 0x1134 <vfprintf+0x6be>
    10e8:	03 ff       	sbrs	r16, 3
    10ea:	2a c0       	rjmp	.+84     	; 0x1140 <vfprintf+0x6ca>
    10ec:	08 e6       	ldi	r16, 0x68	; 104
    10ee:	10 e0       	ldi	r17, 0x00	; 0
    10f0:	f3 2d       	mov	r31, r3
    10f2:	f0 71       	andi	r31, 0x10	; 16
    10f4:	3f 2e       	mov	r3, r31
    10f6:	f8 01       	movw	r30, r16
    10f8:	84 91       	lpm	r24, Z
    10fa:	81 11       	cpse	r24, r1
    10fc:	24 c0       	rjmp	.+72     	; 0x1146 <vfprintf+0x6d0>
    10fe:	ff 20       	and	r15, r15
    1100:	09 f4       	brne	.+2      	; 0x1104 <vfprintf+0x68e>
    1102:	e5 cc       	rjmp	.-1590   	; 0xace <vfprintf+0x58>
    1104:	b6 01       	movw	r22, r12
    1106:	80 e2       	ldi	r24, 0x20	; 32
    1108:	90 e0       	ldi	r25, 0x00	; 0
    110a:	0e 94 04 0a 	call	0x1408	; 0x1408 <fputc>
    110e:	fa 94       	dec	r15
    1110:	f6 cf       	rjmp	.-20     	; 0x10fe <vfprintf+0x688>
    1112:	f6 01       	movw	r30, r12
    1114:	86 81       	ldd	r24, Z+6	; 0x06
    1116:	97 81       	ldd	r25, Z+7	; 0x07
    1118:	26 c0       	rjmp	.+76     	; 0x1166 <vfprintf+0x6f0>
    111a:	8f ef       	ldi	r24, 0xFF	; 255
    111c:	9f ef       	ldi	r25, 0xFF	; 255
    111e:	23 c0       	rjmp	.+70     	; 0x1166 <vfprintf+0x6f0>
    1120:	b6 01       	movw	r22, r12
    1122:	80 e2       	ldi	r24, 0x20	; 32
    1124:	90 e0       	ldi	r25, 0x00	; 0
    1126:	0e 94 04 0a 	call	0x1408	; 0x1408 <fputc>
    112a:	fa 94       	dec	r15
    112c:	f1 10       	cpse	r15, r1
    112e:	f8 cf       	rjmp	.-16     	; 0x1120 <vfprintf+0x6aa>
    1130:	d9 cf       	rjmp	.-78     	; 0x10e4 <vfprintf+0x66e>
    1132:	f1 2c       	mov	r15, r1
    1134:	b6 01       	movw	r22, r12
    1136:	82 2d       	mov	r24, r2
    1138:	90 e0       	ldi	r25, 0x00	; 0
    113a:	0e 94 04 0a 	call	0x1408	; 0x1408 <fputc>
    113e:	d4 cf       	rjmp	.-88     	; 0x10e8 <vfprintf+0x672>
    1140:	0c e6       	ldi	r16, 0x6C	; 108
    1142:	10 e0       	ldi	r17, 0x00	; 0
    1144:	d5 cf       	rjmp	.-86     	; 0x10f0 <vfprintf+0x67a>
    1146:	31 10       	cpse	r3, r1
    1148:	80 52       	subi	r24, 0x20	; 32
    114a:	b6 01       	movw	r22, r12
    114c:	90 e0       	ldi	r25, 0x00	; 0
    114e:	0e 94 04 0a 	call	0x1408	; 0x1408 <fputc>
    1152:	0f 5f       	subi	r16, 0xFF	; 255
    1154:	1f 4f       	sbci	r17, 0xFF	; 255
    1156:	cf cf       	rjmp	.-98     	; 0x10f6 <vfprintf+0x680>
    1158:	23 e0       	ldi	r18, 0x03	; 3
    115a:	2f 15       	cp	r18, r15
    115c:	10 f4       	brcc	.+4      	; 0x1162 <vfprintf+0x6ec>
    115e:	83 e0       	ldi	r24, 0x03	; 3
    1160:	be cf       	rjmp	.-132    	; 0x10de <vfprintf+0x668>
    1162:	f1 2c       	mov	r15, r1
    1164:	c1 cf       	rjmp	.-126    	; 0x10e8 <vfprintf+0x672>
    1166:	63 96       	adiw	r28, 0x13	; 19
    1168:	e2 e1       	ldi	r30, 0x12	; 18
    116a:	0c 94 f5 08 	jmp	0x11ea	; 0x11ea <__epilogue_restores__>

0000116e <__udivmodsi4>:
    116e:	a1 e2       	ldi	r26, 0x21	; 33
    1170:	1a 2e       	mov	r1, r26
    1172:	aa 1b       	sub	r26, r26
    1174:	bb 1b       	sub	r27, r27
    1176:	fd 01       	movw	r30, r26
    1178:	0d c0       	rjmp	.+26     	; 0x1194 <__udivmodsi4_ep>

0000117a <__udivmodsi4_loop>:
    117a:	aa 1f       	adc	r26, r26
    117c:	bb 1f       	adc	r27, r27
    117e:	ee 1f       	adc	r30, r30
    1180:	ff 1f       	adc	r31, r31
    1182:	a2 17       	cp	r26, r18
    1184:	b3 07       	cpc	r27, r19
    1186:	e4 07       	cpc	r30, r20
    1188:	f5 07       	cpc	r31, r21
    118a:	20 f0       	brcs	.+8      	; 0x1194 <__udivmodsi4_ep>
    118c:	a2 1b       	sub	r26, r18
    118e:	b3 0b       	sbc	r27, r19
    1190:	e4 0b       	sbc	r30, r20
    1192:	f5 0b       	sbc	r31, r21

00001194 <__udivmodsi4_ep>:
    1194:	66 1f       	adc	r22, r22
    1196:	77 1f       	adc	r23, r23
    1198:	88 1f       	adc	r24, r24
    119a:	99 1f       	adc	r25, r25
    119c:	1a 94       	dec	r1
    119e:	69 f7       	brne	.-38     	; 0x117a <__udivmodsi4_loop>
    11a0:	60 95       	com	r22
    11a2:	70 95       	com	r23
    11a4:	80 95       	com	r24
    11a6:	90 95       	com	r25
    11a8:	9b 01       	movw	r18, r22
    11aa:	ac 01       	movw	r20, r24
    11ac:	bd 01       	movw	r22, r26
    11ae:	cf 01       	movw	r24, r30
    11b0:	08 95       	ret

000011b2 <__prologue_saves__>:
    11b2:	2f 92       	push	r2
    11b4:	3f 92       	push	r3
    11b6:	4f 92       	push	r4
    11b8:	5f 92       	push	r5
    11ba:	6f 92       	push	r6
    11bc:	7f 92       	push	r7
    11be:	8f 92       	push	r8
    11c0:	9f 92       	push	r9
    11c2:	af 92       	push	r10
    11c4:	bf 92       	push	r11
    11c6:	cf 92       	push	r12
    11c8:	df 92       	push	r13
    11ca:	ef 92       	push	r14
    11cc:	ff 92       	push	r15
    11ce:	0f 93       	push	r16
    11d0:	1f 93       	push	r17
    11d2:	cf 93       	push	r28
    11d4:	df 93       	push	r29
    11d6:	cd b7       	in	r28, 0x3d	; 61
    11d8:	de b7       	in	r29, 0x3e	; 62
    11da:	ca 1b       	sub	r28, r26
    11dc:	db 0b       	sbc	r29, r27
    11de:	0f b6       	in	r0, 0x3f	; 63
    11e0:	f8 94       	cli
    11e2:	de bf       	out	0x3e, r29	; 62
    11e4:	0f be       	out	0x3f, r0	; 63
    11e6:	cd bf       	out	0x3d, r28	; 61
    11e8:	09 94       	ijmp

000011ea <__epilogue_restores__>:
    11ea:	2a 88       	ldd	r2, Y+18	; 0x12
    11ec:	39 88       	ldd	r3, Y+17	; 0x11
    11ee:	48 88       	ldd	r4, Y+16	; 0x10
    11f0:	5f 84       	ldd	r5, Y+15	; 0x0f
    11f2:	6e 84       	ldd	r6, Y+14	; 0x0e
    11f4:	7d 84       	ldd	r7, Y+13	; 0x0d
    11f6:	8c 84       	ldd	r8, Y+12	; 0x0c
    11f8:	9b 84       	ldd	r9, Y+11	; 0x0b
    11fa:	aa 84       	ldd	r10, Y+10	; 0x0a
    11fc:	b9 84       	ldd	r11, Y+9	; 0x09
    11fe:	c8 84       	ldd	r12, Y+8	; 0x08
    1200:	df 80       	ldd	r13, Y+7	; 0x07
    1202:	ee 80       	ldd	r14, Y+6	; 0x06
    1204:	fd 80       	ldd	r15, Y+5	; 0x05
    1206:	0c 81       	ldd	r16, Y+4	; 0x04
    1208:	1b 81       	ldd	r17, Y+3	; 0x03
    120a:	aa 81       	ldd	r26, Y+2	; 0x02
    120c:	b9 81       	ldd	r27, Y+1	; 0x01
    120e:	ce 0f       	add	r28, r30
    1210:	d1 1d       	adc	r29, r1
    1212:	0f b6       	in	r0, 0x3f	; 63
    1214:	f8 94       	cli
    1216:	de bf       	out	0x3e, r29	; 62
    1218:	0f be       	out	0x3f, r0	; 63
    121a:	cd bf       	out	0x3d, r28	; 61
    121c:	ed 01       	movw	r28, r26
    121e:	08 95       	ret

00001220 <__tablejump2__>:
    1220:	ee 0f       	add	r30, r30
    1222:	ff 1f       	adc	r31, r31
    1224:	05 90       	lpm	r0, Z+
    1226:	f4 91       	lpm	r31, Z
    1228:	e0 2d       	mov	r30, r0
    122a:	09 94       	ijmp

0000122c <__ftoa_engine>:
    122c:	28 30       	cpi	r18, 0x08	; 8
    122e:	08 f0       	brcs	.+2      	; 0x1232 <__ftoa_engine+0x6>
    1230:	27 e0       	ldi	r18, 0x07	; 7
    1232:	33 27       	eor	r19, r19
    1234:	da 01       	movw	r26, r20
    1236:	99 0f       	add	r25, r25
    1238:	31 1d       	adc	r19, r1
    123a:	87 fd       	sbrc	r24, 7
    123c:	91 60       	ori	r25, 0x01	; 1
    123e:	00 96       	adiw	r24, 0x00	; 0
    1240:	61 05       	cpc	r22, r1
    1242:	71 05       	cpc	r23, r1
    1244:	39 f4       	brne	.+14     	; 0x1254 <__ftoa_engine+0x28>
    1246:	32 60       	ori	r19, 0x02	; 2
    1248:	2e 5f       	subi	r18, 0xFE	; 254
    124a:	3d 93       	st	X+, r19
    124c:	30 e3       	ldi	r19, 0x30	; 48
    124e:	2a 95       	dec	r18
    1250:	e1 f7       	brne	.-8      	; 0x124a <__ftoa_engine+0x1e>
    1252:	08 95       	ret
    1254:	9f 3f       	cpi	r25, 0xFF	; 255
    1256:	30 f0       	brcs	.+12     	; 0x1264 <__ftoa_engine+0x38>
    1258:	80 38       	cpi	r24, 0x80	; 128
    125a:	71 05       	cpc	r23, r1
    125c:	61 05       	cpc	r22, r1
    125e:	09 f0       	breq	.+2      	; 0x1262 <__ftoa_engine+0x36>
    1260:	3c 5f       	subi	r19, 0xFC	; 252
    1262:	3c 5f       	subi	r19, 0xFC	; 252
    1264:	3d 93       	st	X+, r19
    1266:	91 30       	cpi	r25, 0x01	; 1
    1268:	08 f0       	brcs	.+2      	; 0x126c <__ftoa_engine+0x40>
    126a:	80 68       	ori	r24, 0x80	; 128
    126c:	91 1d       	adc	r25, r1
    126e:	df 93       	push	r29
    1270:	cf 93       	push	r28
    1272:	1f 93       	push	r17
    1274:	0f 93       	push	r16
    1276:	ff 92       	push	r15
    1278:	ef 92       	push	r14
    127a:	19 2f       	mov	r17, r25
    127c:	98 7f       	andi	r25, 0xF8	; 248
    127e:	96 95       	lsr	r25
    1280:	e9 2f       	mov	r30, r25
    1282:	96 95       	lsr	r25
    1284:	96 95       	lsr	r25
    1286:	e9 0f       	add	r30, r25
    1288:	ff 27       	eor	r31, r31
    128a:	e6 53       	subi	r30, 0x36	; 54
    128c:	ff 4f       	sbci	r31, 0xFF	; 255
    128e:	99 27       	eor	r25, r25
    1290:	33 27       	eor	r19, r19
    1292:	ee 24       	eor	r14, r14
    1294:	ff 24       	eor	r15, r15
    1296:	a7 01       	movw	r20, r14
    1298:	e7 01       	movw	r28, r14
    129a:	05 90       	lpm	r0, Z+
    129c:	08 94       	sec
    129e:	07 94       	ror	r0
    12a0:	28 f4       	brcc	.+10     	; 0x12ac <__ftoa_engine+0x80>
    12a2:	36 0f       	add	r19, r22
    12a4:	e7 1e       	adc	r14, r23
    12a6:	f8 1e       	adc	r15, r24
    12a8:	49 1f       	adc	r20, r25
    12aa:	51 1d       	adc	r21, r1
    12ac:	66 0f       	add	r22, r22
    12ae:	77 1f       	adc	r23, r23
    12b0:	88 1f       	adc	r24, r24
    12b2:	99 1f       	adc	r25, r25
    12b4:	06 94       	lsr	r0
    12b6:	a1 f7       	brne	.-24     	; 0x12a0 <__ftoa_engine+0x74>
    12b8:	05 90       	lpm	r0, Z+
    12ba:	07 94       	ror	r0
    12bc:	28 f4       	brcc	.+10     	; 0x12c8 <__ftoa_engine+0x9c>
    12be:	e7 0e       	add	r14, r23
    12c0:	f8 1e       	adc	r15, r24
    12c2:	49 1f       	adc	r20, r25
    12c4:	56 1f       	adc	r21, r22
    12c6:	c1 1d       	adc	r28, r1
    12c8:	77 0f       	add	r23, r23
    12ca:	88 1f       	adc	r24, r24
    12cc:	99 1f       	adc	r25, r25
    12ce:	66 1f       	adc	r22, r22
    12d0:	06 94       	lsr	r0
    12d2:	a1 f7       	brne	.-24     	; 0x12bc <__ftoa_engine+0x90>
    12d4:	05 90       	lpm	r0, Z+
    12d6:	07 94       	ror	r0
    12d8:	28 f4       	brcc	.+10     	; 0x12e4 <__ftoa_engine+0xb8>
    12da:	f8 0e       	add	r15, r24
    12dc:	49 1f       	adc	r20, r25
    12de:	56 1f       	adc	r21, r22
    12e0:	c7 1f       	adc	r28, r23
    12e2:	d1 1d       	adc	r29, r1
    12e4:	88 0f       	add	r24, r24
    12e6:	99 1f       	adc	r25, r25
    12e8:	66 1f       	adc	r22, r22
    12ea:	77 1f       	adc	r23, r23
    12ec:	06 94       	lsr	r0
    12ee:	a1 f7       	brne	.-24     	; 0x12d8 <__ftoa_engine+0xac>
    12f0:	05 90       	lpm	r0, Z+
    12f2:	07 94       	ror	r0
    12f4:	20 f4       	brcc	.+8      	; 0x12fe <__ftoa_engine+0xd2>
    12f6:	49 0f       	add	r20, r25
    12f8:	56 1f       	adc	r21, r22
    12fa:	c7 1f       	adc	r28, r23
    12fc:	d8 1f       	adc	r29, r24
    12fe:	99 0f       	add	r25, r25
    1300:	66 1f       	adc	r22, r22
    1302:	77 1f       	adc	r23, r23
    1304:	88 1f       	adc	r24, r24
    1306:	06 94       	lsr	r0
    1308:	a9 f7       	brne	.-22     	; 0x12f4 <__ftoa_engine+0xc8>
    130a:	84 91       	lpm	r24, Z
    130c:	10 95       	com	r17
    130e:	17 70       	andi	r17, 0x07	; 7
    1310:	41 f0       	breq	.+16     	; 0x1322 <__ftoa_engine+0xf6>
    1312:	d6 95       	lsr	r29
    1314:	c7 95       	ror	r28
    1316:	57 95       	ror	r21
    1318:	47 95       	ror	r20
    131a:	f7 94       	ror	r15
    131c:	e7 94       	ror	r14
    131e:	1a 95       	dec	r17
    1320:	c1 f7       	brne	.-16     	; 0x1312 <__ftoa_engine+0xe6>
    1322:	e0 e7       	ldi	r30, 0x70	; 112
    1324:	f0 e0       	ldi	r31, 0x00	; 0
    1326:	68 94       	set
    1328:	15 90       	lpm	r1, Z+
    132a:	15 91       	lpm	r17, Z+
    132c:	35 91       	lpm	r19, Z+
    132e:	65 91       	lpm	r22, Z+
    1330:	95 91       	lpm	r25, Z+
    1332:	05 90       	lpm	r0, Z+
    1334:	7f e2       	ldi	r23, 0x2F	; 47
    1336:	73 95       	inc	r23
    1338:	e1 18       	sub	r14, r1
    133a:	f1 0a       	sbc	r15, r17
    133c:	43 0b       	sbc	r20, r19
    133e:	56 0b       	sbc	r21, r22
    1340:	c9 0b       	sbc	r28, r25
    1342:	d0 09       	sbc	r29, r0
    1344:	c0 f7       	brcc	.-16     	; 0x1336 <__ftoa_engine+0x10a>
    1346:	e1 0c       	add	r14, r1
    1348:	f1 1e       	adc	r15, r17
    134a:	43 1f       	adc	r20, r19
    134c:	56 1f       	adc	r21, r22
    134e:	c9 1f       	adc	r28, r25
    1350:	d0 1d       	adc	r29, r0
    1352:	7e f4       	brtc	.+30     	; 0x1372 <__ftoa_engine+0x146>
    1354:	70 33       	cpi	r23, 0x30	; 48
    1356:	11 f4       	brne	.+4      	; 0x135c <__ftoa_engine+0x130>
    1358:	8a 95       	dec	r24
    135a:	e6 cf       	rjmp	.-52     	; 0x1328 <__ftoa_engine+0xfc>
    135c:	e8 94       	clt
    135e:	01 50       	subi	r16, 0x01	; 1
    1360:	30 f0       	brcs	.+12     	; 0x136e <__ftoa_engine+0x142>
    1362:	08 0f       	add	r16, r24
    1364:	0a f4       	brpl	.+2      	; 0x1368 <__ftoa_engine+0x13c>
    1366:	00 27       	eor	r16, r16
    1368:	02 17       	cp	r16, r18
    136a:	08 f4       	brcc	.+2      	; 0x136e <__ftoa_engine+0x142>
    136c:	20 2f       	mov	r18, r16
    136e:	23 95       	inc	r18
    1370:	02 2f       	mov	r16, r18
    1372:	7a 33       	cpi	r23, 0x3A	; 58
    1374:	28 f0       	brcs	.+10     	; 0x1380 <__ftoa_engine+0x154>
    1376:	79 e3       	ldi	r23, 0x39	; 57
    1378:	7d 93       	st	X+, r23
    137a:	2a 95       	dec	r18
    137c:	e9 f7       	brne	.-6      	; 0x1378 <__ftoa_engine+0x14c>
    137e:	10 c0       	rjmp	.+32     	; 0x13a0 <__ftoa_engine+0x174>
    1380:	7d 93       	st	X+, r23
    1382:	2a 95       	dec	r18
    1384:	89 f6       	brne	.-94     	; 0x1328 <__ftoa_engine+0xfc>
    1386:	06 94       	lsr	r0
    1388:	97 95       	ror	r25
    138a:	67 95       	ror	r22
    138c:	37 95       	ror	r19
    138e:	17 95       	ror	r17
    1390:	17 94       	ror	r1
    1392:	e1 18       	sub	r14, r1
    1394:	f1 0a       	sbc	r15, r17
    1396:	43 0b       	sbc	r20, r19
    1398:	56 0b       	sbc	r21, r22
    139a:	c9 0b       	sbc	r28, r25
    139c:	d0 09       	sbc	r29, r0
    139e:	98 f0       	brcs	.+38     	; 0x13c6 <__ftoa_engine+0x19a>
    13a0:	23 95       	inc	r18
    13a2:	7e 91       	ld	r23, -X
    13a4:	73 95       	inc	r23
    13a6:	7a 33       	cpi	r23, 0x3A	; 58
    13a8:	08 f0       	brcs	.+2      	; 0x13ac <__ftoa_engine+0x180>
    13aa:	70 e3       	ldi	r23, 0x30	; 48
    13ac:	7c 93       	st	X, r23
    13ae:	20 13       	cpse	r18, r16
    13b0:	b8 f7       	brcc	.-18     	; 0x13a0 <__ftoa_engine+0x174>
    13b2:	7e 91       	ld	r23, -X
    13b4:	70 61       	ori	r23, 0x10	; 16
    13b6:	7d 93       	st	X+, r23
    13b8:	30 f0       	brcs	.+12     	; 0x13c6 <__ftoa_engine+0x19a>
    13ba:	83 95       	inc	r24
    13bc:	71 e3       	ldi	r23, 0x31	; 49
    13be:	7d 93       	st	X+, r23
    13c0:	70 e3       	ldi	r23, 0x30	; 48
    13c2:	2a 95       	dec	r18
    13c4:	e1 f7       	brne	.-8      	; 0x13be <__ftoa_engine+0x192>
    13c6:	11 24       	eor	r1, r1
    13c8:	ef 90       	pop	r14
    13ca:	ff 90       	pop	r15
    13cc:	0f 91       	pop	r16
    13ce:	1f 91       	pop	r17
    13d0:	cf 91       	pop	r28
    13d2:	df 91       	pop	r29
    13d4:	99 27       	eor	r25, r25
    13d6:	87 fd       	sbrc	r24, 7
    13d8:	90 95       	com	r25
    13da:	08 95       	ret

000013dc <strnlen_P>:
    13dc:	fc 01       	movw	r30, r24
    13de:	05 90       	lpm	r0, Z+
    13e0:	61 50       	subi	r22, 0x01	; 1
    13e2:	70 40       	sbci	r23, 0x00	; 0
    13e4:	01 10       	cpse	r0, r1
    13e6:	d8 f7       	brcc	.-10     	; 0x13de <strnlen_P+0x2>
    13e8:	80 95       	com	r24
    13ea:	90 95       	com	r25
    13ec:	8e 0f       	add	r24, r30
    13ee:	9f 1f       	adc	r25, r31
    13f0:	08 95       	ret

000013f2 <strnlen>:
    13f2:	fc 01       	movw	r30, r24
    13f4:	61 50       	subi	r22, 0x01	; 1
    13f6:	70 40       	sbci	r23, 0x00	; 0
    13f8:	01 90       	ld	r0, Z+
    13fa:	01 10       	cpse	r0, r1
    13fc:	d8 f7       	brcc	.-10     	; 0x13f4 <strnlen+0x2>
    13fe:	80 95       	com	r24
    1400:	90 95       	com	r25
    1402:	8e 0f       	add	r24, r30
    1404:	9f 1f       	adc	r25, r31
    1406:	08 95       	ret

00001408 <fputc>:
    1408:	0f 93       	push	r16
    140a:	1f 93       	push	r17
    140c:	cf 93       	push	r28
    140e:	df 93       	push	r29
    1410:	fb 01       	movw	r30, r22
    1412:	23 81       	ldd	r18, Z+3	; 0x03
    1414:	21 fd       	sbrc	r18, 1
    1416:	03 c0       	rjmp	.+6      	; 0x141e <fputc+0x16>
    1418:	8f ef       	ldi	r24, 0xFF	; 255
    141a:	9f ef       	ldi	r25, 0xFF	; 255
    141c:	28 c0       	rjmp	.+80     	; 0x146e <fputc+0x66>
    141e:	22 ff       	sbrs	r18, 2
    1420:	16 c0       	rjmp	.+44     	; 0x144e <fputc+0x46>
    1422:	46 81       	ldd	r20, Z+6	; 0x06
    1424:	57 81       	ldd	r21, Z+7	; 0x07
    1426:	24 81       	ldd	r18, Z+4	; 0x04
    1428:	35 81       	ldd	r19, Z+5	; 0x05
    142a:	42 17       	cp	r20, r18
    142c:	53 07       	cpc	r21, r19
    142e:	44 f4       	brge	.+16     	; 0x1440 <fputc+0x38>
    1430:	a0 81       	ld	r26, Z
    1432:	b1 81       	ldd	r27, Z+1	; 0x01
    1434:	9d 01       	movw	r18, r26
    1436:	2f 5f       	subi	r18, 0xFF	; 255
    1438:	3f 4f       	sbci	r19, 0xFF	; 255
    143a:	31 83       	std	Z+1, r19	; 0x01
    143c:	20 83       	st	Z, r18
    143e:	8c 93       	st	X, r24
    1440:	26 81       	ldd	r18, Z+6	; 0x06
    1442:	37 81       	ldd	r19, Z+7	; 0x07
    1444:	2f 5f       	subi	r18, 0xFF	; 255
    1446:	3f 4f       	sbci	r19, 0xFF	; 255
    1448:	37 83       	std	Z+7, r19	; 0x07
    144a:	26 83       	std	Z+6, r18	; 0x06
    144c:	10 c0       	rjmp	.+32     	; 0x146e <fputc+0x66>
    144e:	eb 01       	movw	r28, r22
    1450:	09 2f       	mov	r16, r25
    1452:	18 2f       	mov	r17, r24
    1454:	00 84       	ldd	r0, Z+8	; 0x08
    1456:	f1 85       	ldd	r31, Z+9	; 0x09
    1458:	e0 2d       	mov	r30, r0
    145a:	09 95       	icall
    145c:	89 2b       	or	r24, r25
    145e:	e1 f6       	brne	.-72     	; 0x1418 <fputc+0x10>
    1460:	8e 81       	ldd	r24, Y+6	; 0x06
    1462:	9f 81       	ldd	r25, Y+7	; 0x07
    1464:	01 96       	adiw	r24, 0x01	; 1
    1466:	9f 83       	std	Y+7, r25	; 0x07
    1468:	8e 83       	std	Y+6, r24	; 0x06
    146a:	81 2f       	mov	r24, r17
    146c:	90 2f       	mov	r25, r16
    146e:	df 91       	pop	r29
    1470:	cf 91       	pop	r28
    1472:	1f 91       	pop	r17
    1474:	0f 91       	pop	r16
    1476:	08 95       	ret

00001478 <sprintf>:
    1478:	ae e0       	ldi	r26, 0x0E	; 14
    147a:	b0 e0       	ldi	r27, 0x00	; 0
    147c:	e2 e4       	ldi	r30, 0x42	; 66
    147e:	fa e0       	ldi	r31, 0x0A	; 10
    1480:	0c 94 e7 08 	jmp	0x11ce	; 0x11ce <__prologue_saves__+0x1c>
    1484:	0d 89       	ldd	r16, Y+21	; 0x15
    1486:	1e 89       	ldd	r17, Y+22	; 0x16
    1488:	86 e0       	ldi	r24, 0x06	; 6
    148a:	8c 83       	std	Y+4, r24	; 0x04
    148c:	1a 83       	std	Y+2, r17	; 0x02
    148e:	09 83       	std	Y+1, r16	; 0x01
    1490:	8f ef       	ldi	r24, 0xFF	; 255
    1492:	9f e7       	ldi	r25, 0x7F	; 127
    1494:	9e 83       	std	Y+6, r25	; 0x06
    1496:	8d 83       	std	Y+5, r24	; 0x05
    1498:	ae 01       	movw	r20, r28
    149a:	47 5e       	subi	r20, 0xE7	; 231
    149c:	5f 4f       	sbci	r21, 0xFF	; 255
    149e:	6f 89       	ldd	r22, Y+23	; 0x17
    14a0:	78 8d       	ldd	r23, Y+24	; 0x18
    14a2:	ce 01       	movw	r24, r28
    14a4:	01 96       	adiw	r24, 0x01	; 1
    14a6:	0e 94 3b 05 	call	0xa76	; 0xa76 <vfprintf>
    14aa:	2f 81       	ldd	r18, Y+7	; 0x07
    14ac:	38 85       	ldd	r19, Y+8	; 0x08
    14ae:	f8 01       	movw	r30, r16
    14b0:	e2 0f       	add	r30, r18
    14b2:	f3 1f       	adc	r31, r19
    14b4:	10 82       	st	Z, r1
    14b6:	2e 96       	adiw	r28, 0x0e	; 14
    14b8:	e4 e0       	ldi	r30, 0x04	; 4
    14ba:	0c 94 03 09 	jmp	0x1206	; 0x1206 <__epilogue_restores__+0x1c>

000014be <__ultoa_invert>:
    14be:	fa 01       	movw	r30, r20
    14c0:	aa 27       	eor	r26, r26
    14c2:	28 30       	cpi	r18, 0x08	; 8
    14c4:	51 f1       	breq	.+84     	; 0x151a <__ultoa_invert+0x5c>
    14c6:	20 31       	cpi	r18, 0x10	; 16
    14c8:	81 f1       	breq	.+96     	; 0x152a <__ultoa_invert+0x6c>
    14ca:	e8 94       	clt
    14cc:	6f 93       	push	r22
    14ce:	6e 7f       	andi	r22, 0xFE	; 254
    14d0:	6e 5f       	subi	r22, 0xFE	; 254
    14d2:	7f 4f       	sbci	r23, 0xFF	; 255
    14d4:	8f 4f       	sbci	r24, 0xFF	; 255
    14d6:	9f 4f       	sbci	r25, 0xFF	; 255
    14d8:	af 4f       	sbci	r26, 0xFF	; 255
    14da:	b1 e0       	ldi	r27, 0x01	; 1
    14dc:	3e d0       	rcall	.+124    	; 0x155a <__ultoa_invert+0x9c>
    14de:	b4 e0       	ldi	r27, 0x04	; 4
    14e0:	3c d0       	rcall	.+120    	; 0x155a <__ultoa_invert+0x9c>
    14e2:	67 0f       	add	r22, r23
    14e4:	78 1f       	adc	r23, r24
    14e6:	89 1f       	adc	r24, r25
    14e8:	9a 1f       	adc	r25, r26
    14ea:	a1 1d       	adc	r26, r1
    14ec:	68 0f       	add	r22, r24
    14ee:	79 1f       	adc	r23, r25
    14f0:	8a 1f       	adc	r24, r26
    14f2:	91 1d       	adc	r25, r1
    14f4:	a1 1d       	adc	r26, r1
    14f6:	6a 0f       	add	r22, r26
    14f8:	71 1d       	adc	r23, r1
    14fa:	81 1d       	adc	r24, r1
    14fc:	91 1d       	adc	r25, r1
    14fe:	a1 1d       	adc	r26, r1
    1500:	20 d0       	rcall	.+64     	; 0x1542 <__ultoa_invert+0x84>
    1502:	09 f4       	brne	.+2      	; 0x1506 <__ultoa_invert+0x48>
    1504:	68 94       	set
    1506:	3f 91       	pop	r19
    1508:	2a e0       	ldi	r18, 0x0A	; 10
    150a:	26 9f       	mul	r18, r22
    150c:	11 24       	eor	r1, r1
    150e:	30 19       	sub	r19, r0
    1510:	30 5d       	subi	r19, 0xD0	; 208
    1512:	31 93       	st	Z+, r19
    1514:	de f6       	brtc	.-74     	; 0x14cc <__ultoa_invert+0xe>
    1516:	cf 01       	movw	r24, r30
    1518:	08 95       	ret
    151a:	46 2f       	mov	r20, r22
    151c:	47 70       	andi	r20, 0x07	; 7
    151e:	40 5d       	subi	r20, 0xD0	; 208
    1520:	41 93       	st	Z+, r20
    1522:	b3 e0       	ldi	r27, 0x03	; 3
    1524:	0f d0       	rcall	.+30     	; 0x1544 <__ultoa_invert+0x86>
    1526:	c9 f7       	brne	.-14     	; 0x151a <__ultoa_invert+0x5c>
    1528:	f6 cf       	rjmp	.-20     	; 0x1516 <__ultoa_invert+0x58>
    152a:	46 2f       	mov	r20, r22
    152c:	4f 70       	andi	r20, 0x0F	; 15
    152e:	40 5d       	subi	r20, 0xD0	; 208
    1530:	4a 33       	cpi	r20, 0x3A	; 58
    1532:	18 f0       	brcs	.+6      	; 0x153a <__ultoa_invert+0x7c>
    1534:	49 5d       	subi	r20, 0xD9	; 217
    1536:	31 fd       	sbrc	r19, 1
    1538:	40 52       	subi	r20, 0x20	; 32
    153a:	41 93       	st	Z+, r20
    153c:	02 d0       	rcall	.+4      	; 0x1542 <__ultoa_invert+0x84>
    153e:	a9 f7       	brne	.-22     	; 0x152a <__ultoa_invert+0x6c>
    1540:	ea cf       	rjmp	.-44     	; 0x1516 <__ultoa_invert+0x58>
    1542:	b4 e0       	ldi	r27, 0x04	; 4
    1544:	a6 95       	lsr	r26
    1546:	97 95       	ror	r25
    1548:	87 95       	ror	r24
    154a:	77 95       	ror	r23
    154c:	67 95       	ror	r22
    154e:	ba 95       	dec	r27
    1550:	c9 f7       	brne	.-14     	; 0x1544 <__ultoa_invert+0x86>
    1552:	00 97       	sbiw	r24, 0x00	; 0
    1554:	61 05       	cpc	r22, r1
    1556:	71 05       	cpc	r23, r1
    1558:	08 95       	ret
    155a:	9b 01       	movw	r18, r22
    155c:	ac 01       	movw	r20, r24
    155e:	0a 2e       	mov	r0, r26
    1560:	06 94       	lsr	r0
    1562:	57 95       	ror	r21
    1564:	47 95       	ror	r20
    1566:	37 95       	ror	r19
    1568:	27 95       	ror	r18
    156a:	ba 95       	dec	r27
    156c:	c9 f7       	brne	.-14     	; 0x1560 <__ultoa_invert+0xa2>
    156e:	62 0f       	add	r22, r18
    1570:	73 1f       	adc	r23, r19
    1572:	84 1f       	adc	r24, r20
    1574:	95 1f       	adc	r25, r21
    1576:	a0 1d       	adc	r26, r0
    1578:	08 95       	ret

0000157a <_exit>:
    157a:	f8 94       	cli

0000157c <__stop_program>:
    157c:	ff cf       	rjmp	.-2      	; 0x157c <__stop_program>

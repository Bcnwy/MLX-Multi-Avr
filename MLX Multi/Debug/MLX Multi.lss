
MLX Multi.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000003e  00800100  00001a04  00001a98  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001a04  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000040  0080013e  0080013e  00001ad6  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001ad6  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001b34  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000188  00000000  00000000  00001b74  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000212b  00000000  00000000  00001cfc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000b7b  00000000  00000000  00003e27  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000007b2  00000000  00000000  000049a2  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000418  00000000  00000000  00005154  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000876  00000000  00000000  0000556c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001173  00000000  00000000  00005de2  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000168  00000000  00000000  00006f55  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 b6 00 	jmp	0x16c	; 0x16c <__ctors_end>
       4:	0c 94 de 00 	jmp	0x1bc	; 0x1bc <__bad_interrupt>
       8:	0c 94 de 00 	jmp	0x1bc	; 0x1bc <__bad_interrupt>
       c:	0c 94 de 00 	jmp	0x1bc	; 0x1bc <__bad_interrupt>
      10:	0c 94 de 00 	jmp	0x1bc	; 0x1bc <__bad_interrupt>
      14:	0c 94 de 00 	jmp	0x1bc	; 0x1bc <__bad_interrupt>
      18:	0c 94 de 00 	jmp	0x1bc	; 0x1bc <__bad_interrupt>
      1c:	0c 94 de 00 	jmp	0x1bc	; 0x1bc <__bad_interrupt>
      20:	0c 94 de 00 	jmp	0x1bc	; 0x1bc <__bad_interrupt>
      24:	0c 94 de 00 	jmp	0x1bc	; 0x1bc <__bad_interrupt>
      28:	0c 94 de 00 	jmp	0x1bc	; 0x1bc <__bad_interrupt>
      2c:	0c 94 de 00 	jmp	0x1bc	; 0x1bc <__bad_interrupt>
      30:	0c 94 de 00 	jmp	0x1bc	; 0x1bc <__bad_interrupt>
      34:	0c 94 13 02 	jmp	0x426	; 0x426 <__vector_13>
      38:	0c 94 ee 01 	jmp	0x3dc	; 0x3dc <__vector_14>
      3c:	0c 94 de 00 	jmp	0x1bc	; 0x1bc <__bad_interrupt>
      40:	0c 94 de 00 	jmp	0x1bc	; 0x1bc <__bad_interrupt>
      44:	0c 94 de 00 	jmp	0x1bc	; 0x1bc <__bad_interrupt>
      48:	0c 94 de 00 	jmp	0x1bc	; 0x1bc <__bad_interrupt>
      4c:	0c 94 de 00 	jmp	0x1bc	; 0x1bc <__bad_interrupt>
      50:	0c 94 de 00 	jmp	0x1bc	; 0x1bc <__bad_interrupt>
      54:	0c 94 de 00 	jmp	0x1bc	; 0x1bc <__bad_interrupt>
      58:	0c 94 de 00 	jmp	0x1bc	; 0x1bc <__bad_interrupt>
      5c:	0c 94 de 00 	jmp	0x1bc	; 0x1bc <__bad_interrupt>
      60:	0c 94 de 00 	jmp	0x1bc	; 0x1bc <__bad_interrupt>
      64:	0c 94 de 00 	jmp	0x1bc	; 0x1bc <__bad_interrupt>

00000068 <__trampolines_end>:
      68:	6e 61       	ori	r22, 0x1E	; 30
      6a:	6e 00       	.word	0x006e	; ????

0000006c <__c.2177>:
      6c:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      7c:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
      8c:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
      9c:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
      ac:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
      bc:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
      cc:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
      dc:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
      ec:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
      fc:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     10c:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     11c:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     12c:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     13c:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     14c:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     15c:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

0000016a <__ctors_start>:
     16a:	62 04       	cpc	r6, r2

0000016c <__ctors_end>:
     16c:	11 24       	eor	r1, r1
     16e:	1f be       	out	0x3f, r1	; 63
     170:	cf ef       	ldi	r28, 0xFF	; 255
     172:	d8 e0       	ldi	r29, 0x08	; 8
     174:	de bf       	out	0x3e, r29	; 62
     176:	cd bf       	out	0x3d, r28	; 61

00000178 <__do_copy_data>:
     178:	11 e0       	ldi	r17, 0x01	; 1
     17a:	a0 e0       	ldi	r26, 0x00	; 0
     17c:	b1 e0       	ldi	r27, 0x01	; 1
     17e:	e4 e0       	ldi	r30, 0x04	; 4
     180:	fa e1       	ldi	r31, 0x1A	; 26
     182:	02 c0       	rjmp	.+4      	; 0x188 <__do_copy_data+0x10>
     184:	05 90       	lpm	r0, Z+
     186:	0d 92       	st	X+, r0
     188:	ae 33       	cpi	r26, 0x3E	; 62
     18a:	b1 07       	cpc	r27, r17
     18c:	d9 f7       	brne	.-10     	; 0x184 <__do_copy_data+0xc>

0000018e <__do_clear_bss>:
     18e:	21 e0       	ldi	r18, 0x01	; 1
     190:	ae e3       	ldi	r26, 0x3E	; 62
     192:	b1 e0       	ldi	r27, 0x01	; 1
     194:	01 c0       	rjmp	.+2      	; 0x198 <.do_clear_bss_start>

00000196 <.do_clear_bss_loop>:
     196:	1d 92       	st	X+, r1

00000198 <.do_clear_bss_start>:
     198:	ae 37       	cpi	r26, 0x7E	; 126
     19a:	b2 07       	cpc	r27, r18
     19c:	e1 f7       	brne	.-8      	; 0x196 <.do_clear_bss_loop>

0000019e <__do_global_ctors>:
     19e:	10 e0       	ldi	r17, 0x00	; 0
     1a0:	c6 eb       	ldi	r28, 0xB6	; 182
     1a2:	d0 e0       	ldi	r29, 0x00	; 0
     1a4:	04 c0       	rjmp	.+8      	; 0x1ae <__do_global_ctors+0x10>
     1a6:	21 97       	sbiw	r28, 0x01	; 1
     1a8:	fe 01       	movw	r30, r28
     1aa:	0e 94 48 0b 	call	0x1690	; 0x1690 <__tablejump2__>
     1ae:	c5 3b       	cpi	r28, 0xB5	; 181
     1b0:	d1 07       	cpc	r29, r17
     1b2:	c9 f7       	brne	.-14     	; 0x1a6 <__do_global_ctors+0x8>
     1b4:	0e 94 44 04 	call	0x888	; 0x888 <main>
     1b8:	0c 94 00 0d 	jmp	0x1a00	; 0x1a00 <_exit>

000001bc <__bad_interrupt>:
     1bc:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001c0 <_ZN17Adafruit_MLX90614C1Eh>:
 ****************************************************/

#include "Adafruit_MLX90614.h"
#include "uart.h"
  
Adafruit_MLX90614::Adafruit_MLX90614(uint8_t i2caddr) {
     1c0:	1f 93       	push	r17
     1c2:	cf 93       	push	r28
     1c4:	df 93       	push	r29
     1c6:	ec 01       	movw	r28, r24
     1c8:	16 2f       	mov	r17, r22
	  }
 class I2c
 {
 public:
    I2c()
    {
     1ca:	18 86       	std	Y+8, r1	; 0x08
     1cc:	19 86       	std	Y+9, r1	; 0x09
	    i2c_init();
     1ce:	0e 94 77 04 	call	0x8ee	; 0x8ee <i2c_init>
  _addr = i2caddr;
     1d2:	1a 87       	std	Y+10, r17	; 0x0a
}
     1d4:	df 91       	pop	r29
     1d6:	cf 91       	pop	r28
     1d8:	1f 91       	pop	r17
     1da:	08 95       	ret

000001dc <_ZN17Adafruit_MLX906146read16Eh>:
  return temp;
}

/*********************************************************************/

uint16_t Adafruit_MLX90614::read16(uint8_t a) {
     1dc:	0f 93       	push	r16
     1de:	1f 93       	push	r17
     1e0:	cf 93       	push	r28
     1e2:	8c 01       	movw	r16, r24
     1e4:	c6 2f       	mov	r28, r22
  uint16_t ret;
  Wire.beginTransmission(_addr); // start transmission to device 
     1e6:	fc 01       	movw	r30, r24
     1e8:	82 85       	ldd	r24, Z+10	; 0x0a
    }
     void beginTransmission(uint8_t address)
     {
         m_bufferIndex = 0;
     1ea:	10 86       	std	Z+8, r1	; 0x08

         i2c_start((address << 1) | I2C_WRITE);
     1ec:	88 0f       	add	r24, r24
     1ee:	0e 94 80 04 	call	0x900	; 0x900 <i2c_start>
     }

     void write(uint8_t byte)
     {
         if (m_bufferIndex == c_bufferSize)
     1f2:	f8 01       	movw	r30, r16
     1f4:	80 85       	ldd	r24, Z+8	; 0x08
     1f6:	88 30       	cpi	r24, 0x08	; 8
     1f8:	59 f0       	breq	.+22     	; 0x210 <_ZN17Adafruit_MLX906146read16Eh+0x34>
             return;

         m_buffer[m_bufferIndex++] = byte;
     1fa:	91 e0       	ldi	r25, 0x01	; 1
     1fc:	98 0f       	add	r25, r24
     1fe:	90 87       	std	Z+8, r25	; 0x08
     200:	e8 0f       	add	r30, r24
     202:	f1 1d       	adc	r31, r1
     204:	c0 83       	st	Z, r28
    }

    void endTransmission(bool stop = true)
    {
         for (uint8_t index = 0; index < m_bufferIndex; ++index) {
     206:	f8 01       	movw	r30, r16
     208:	80 85       	ldd	r24, Z+8	; 0x08
     20a:	88 23       	and	r24, r24
     20c:	09 f4       	brne	.+2      	; 0x210 <_ZN17Adafruit_MLX906146read16Eh+0x34>
     20e:	4e c0       	rjmp	.+156    	; 0x2ac <_ZN17Adafruit_MLX906146read16Eh+0xd0>
  return temp;
}

/*********************************************************************/

uint16_t Adafruit_MLX90614::read16(uint8_t a) {
     210:	c0 e0       	ldi	r28, 0x00	; 0
             if (i2c_write(m_buffer[index]) != 0)
     212:	f8 01       	movw	r30, r16
     214:	ec 0f       	add	r30, r28
     216:	f1 1d       	adc	r31, r1
     218:	80 81       	ld	r24, Z
     21a:	0e 94 ab 04 	call	0x956	; 0x956 <i2c_write>
     21e:	81 11       	cpse	r24, r1
     220:	45 c0       	rjmp	.+138    	; 0x2ac <_ZN17Adafruit_MLX906146read16Eh+0xd0>
         m_buffer[m_bufferIndex++] = byte;
    }

    void endTransmission(bool stop = true)
    {
         for (uint8_t index = 0; index < m_bufferIndex; ++index) {
     222:	cf 5f       	subi	r28, 0xFF	; 255
     224:	f8 01       	movw	r30, r16
     226:	80 85       	ldd	r24, Z+8	; 0x08
     228:	c8 17       	cp	r28, r24
     22a:	98 f3       	brcs	.-26     	; 0x212 <_ZN17Adafruit_MLX906146read16Eh+0x36>
     22c:	3f c0       	rjmp	.+126    	; 0x2ac <_ZN17Adafruit_MLX906146read16Eh+0xd0>
         return m_bufferIndex;
     }

     uint8_t read()
     {
         if (m_bufferReadIndex == m_bufferIndex)
     22e:	f8 01       	movw	r30, r16
     230:	91 85       	ldd	r25, Z+9	; 0x09
     232:	80 85       	ldd	r24, Z+8	; 0x08
     234:	98 17       	cp	r25, r24
     236:	b1 f0       	breq	.+44     	; 0x264 <_ZN17Adafruit_MLX906146read16Eh+0x88>
             return 0;
        return m_buffer[m_bufferReadIndex++];
     238:	41 e0       	ldi	r20, 0x01	; 1
     23a:	49 0f       	add	r20, r25
     23c:	41 87       	std	Z+9, r20	; 0x09
     23e:	e9 0f       	add	r30, r25
     240:	f1 1d       	adc	r31, r1
  Wire.beginTransmission(_addr); // start transmission to device 
  Wire.write(a); // sends register address to read from
  Wire.endTransmission(false); // end transmission
  
  Wire.requestFrom(_addr, (uint8_t)3);// send data n-bytes read
  ret = Wire.read(); // receive DATA
     242:	20 81       	ld	r18, Z
     244:	30 e0       	ldi	r19, 0x00	; 0
         return m_bufferIndex;
     }

     uint8_t read()
     {
         if (m_bufferReadIndex == m_bufferIndex)
     246:	84 17       	cp	r24, r20
     248:	d1 f1       	breq	.+116    	; 0x2be <_ZN17Adafruit_MLX906146read16Eh+0xe2>
             return 0;
        return m_buffer[m_bufferReadIndex++];
     24a:	9e 5f       	subi	r25, 0xFE	; 254
     24c:	f8 01       	movw	r30, r16
     24e:	91 87       	std	Z+9, r25	; 0x09
     250:	e4 0f       	add	r30, r20
     252:	f1 1d       	adc	r31, r1
  ret |= Wire.read() << 8; // receive DATA
     254:	40 81       	ld	r20, Z
     256:	34 2b       	or	r19, r20
         return m_bufferIndex;
     }

     uint8_t read()
     {
         if (m_bufferReadIndex == m_bufferIndex)
     258:	98 17       	cp	r25, r24
     25a:	89 f1       	breq	.+98     	; 0x2be <_ZN17Adafruit_MLX906146read16Eh+0xe2>
             return 0;
        return m_buffer[m_bufferReadIndex++];
     25c:	9f 5f       	subi	r25, 0xFF	; 255
     25e:	f8 01       	movw	r30, r16
     260:	91 87       	std	Z+9, r25	; 0x09
     262:	2d c0       	rjmp	.+90     	; 0x2be <_ZN17Adafruit_MLX906146read16Eh+0xe2>
     264:	20 e0       	ldi	r18, 0x00	; 0
     266:	30 e0       	ldi	r19, 0x00	; 0
     268:	2a c0       	rjmp	.+84     	; 0x2be <_ZN17Adafruit_MLX906146read16Eh+0xe2>
         if (i2c_start((address << 1) | I2C_READ) != 0)
             return 0;

        m_bufferIndex = 0;
         while (--quantity > 0) {
             m_buffer[m_bufferIndex++] = i2c_readAck();
     26a:	81 e0       	ldi	r24, 0x01	; 1
     26c:	f8 01       	movw	r30, r16
     26e:	80 87       	std	Z+8, r24	; 0x08
     270:	0e 94 bd 04 	call	0x97a	; 0x97a <i2c_readAck>
     274:	f8 01       	movw	r30, r16
     276:	80 83       	st	Z, r24
     278:	c0 85       	ldd	r28, Z+8	; 0x08
     27a:	81 e0       	ldi	r24, 0x01	; 1
     27c:	8c 0f       	add	r24, r28
     27e:	80 87       	std	Z+8, r24	; 0x08
     280:	0e 94 bd 04 	call	0x97a	; 0x97a <i2c_readAck>
     284:	f8 01       	movw	r30, r16
     286:	ec 0f       	add	r30, r28
     288:	f1 1d       	adc	r31, r1
     28a:	80 83       	st	Z, r24
         }
         m_buffer[m_bufferIndex++] = i2c_readNak();
     28c:	f8 01       	movw	r30, r16
     28e:	c0 85       	ldd	r28, Z+8	; 0x08
     290:	81 e0       	ldi	r24, 0x01	; 1
     292:	8c 0f       	add	r24, r28
     294:	80 87       	std	Z+8, r24	; 0x08
     296:	0e 94 c8 04 	call	0x990	; 0x990 <i2c_readNak>
     29a:	f8 01       	movw	r30, r16
     29c:	ec 0f       	add	r30, r28
     29e:	f1 1d       	adc	r31, r1
     2a0:	80 83       	st	Z, r24
         m_bufferReadIndex = 0;
     2a2:	f8 01       	movw	r30, r16
     2a4:	11 86       	std	Z+9, r1	; 0x09

         if (stop)
             i2c_stop();
     2a6:	0e 94 a7 04 	call	0x94e	; 0x94e <i2c_stop>
     2aa:	c1 cf       	rjmp	.-126    	; 0x22e <_ZN17Adafruit_MLX906146read16Eh+0x52>
     {
        // quantity = Sensors::min(quantity, c_bufferSize);
         if (quantity == 0)
             return 0;

         if (i2c_start((address << 1) | I2C_READ) != 0)
     2ac:	f8 01       	movw	r30, r16
     2ae:	82 85       	ldd	r24, Z+10	; 0x0a
     2b0:	88 0f       	add	r24, r24
     2b2:	81 60       	ori	r24, 0x01	; 1
     2b4:	0e 94 80 04 	call	0x900	; 0x900 <i2c_start>
     2b8:	88 23       	and	r24, r24
     2ba:	b9 f2       	breq	.-82     	; 0x26a <_ZN17Adafruit_MLX906146read16Eh+0x8e>
     2bc:	b8 cf       	rjmp	.-144    	; 0x22e <_ZN17Adafruit_MLX906146read16Eh+0x52>

  uint8_t pec = Wire.read();

  return ret;
}
     2be:	c9 01       	movw	r24, r18
     2c0:	cf 91       	pop	r28
     2c2:	1f 91       	pop	r17
     2c4:	0f 91       	pop	r16
     2c6:	08 95       	ret

000002c8 <_ZN17Adafruit_MLX906148readTempEh>:
  return readTemp(MLX90614_TA);
}

float Adafruit_MLX90614::readTemp(uint8_t reg) {
  float temp;
  temp = read16(reg);
     2c8:	0e 94 ee 00 	call	0x1dc	; 0x1dc <_ZN17Adafruit_MLX906146read16Eh>
     2cc:	bc 01       	movw	r22, r24
     2ce:	80 e0       	ldi	r24, 0x00	; 0
     2d0:	90 e0       	ldi	r25, 0x00	; 0
     2d2:	0e 94 4f 06 	call	0xc9e	; 0xc9e <__floatunsisf>
  temp *= .02;
     2d6:	2a e0       	ldi	r18, 0x0A	; 10
     2d8:	37 ed       	ldi	r19, 0xD7	; 215
     2da:	43 ea       	ldi	r20, 0xA3	; 163
     2dc:	5c e3       	ldi	r21, 0x3C	; 60
     2de:	0e 94 e2 06 	call	0xdc4	; 0xdc4 <__mulsf3>
  temp  -= 273.15;
     2e2:	23 e3       	ldi	r18, 0x33	; 51
     2e4:	33 e9       	ldi	r19, 0x93	; 147
     2e6:	48 e8       	ldi	r20, 0x88	; 136
     2e8:	53 e4       	ldi	r21, 0x43	; 67
     2ea:	0e 94 3a 05 	call	0xa74	; 0xa74 <__subsf3>
  return temp;
}
     2ee:	08 95       	ret

000002f0 <_ZN17Adafruit_MLX9061415readObjectTempCEv>:
  _addr = i2caddr;
}
//////////////////////////////////////////////////////

double Adafruit_MLX90614::readObjectTempC(void) {
  return readTemp(MLX90614_TOBJ1);
     2f0:	67 e0       	ldi	r22, 0x07	; 7
     2f2:	0e 94 64 01 	call	0x2c8	; 0x2c8 <_ZN17Adafruit_MLX906148readTempEh>
}
     2f6:	08 95       	ret

000002f8 <_ZN17Adafruit_MLX9061416readAmbientTempCEv>:


double Adafruit_MLX90614::readAmbientTempC(void) {
  return readTemp(MLX90614_TA);
     2f8:	66 e0       	ldi	r22, 0x06	; 6
     2fa:	0e 94 64 01 	call	0x2c8	; 0x2c8 <_ZN17Adafruit_MLX906148readTempEh>
}
     2fe:	08 95       	ret

00000300 <_ZN7HC_SR044initEv>:
// Anything over 400/500 cm (23200/29410 us pulse) is "out of range"
const unsigned long MAX_DIST = 23200;
  
void HC_SR04::init() {
  // The Trigger pin will tell the sensor to range find
  DDRD = 0x20;
     300:	80 e2       	ldi	r24, 0x20	; 32
     302:	8a b9       	out	0x0a, r24	; 10
  PORTD = 0x00;
     304:	1b b8       	out	0x0b, r1	; 11
  clr_pin(PORTD, TRIG_PIN);  
     306:	5d 98       	cbi	0x0b, 5	; 11
     308:	08 95       	ret

0000030a <_ZN7HC_SR044readEv>:
}
uint8_t HC_SR04::read(){
     30a:	cf 92       	push	r12
     30c:	df 92       	push	r13
     30e:	ef 92       	push	r14
     310:	ff 92       	push	r15
     312:	0f 93       	push	r16
     314:	1f 93       	push	r17
     316:	cf 93       	push	r28
     318:	8c 01       	movw	r16, r24
	float t1;
	float t2;
	float pulse_width;
	
	//set_micro(0);
	clr_pin(PORTD, TRIG_PIN);
     31a:	5d 98       	cbi	0x0b, 5	; 11
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     31c:	8a e0       	ldi	r24, 0x0A	; 10
     31e:	8a 95       	dec	r24
     320:	f1 f7       	brne	.-4      	; 0x31e <_ZN7HC_SR044readEv+0x14>
     322:	00 c0       	rjmp	.+0      	; 0x324 <_ZN7HC_SR044readEv+0x1a>
	_delay_us(2);
	// Hold the trigger pin high for at least 10 us
	set_pin(PORTD, TRIG_PIN);
     324:	5d 9a       	sbi	0x0b, 5	; 11
     326:	ea e6       	ldi	r30, 0x6A	; 106
     328:	ea 95       	dec	r30
     32a:	f1 f7       	brne	.-4      	; 0x328 <_ZN7HC_SR044readEv+0x1e>
     32c:	00 c0       	rjmp	.+0      	; 0x32e <_ZN7HC_SR044readEv+0x24>
	_delay_us(20);
	clr_pin(PORTD, TRIG_PIN);
     32e:	5d 98       	cbi	0x0b, 5	; 11
	
	// Wait for pulse on echo pin
	while ((PIND & _BV(ECHO_PIN)) == 0 );
     330:	4e 9b       	sbis	0x09, 6	; 9
     332:	fe cf       	rjmp	.-4      	; 0x330 <_ZN7HC_SR044readEv+0x26>
	// Measure how long the echo pin was held high (pulse width)
	// Note: the micros() counter will overflow after ~70 min
	TCNT1 = 0;
     334:	e4 e8       	ldi	r30, 0x84	; 132
     336:	f0 e0       	ldi	r31, 0x00	; 0
     338:	11 82       	std	Z+1, r1	; 0x01
     33a:	10 82       	st	Z, r1
	t1 = TCNT1 ;
     33c:	60 81       	ld	r22, Z
     33e:	71 81       	ldd	r23, Z+1	; 0x01
     340:	80 e0       	ldi	r24, 0x00	; 0
     342:	90 e0       	ldi	r25, 0x00	; 0
     344:	0e 94 4f 06 	call	0xc9e	; 0xc9e <__floatunsisf>
     348:	6b 01       	movw	r12, r22
     34a:	7c 01       	movw	r14, r24
	cli();
     34c:	f8 94       	cli

	while ((PIND & _BV(ECHO_PIN)) != 0);
     34e:	99 b1       	in	r25, 0x09	; 9
     350:	c9 2f       	mov	r28, r25
     352:	c0 74       	andi	r28, 0x40	; 64
     354:	96 fd       	sbrc	r25, 6
     356:	fb cf       	rjmp	.-10     	; 0x34e <_ZN7HC_SR044readEv+0x44>
	sei();
     358:	78 94       	sei
	t2 = TCNT1 ;
     35a:	40 91 84 00 	lds	r20, 0x0084
     35e:	50 91 85 00 	lds	r21, 0x0085
     362:	ba 01       	movw	r22, r20
     364:	80 e0       	ldi	r24, 0x00	; 0
     366:	90 e0       	ldi	r25, 0x00	; 0
     368:	0e 94 4f 06 	call	0xc9e	; 0xc9e <__floatunsisf>
	
	pulse_width = (t2 - t1)* 0.5;
     36c:	a7 01       	movw	r20, r14
     36e:	96 01       	movw	r18, r12
     370:	0e 94 3a 05 	call	0xa74	; 0xa74 <__subsf3>
     374:	20 e0       	ldi	r18, 0x00	; 0
     376:	30 e0       	ldi	r19, 0x00	; 0
     378:	40 e0       	ldi	r20, 0x00	; 0
     37a:	5f e3       	ldi	r21, 0x3F	; 63
     37c:	0e 94 e2 06 	call	0xdc4	; 0xdc4 <__mulsf3>
     380:	6b 01       	movw	r12, r22
     382:	7c 01       	movw	r14, r24
	
	if ( pulse_width > MAX_DIST ) {
     384:	20 e0       	ldi	r18, 0x00	; 0
     386:	30 e4       	ldi	r19, 0x40	; 64
     388:	45 eb       	ldi	r20, 0xB5	; 181
     38a:	56 e4       	ldi	r21, 0x46	; 70
     38c:	0e 94 dd 06 	call	0xdba	; 0xdba <__gesf2>
     390:	18 16       	cp	r1, r24
     392:	74 f4       	brge	.+28     	; 0x3b0 <_ZN7HC_SR044readEv+0xa6>
		//void send_int(int d);
		void send(double data, int base);
		//void send(uint32_t str);
			
		void sendln(void) {send("\r\n");};
		void sendln(const char* c) {send(c);send("\r\n");};
     394:	60 e0       	ldi	r22, 0x00	; 0
     396:	71 e0       	ldi	r23, 0x01	; 1
     398:	86 e7       	ldi	r24, 0x76	; 118
     39a:	91 e0       	ldi	r25, 0x01	; 1
     39c:	0e 94 25 05 	call	0xa4a	; 0xa4a <_ZN5USART4sendEPKc>
     3a0:	6b e3       	ldi	r22, 0x3B	; 59
     3a2:	71 e0       	ldi	r23, 0x01	; 1
     3a4:	86 e7       	ldi	r24, 0x76	; 118
     3a6:	91 e0       	ldi	r25, 0x01	; 1
     3a8:	0e 94 25 05 	call	0xa4a	; 0xa4a <_ZN5USART4sendEPKc>
		Serial.sendln("Out of range");
		pulse_width = MAX_DIST;
		return 1;
     3ac:	c1 e0       	ldi	r28, 0x01	; 1
     3ae:	0d c0       	rjmp	.+26     	; 0x3ca <_ZN7HC_SR044readEv+0xc0>
	}
	// Calculate distance in centimeters and inches. The constants
	// are found in the data-sheet, and calculated from the assumed speed 
	//of sound in air at sea level (~340 m/s).
	cm = pulse_width/ 58;
     3b0:	20 e0       	ldi	r18, 0x00	; 0
     3b2:	30 e0       	ldi	r19, 0x00	; 0
     3b4:	48 e6       	ldi	r20, 0x68	; 104
     3b6:	52 e4       	ldi	r21, 0x42	; 66
     3b8:	c7 01       	movw	r24, r14
     3ba:	b6 01       	movw	r22, r12
     3bc:	0e 94 a7 05 	call	0xb4e	; 0xb4e <__divsf3>
	Distance = cm;
     3c0:	f8 01       	movw	r30, r16
     3c2:	60 83       	st	Z, r22
     3c4:	71 83       	std	Z+1, r23	; 0x01
     3c6:	82 83       	std	Z+2, r24	; 0x02
     3c8:	93 83       	std	Z+3, r25	; 0x03
	return 0;
}
     3ca:	8c 2f       	mov	r24, r28
     3cc:	cf 91       	pop	r28
     3ce:	1f 91       	pop	r17
     3d0:	0f 91       	pop	r16
     3d2:	ff 90       	pop	r15
     3d4:	ef 90       	pop	r14
     3d6:	df 90       	pop	r13
     3d8:	cf 90       	pop	r12
     3da:	08 95       	ret

000003dc <__vector_14>:

HC_SR04 sonic;

volatile unsigned long int count = 0; 
ISR(TIMER0_COMPA_vect)
{
     3dc:	1f 92       	push	r1
     3de:	0f 92       	push	r0
     3e0:	0f b6       	in	r0, 0x3f	; 63
     3e2:	0f 92       	push	r0
     3e4:	11 24       	eor	r1, r1
     3e6:	8f 93       	push	r24
     3e8:	9f 93       	push	r25
     3ea:	af 93       	push	r26
     3ec:	bf 93       	push	r27
	count++;
     3ee:	80 91 3e 01 	lds	r24, 0x013E
     3f2:	90 91 3f 01 	lds	r25, 0x013F
     3f6:	a0 91 40 01 	lds	r26, 0x0140
     3fa:	b0 91 41 01 	lds	r27, 0x0141
     3fe:	01 96       	adiw	r24, 0x01	; 1
     400:	a1 1d       	adc	r26, r1
     402:	b1 1d       	adc	r27, r1
     404:	80 93 3e 01 	sts	0x013E, r24
     408:	90 93 3f 01 	sts	0x013F, r25
     40c:	a0 93 40 01 	sts	0x0140, r26
     410:	b0 93 41 01 	sts	0x0141, r27
}
     414:	bf 91       	pop	r27
     416:	af 91       	pop	r26
     418:	9f 91       	pop	r25
     41a:	8f 91       	pop	r24
     41c:	0f 90       	pop	r0
     41e:	0f be       	out	0x3f, r0	; 63
     420:	0f 90       	pop	r0
     422:	1f 90       	pop	r1
     424:	18 95       	reti

00000426 <__vector_13>:

ISR(TIMER1_OVF_vect){
     426:	1f 92       	push	r1
     428:	0f 92       	push	r0
     42a:	0f b6       	in	r0, 0x3f	; 63
     42c:	0f 92       	push	r0
     42e:	11 24       	eor	r1, r1
	//PORTB ^= _BV(PORTB5);
	//TIFR1 = 0;
}
     430:	0f 90       	pop	r0
     432:	0f be       	out	0x3f, r0	; 63
     434:	0f 90       	pop	r0
     436:	1f 90       	pop	r1
     438:	18 95       	reti

0000043a <_Z5setupv>:
	return count;
}
/*********************************************************************/
void setup(void)
{		
	cli();
     43a:	f8 94       	cli
	uint8_t rflag = MCUSR;
     43c:	84 b7       	in	r24, 0x34	; 52
	MCUSR = 0;
     43e:	14 be       	out	0x34, r1	; 52
	
	//DDRB |= _BV(PORTB5);
	//PORTB &= ~_BV(PORTB5);
	
	TCNT0 = 0;
     440:	16 bc       	out	0x26, r1	; 38
	TCNT1 = 0;
     442:	10 92 85 00 	sts	0x0085, r1
     446:	10 92 84 00 	sts	0x0084, r1
	TCCR0A |= (1<<WGM01);
     44a:	84 b5       	in	r24, 0x24	; 36
     44c:	82 60       	ori	r24, 0x02	; 2
     44e:	84 bd       	out	0x24, r24	; 36
	OCR0A = 249;
     450:	89 ef       	ldi	r24, 0xF9	; 249
     452:	87 bd       	out	0x27, r24	; 39
	TIMSK0 |= (1 << OCIE0A);
     454:	ee e6       	ldi	r30, 0x6E	; 110
     456:	f0 e0       	ldi	r31, 0x00	; 0
     458:	80 81       	ld	r24, Z
     45a:	82 60       	ori	r24, 0x02	; 2
     45c:	80 83       	st	Z, r24
	TIMSK1 |= _BV(TOIE1);
     45e:	ef e6       	ldi	r30, 0x6F	; 111
     460:	f0 e0       	ldi	r31, 0x00	; 0
     462:	80 81       	ld	r24, Z
     464:	81 60       	ori	r24, 0x01	; 1
     466:	80 83       	st	Z, r24
	TCCR0B |= (1<<CS01) | (1<<CS00);
     468:	85 b5       	in	r24, 0x25	; 37
     46a:	83 60       	ori	r24, 0x03	; 3
     46c:	85 bd       	out	0x25, r24	; 37
	TCCR1B |= (1<<CS11);
     46e:	e1 e8       	ldi	r30, 0x81	; 129
     470:	f0 e0       	ldi	r31, 0x00	; 0
     472:	80 81       	ld	r24, Z
     474:	82 60       	ori	r24, 0x02	; 2
     476:	80 83       	st	Z, r24
	sei();
     478:	78 94       	sei
	Serial.init(9600);
     47a:	60 e8       	ldi	r22, 0x80	; 128
     47c:	75 e2       	ldi	r23, 0x25	; 37
     47e:	86 e7       	ldi	r24, 0x76	; 118
     480:	91 e0       	ldi	r25, 0x01	; 1
     482:	0e 94 d3 04 	call	0x9a6	; 0x9a6 <_ZN5USART4initEi>
	sonic.init();
     486:	82 e4       	ldi	r24, 0x42	; 66
     488:	91 e0       	ldi	r25, 0x01	; 1
     48a:	0e 94 80 01 	call	0x300	; 0x300 <_ZN7HC_SR044initEv>
     48e:	08 95       	ret

00000490 <_Z13IR_sensorReadv>:
		Serial.sendln("> Booting...");	
	#endif // _DEBUG
}
/*********************************************************************/
void IR_sensorRead(void )
{
     490:	2f 92       	push	r2
     492:	3f 92       	push	r3
     494:	4f 92       	push	r4
     496:	5f 92       	push	r5
     498:	6f 92       	push	r6
     49a:	7f 92       	push	r7
     49c:	8f 92       	push	r8
     49e:	9f 92       	push	r9
     4a0:	af 92       	push	r10
     4a2:	bf 92       	push	r11
     4a4:	cf 92       	push	r12
     4a6:	df 92       	push	r13
     4a8:	ef 92       	push	r14
     4aa:	ff 92       	push	r15
     4ac:	0f 93       	push	r16
     4ae:	1f 93       	push	r17
     4b0:	cf 93       	push	r28
     4b2:	df 93       	push	r29
     4b4:	cd b7       	in	r28, 0x3d	; 61
     4b6:	de b7       	in	r29, 0x3e	; 62
     4b8:	c3 59       	subi	r28, 0x93	; 147
     4ba:	d1 09       	sbc	r29, r1
     4bc:	0f b6       	in	r0, 0x3f	; 63
     4be:	f8 94       	cli
     4c0:	de bf       	out	0x3e, r29	; 62
     4c2:	0f be       	out	0x3f, r0	; 63
     4c4:	cd bf       	out	0x3d, r28	; 61
	char str[25];
	char str_out[100] = {""};
     4c6:	19 82       	std	Y+1, r1	; 0x01
     4c8:	1a 82       	std	Y+2, r1	; 0x02
     4ca:	1b 82       	std	Y+3, r1	; 0x03
     4cc:	1c 82       	std	Y+4, r1	; 0x04
     4ce:	fe 01       	movw	r30, r28
     4d0:	35 96       	adiw	r30, 0x05	; 5
     4d2:	80 e6       	ldi	r24, 0x60	; 96
     4d4:	df 01       	movw	r26, r30
     4d6:	1d 92       	st	X+, r1
     4d8:	8a 95       	dec	r24
     4da:	e9 f7       	brne	.-6      	; 0x4d6 <_Z13IR_sensorReadv+0x46>
	double obj_1,obj_2,obj_3,obj_4,amb_1,amb_2,amb_3,amb_4;
	unsigned long int m_read_time = 0;

	sonic.read();
     4dc:	82 e4       	ldi	r24, 0x42	; 66
     4de:	91 e0       	ldi	r25, 0x01	; 1
     4e0:	0e 94 85 01 	call	0x30a	; 0x30a <_ZN7HC_SR044readEv>
	//TIFR1 = 0;
}
/*********************************************************************/
unsigned long int millis(void)
{
	return count;
     4e4:	c0 90 3e 01 	lds	r12, 0x013E
     4e8:	d0 90 3f 01 	lds	r13, 0x013F
     4ec:	e0 90 40 01 	lds	r14, 0x0140
     4f0:	f0 90 41 01 	lds	r15, 0x0141
	m_read_time = millis();
	#ifdef _DEBUG
		//Serial.sendln("> Read 0x5a...");
	#endif
				
	obj_1 = MLX_5a.readObjectTempC();
     4f4:	8b e6       	ldi	r24, 0x6B	; 107
     4f6:	91 e0       	ldi	r25, 0x01	; 1
     4f8:	0e 94 78 01 	call	0x2f0	; 0x2f0 <_ZN17Adafruit_MLX9061415readObjectTempCEv>
     4fc:	16 2f       	mov	r17, r22
     4fe:	07 2f       	mov	r16, r23
     500:	b8 2e       	mov	r11, r24
     502:	a9 2e       	mov	r10, r25
	amb_1 = MLX_5a.readAmbientTempC();
     504:	8b e6       	ldi	r24, 0x6B	; 107
     506:	91 e0       	ldi	r25, 0x01	; 1
     508:	0e 94 7c 01 	call	0x2f8	; 0x2f8 <_ZN17Adafruit_MLX9061416readAmbientTempCEv>
     50c:	56 2e       	mov	r5, r22
     50e:	47 2e       	mov	r4, r23
     510:	38 2e       	mov	r3, r24
     512:	29 2e       	mov	r2, r25
	//Read 0x5B
	obj_2 = MLX_5b.readObjectTempC();
     514:	80 e6       	ldi	r24, 0x60	; 96
     516:	91 e0       	ldi	r25, 0x01	; 1
     518:	0e 94 78 01 	call	0x2f0	; 0x2f0 <_ZN17Adafruit_MLX9061415readObjectTempCEv>
     51c:	ef 96       	adiw	r28, 0x3f	; 63
     51e:	6f af       	std	Y+63, r22	; 0x3f
     520:	ef 97       	sbiw	r28, 0x3f	; 63
     522:	c1 58       	subi	r28, 0x81	; 129
     524:	df 4f       	sbci	r29, 0xFF	; 255
     526:	78 83       	st	Y, r23
     528:	cf 57       	subi	r28, 0x7F	; 127
     52a:	d0 40       	sbci	r29, 0x00	; 0
     52c:	c0 58       	subi	r28, 0x80	; 128
     52e:	df 4f       	sbci	r29, 0xFF	; 255
     530:	88 83       	st	Y, r24
     532:	c0 58       	subi	r28, 0x80	; 128
     534:	d0 40       	sbci	r29, 0x00	; 0
     536:	cf 57       	subi	r28, 0x7F	; 127
     538:	df 4f       	sbci	r29, 0xFF	; 255
     53a:	98 83       	st	Y, r25
     53c:	c1 58       	subi	r28, 0x81	; 129
     53e:	d0 40       	sbci	r29, 0x00	; 0
	amb_2 = MLX_5b.readAmbientTempC();
     540:	80 e6       	ldi	r24, 0x60	; 96
     542:	91 e0       	ldi	r25, 0x01	; 1
     544:	0e 94 7c 01 	call	0x2f8	; 0x2f8 <_ZN17Adafruit_MLX9061416readAmbientTempCEv>
     548:	ce 57       	subi	r28, 0x7E	; 126
     54a:	df 4f       	sbci	r29, 0xFF	; 255
     54c:	68 83       	st	Y, r22
     54e:	c2 58       	subi	r28, 0x82	; 130
     550:	d0 40       	sbci	r29, 0x00	; 0
     552:	cd 57       	subi	r28, 0x7D	; 125
     554:	df 4f       	sbci	r29, 0xFF	; 255
     556:	78 83       	st	Y, r23
     558:	c3 58       	subi	r28, 0x83	; 131
     55a:	d0 40       	sbci	r29, 0x00	; 0
     55c:	cc 57       	subi	r28, 0x7C	; 124
     55e:	df 4f       	sbci	r29, 0xFF	; 255
     560:	88 83       	st	Y, r24
     562:	c4 58       	subi	r28, 0x84	; 132
     564:	d0 40       	sbci	r29, 0x00	; 0
     566:	cb 57       	subi	r28, 0x7B	; 123
     568:	df 4f       	sbci	r29, 0xFF	; 255
     56a:	98 83       	st	Y, r25
     56c:	c5 58       	subi	r28, 0x85	; 133
     56e:	d0 40       	sbci	r29, 0x00	; 0
	//Read 0x5C
	obj_3 = MLX_5c.readObjectTempC();
     570:	85 e5       	ldi	r24, 0x55	; 85
     572:	91 e0       	ldi	r25, 0x01	; 1
     574:	0e 94 78 01 	call	0x2f0	; 0x2f0 <_ZN17Adafruit_MLX9061415readObjectTempCEv>
     578:	ca 57       	subi	r28, 0x7A	; 122
     57a:	df 4f       	sbci	r29, 0xFF	; 255
     57c:	68 83       	st	Y, r22
     57e:	c6 58       	subi	r28, 0x86	; 134
     580:	d0 40       	sbci	r29, 0x00	; 0
     582:	c9 57       	subi	r28, 0x79	; 121
     584:	df 4f       	sbci	r29, 0xFF	; 255
     586:	78 83       	st	Y, r23
     588:	c7 58       	subi	r28, 0x87	; 135
     58a:	d0 40       	sbci	r29, 0x00	; 0
     58c:	c8 57       	subi	r28, 0x78	; 120
     58e:	df 4f       	sbci	r29, 0xFF	; 255
     590:	88 83       	st	Y, r24
     592:	c8 58       	subi	r28, 0x88	; 136
     594:	d0 40       	sbci	r29, 0x00	; 0
     596:	c7 57       	subi	r28, 0x77	; 119
     598:	df 4f       	sbci	r29, 0xFF	; 255
     59a:	98 83       	st	Y, r25
     59c:	c9 58       	subi	r28, 0x89	; 137
     59e:	d0 40       	sbci	r29, 0x00	; 0
	amb_3 = MLX_5c.readAmbientTempC();
     5a0:	85 e5       	ldi	r24, 0x55	; 85
     5a2:	91 e0       	ldi	r25, 0x01	; 1
     5a4:	0e 94 7c 01 	call	0x2f8	; 0x2f8 <_ZN17Adafruit_MLX9061416readAmbientTempCEv>
     5a8:	c6 57       	subi	r28, 0x76	; 118
     5aa:	df 4f       	sbci	r29, 0xFF	; 255
     5ac:	68 83       	st	Y, r22
     5ae:	ca 58       	subi	r28, 0x8A	; 138
     5b0:	d0 40       	sbci	r29, 0x00	; 0
     5b2:	c5 57       	subi	r28, 0x75	; 117
     5b4:	df 4f       	sbci	r29, 0xFF	; 255
     5b6:	78 83       	st	Y, r23
     5b8:	cb 58       	subi	r28, 0x8B	; 139
     5ba:	d0 40       	sbci	r29, 0x00	; 0
     5bc:	c4 57       	subi	r28, 0x74	; 116
     5be:	df 4f       	sbci	r29, 0xFF	; 255
     5c0:	88 83       	st	Y, r24
     5c2:	cc 58       	subi	r28, 0x8C	; 140
     5c4:	d0 40       	sbci	r29, 0x00	; 0
     5c6:	c3 57       	subi	r28, 0x73	; 115
     5c8:	df 4f       	sbci	r29, 0xFF	; 255
     5ca:	98 83       	st	Y, r25
     5cc:	cd 58       	subi	r28, 0x8D	; 141
     5ce:	d0 40       	sbci	r29, 0x00	; 0
	//Read 0x5D
	obj_4 = MLX_5d.readObjectTempC();
     5d0:	8a e4       	ldi	r24, 0x4A	; 74
     5d2:	91 e0       	ldi	r25, 0x01	; 1
     5d4:	0e 94 78 01 	call	0x2f0	; 0x2f0 <_ZN17Adafruit_MLX9061415readObjectTempCEv>
     5d8:	c2 57       	subi	r28, 0x72	; 114
     5da:	df 4f       	sbci	r29, 0xFF	; 255
     5dc:	68 83       	st	Y, r22
     5de:	ce 58       	subi	r28, 0x8E	; 142
     5e0:	d0 40       	sbci	r29, 0x00	; 0
     5e2:	c1 57       	subi	r28, 0x71	; 113
     5e4:	df 4f       	sbci	r29, 0xFF	; 255
     5e6:	78 83       	st	Y, r23
     5e8:	cf 58       	subi	r28, 0x8F	; 143
     5ea:	d0 40       	sbci	r29, 0x00	; 0
     5ec:	c0 57       	subi	r28, 0x70	; 112
     5ee:	df 4f       	sbci	r29, 0xFF	; 255
     5f0:	88 83       	st	Y, r24
     5f2:	c0 59       	subi	r28, 0x90	; 144
     5f4:	d0 40       	sbci	r29, 0x00	; 0
     5f6:	cf 56       	subi	r28, 0x6F	; 111
     5f8:	df 4f       	sbci	r29, 0xFF	; 255
     5fa:	98 83       	st	Y, r25
     5fc:	c1 59       	subi	r28, 0x91	; 145
     5fe:	d0 40       	sbci	r29, 0x00	; 0
	amb_4 = MLX_5d.readAmbientTempC();	
     600:	8a e4       	ldi	r24, 0x4A	; 74
     602:	91 e0       	ldi	r25, 0x01	; 1
     604:	0e 94 7c 01 	call	0x2f8	; 0x2f8 <_ZN17Adafruit_MLX9061416readAmbientTempCEv>
     608:	ce 56       	subi	r28, 0x6E	; 110
     60a:	df 4f       	sbci	r29, 0xFF	; 255
     60c:	68 83       	st	Y, r22
     60e:	c2 59       	subi	r28, 0x92	; 146
     610:	d0 40       	sbci	r29, 0x00	; 0
     612:	cd 56       	subi	r28, 0x6D	; 109
     614:	df 4f       	sbci	r29, 0xFF	; 255
     616:	78 83       	st	Y, r23
     618:	c3 59       	subi	r28, 0x93	; 147
     61a:	d0 40       	sbci	r29, 0x00	; 0
     61c:	78 2e       	mov	r7, r24
     61e:	69 2e       	mov	r6, r25
	
	sprintf(str, "T%d,%0.1f,%0.1f,%i,%lu\r\n", 1, obj_1, amb_1, (int)sonic.Distance,m_read_time);
     620:	0f 2e       	mov	r0, r31
     622:	f2 e4       	ldi	r31, 0x42	; 66
     624:	8f 2e       	mov	r8, r31
     626:	f1 e0       	ldi	r31, 0x01	; 1
     628:	9f 2e       	mov	r9, r31
     62a:	f0 2d       	mov	r31, r0
     62c:	f4 01       	movw	r30, r8
     62e:	60 81       	ld	r22, Z
     630:	71 81       	ldd	r23, Z+1	; 0x01
     632:	82 81       	ldd	r24, Z+2	; 0x02
     634:	93 81       	ldd	r25, Z+3	; 0x03
     636:	ff 92       	push	r15
     638:	ef 92       	push	r14
     63a:	df 92       	push	r13
     63c:	cf 92       	push	r12
     63e:	0e 94 19 06 	call	0xc32	; 0xc32 <__fixsfsi>
     642:	7f 93       	push	r23
     644:	6f 93       	push	r22
     646:	2f 92       	push	r2
     648:	3f 92       	push	r3
     64a:	4f 92       	push	r4
     64c:	5f 92       	push	r5
     64e:	af 92       	push	r10
     650:	bf 92       	push	r11
     652:	0f 93       	push	r16
     654:	1f 93       	push	r17
     656:	1f 92       	push	r1
     658:	81 e0       	ldi	r24, 0x01	; 1
     65a:	8f 93       	push	r24
     65c:	0f 2e       	mov	r0, r31
     65e:	fd e0       	ldi	r31, 0x0D	; 13
     660:	af 2e       	mov	r10, r31
     662:	f1 e0       	ldi	r31, 0x01	; 1
     664:	bf 2e       	mov	r11, r31
     666:	f0 2d       	mov	r31, r0
     668:	bf 92       	push	r11
     66a:	af 92       	push	r10
     66c:	8e 01       	movw	r16, r28
     66e:	0b 59       	subi	r16, 0x9B	; 155
     670:	1f 4f       	sbci	r17, 0xFF	; 255
     672:	1f 93       	push	r17
     674:	0f 93       	push	r16
     676:	0e 94 7f 0c 	call	0x18fe	; 0x18fe <sprintf>
	strcat(str_out,str);
     67a:	b8 01       	movw	r22, r16
     67c:	ce 01       	movw	r24, r28
     67e:	01 96       	adiw	r24, 0x01	; 1
     680:	0e 94 31 0c 	call	0x1862	; 0x1862 <strcat>

	sprintf(str, "T%d,%.1f,%0.1f,%i,%lu\r\n", 2, obj_2, amb_2, (int)sonic.Distance,m_read_time);
     684:	d4 01       	movw	r26, r8
     686:	6d 91       	ld	r22, X+
     688:	7d 91       	ld	r23, X+
     68a:	8d 91       	ld	r24, X+
     68c:	9c 91       	ld	r25, X
     68e:	ff 92       	push	r15
     690:	ef 92       	push	r14
     692:	df 92       	push	r13
     694:	cf 92       	push	r12
     696:	0e 94 19 06 	call	0xc32	; 0xc32 <__fixsfsi>
     69a:	7f 93       	push	r23
     69c:	6f 93       	push	r22
     69e:	cb 57       	subi	r28, 0x7B	; 123
     6a0:	df 4f       	sbci	r29, 0xFF	; 255
     6a2:	b8 81       	ld	r27, Y
     6a4:	c5 58       	subi	r28, 0x85	; 133
     6a6:	d0 40       	sbci	r29, 0x00	; 0
     6a8:	bf 93       	push	r27
     6aa:	cc 57       	subi	r28, 0x7C	; 124
     6ac:	df 4f       	sbci	r29, 0xFF	; 255
     6ae:	e8 81       	ld	r30, Y
     6b0:	c4 58       	subi	r28, 0x84	; 132
     6b2:	d0 40       	sbci	r29, 0x00	; 0
     6b4:	ef 93       	push	r30
     6b6:	cd 57       	subi	r28, 0x7D	; 125
     6b8:	df 4f       	sbci	r29, 0xFF	; 255
     6ba:	f8 81       	ld	r31, Y
     6bc:	c3 58       	subi	r28, 0x83	; 131
     6be:	d0 40       	sbci	r29, 0x00	; 0
     6c0:	ff 93       	push	r31
     6c2:	ce 57       	subi	r28, 0x7E	; 126
     6c4:	df 4f       	sbci	r29, 0xFF	; 255
     6c6:	88 81       	ld	r24, Y
     6c8:	c2 58       	subi	r28, 0x82	; 130
     6ca:	d0 40       	sbci	r29, 0x00	; 0
     6cc:	8f 93       	push	r24
     6ce:	cf 57       	subi	r28, 0x7F	; 127
     6d0:	df 4f       	sbci	r29, 0xFF	; 255
     6d2:	98 81       	ld	r25, Y
     6d4:	c1 58       	subi	r28, 0x81	; 129
     6d6:	d0 40       	sbci	r29, 0x00	; 0
     6d8:	9f 93       	push	r25
     6da:	c0 58       	subi	r28, 0x80	; 128
     6dc:	df 4f       	sbci	r29, 0xFF	; 255
     6de:	a8 81       	ld	r26, Y
     6e0:	c0 58       	subi	r28, 0x80	; 128
     6e2:	d0 40       	sbci	r29, 0x00	; 0
     6e4:	af 93       	push	r26
     6e6:	c1 58       	subi	r28, 0x81	; 129
     6e8:	df 4f       	sbci	r29, 0xFF	; 255
     6ea:	b8 81       	ld	r27, Y
     6ec:	cf 57       	subi	r28, 0x7F	; 127
     6ee:	d0 40       	sbci	r29, 0x00	; 0
     6f0:	bf 93       	push	r27
     6f2:	ef 96       	adiw	r28, 0x3f	; 63
     6f4:	ef ad       	ldd	r30, Y+63	; 0x3f
     6f6:	ef 97       	sbiw	r28, 0x3f	; 63
     6f8:	ef 93       	push	r30
     6fa:	1f 92       	push	r1
     6fc:	82 e0       	ldi	r24, 0x02	; 2
     6fe:	8f 93       	push	r24
     700:	86 e2       	ldi	r24, 0x26	; 38
     702:	91 e0       	ldi	r25, 0x01	; 1
     704:	9f 93       	push	r25
     706:	8f 93       	push	r24
     708:	1f 93       	push	r17
     70a:	0f 93       	push	r16
     70c:	0e 94 7f 0c 	call	0x18fe	; 0x18fe <sprintf>
	strcat(str_out,str);
     710:	0f b6       	in	r0, 0x3f	; 63
     712:	f8 94       	cli
     714:	de bf       	out	0x3e, r29	; 62
     716:	0f be       	out	0x3f, r0	; 63
     718:	cd bf       	out	0x3d, r28	; 61
     71a:	b8 01       	movw	r22, r16
     71c:	ce 01       	movw	r24, r28
     71e:	01 96       	adiw	r24, 0x01	; 1
     720:	0e 94 31 0c 	call	0x1862	; 0x1862 <strcat>

	sprintf(str, "T%d,%0.1f,%0.1f,%i,%lu\r\n", 3, obj_3, amb_3, (int)sonic.Distance,m_read_time);
     724:	d4 01       	movw	r26, r8
     726:	6d 91       	ld	r22, X+
     728:	7d 91       	ld	r23, X+
     72a:	8d 91       	ld	r24, X+
     72c:	9c 91       	ld	r25, X
     72e:	ff 92       	push	r15
     730:	ef 92       	push	r14
     732:	df 92       	push	r13
     734:	cf 92       	push	r12
     736:	0e 94 19 06 	call	0xc32	; 0xc32 <__fixsfsi>
     73a:	7f 93       	push	r23
     73c:	6f 93       	push	r22
     73e:	c3 57       	subi	r28, 0x73	; 115
     740:	df 4f       	sbci	r29, 0xFF	; 255
     742:	b8 81       	ld	r27, Y
     744:	cd 58       	subi	r28, 0x8D	; 141
     746:	d0 40       	sbci	r29, 0x00	; 0
     748:	bf 93       	push	r27
     74a:	c4 57       	subi	r28, 0x74	; 116
     74c:	df 4f       	sbci	r29, 0xFF	; 255
     74e:	e8 81       	ld	r30, Y
     750:	cc 58       	subi	r28, 0x8C	; 140
     752:	d0 40       	sbci	r29, 0x00	; 0
     754:	ef 93       	push	r30
     756:	c5 57       	subi	r28, 0x75	; 117
     758:	df 4f       	sbci	r29, 0xFF	; 255
     75a:	f8 81       	ld	r31, Y
     75c:	cb 58       	subi	r28, 0x8B	; 139
     75e:	d0 40       	sbci	r29, 0x00	; 0
     760:	ff 93       	push	r31
     762:	c6 57       	subi	r28, 0x76	; 118
     764:	df 4f       	sbci	r29, 0xFF	; 255
     766:	88 81       	ld	r24, Y
     768:	ca 58       	subi	r28, 0x8A	; 138
     76a:	d0 40       	sbci	r29, 0x00	; 0
     76c:	8f 93       	push	r24
     76e:	c7 57       	subi	r28, 0x77	; 119
     770:	df 4f       	sbci	r29, 0xFF	; 255
     772:	98 81       	ld	r25, Y
     774:	c9 58       	subi	r28, 0x89	; 137
     776:	d0 40       	sbci	r29, 0x00	; 0
     778:	9f 93       	push	r25
     77a:	c8 57       	subi	r28, 0x78	; 120
     77c:	df 4f       	sbci	r29, 0xFF	; 255
     77e:	a8 81       	ld	r26, Y
     780:	c8 58       	subi	r28, 0x88	; 136
     782:	d0 40       	sbci	r29, 0x00	; 0
     784:	af 93       	push	r26
     786:	c9 57       	subi	r28, 0x79	; 121
     788:	df 4f       	sbci	r29, 0xFF	; 255
     78a:	b8 81       	ld	r27, Y
     78c:	c7 58       	subi	r28, 0x87	; 135
     78e:	d0 40       	sbci	r29, 0x00	; 0
     790:	bf 93       	push	r27
     792:	ca 57       	subi	r28, 0x7A	; 122
     794:	df 4f       	sbci	r29, 0xFF	; 255
     796:	e8 81       	ld	r30, Y
     798:	c6 58       	subi	r28, 0x86	; 134
     79a:	d0 40       	sbci	r29, 0x00	; 0
     79c:	ef 93       	push	r30
     79e:	1f 92       	push	r1
     7a0:	83 e0       	ldi	r24, 0x03	; 3
     7a2:	8f 93       	push	r24
     7a4:	bf 92       	push	r11
     7a6:	af 92       	push	r10
     7a8:	1f 93       	push	r17
     7aa:	0f 93       	push	r16
     7ac:	0e 94 7f 0c 	call	0x18fe	; 0x18fe <sprintf>
	strcat(str_out,str);
     7b0:	b8 01       	movw	r22, r16
     7b2:	ce 01       	movw	r24, r28
     7b4:	01 96       	adiw	r24, 0x01	; 1
     7b6:	0e 94 31 0c 	call	0x1862	; 0x1862 <strcat>
	
	sprintf(str, "T%d,%0.1f,%0.1f,%i,%lu\r\n", 4, obj_4, amb_4, (int)sonic.Distance,m_read_time);
     7ba:	d4 01       	movw	r26, r8
     7bc:	6d 91       	ld	r22, X+
     7be:	7d 91       	ld	r23, X+
     7c0:	8d 91       	ld	r24, X+
     7c2:	9c 91       	ld	r25, X
     7c4:	ff 92       	push	r15
     7c6:	ef 92       	push	r14
     7c8:	df 92       	push	r13
     7ca:	cf 92       	push	r12
     7cc:	0e 94 19 06 	call	0xc32	; 0xc32 <__fixsfsi>
     7d0:	7f 93       	push	r23
     7d2:	6f 93       	push	r22
     7d4:	6f 92       	push	r6
     7d6:	7f 92       	push	r7
     7d8:	cd 56       	subi	r28, 0x6D	; 109
     7da:	df 4f       	sbci	r29, 0xFF	; 255
     7dc:	b8 81       	ld	r27, Y
     7de:	c3 59       	subi	r28, 0x93	; 147
     7e0:	d0 40       	sbci	r29, 0x00	; 0
     7e2:	bf 93       	push	r27
     7e4:	ce 56       	subi	r28, 0x6E	; 110
     7e6:	df 4f       	sbci	r29, 0xFF	; 255
     7e8:	e8 81       	ld	r30, Y
     7ea:	c2 59       	subi	r28, 0x92	; 146
     7ec:	d0 40       	sbci	r29, 0x00	; 0
     7ee:	ef 93       	push	r30
     7f0:	cf 56       	subi	r28, 0x6F	; 111
     7f2:	df 4f       	sbci	r29, 0xFF	; 255
     7f4:	f8 81       	ld	r31, Y
     7f6:	c1 59       	subi	r28, 0x91	; 145
     7f8:	d0 40       	sbci	r29, 0x00	; 0
     7fa:	ff 93       	push	r31
     7fc:	c0 57       	subi	r28, 0x70	; 112
     7fe:	df 4f       	sbci	r29, 0xFF	; 255
     800:	88 81       	ld	r24, Y
     802:	c0 59       	subi	r28, 0x90	; 144
     804:	d0 40       	sbci	r29, 0x00	; 0
     806:	8f 93       	push	r24
     808:	c1 57       	subi	r28, 0x71	; 113
     80a:	df 4f       	sbci	r29, 0xFF	; 255
     80c:	98 81       	ld	r25, Y
     80e:	cf 58       	subi	r28, 0x8F	; 143
     810:	d0 40       	sbci	r29, 0x00	; 0
     812:	9f 93       	push	r25
     814:	c2 57       	subi	r28, 0x72	; 114
     816:	df 4f       	sbci	r29, 0xFF	; 255
     818:	a8 81       	ld	r26, Y
     81a:	ce 58       	subi	r28, 0x8E	; 142
     81c:	d0 40       	sbci	r29, 0x00	; 0
     81e:	af 93       	push	r26
     820:	1f 92       	push	r1
     822:	84 e0       	ldi	r24, 0x04	; 4
     824:	8f 93       	push	r24
     826:	bf 92       	push	r11
     828:	af 92       	push	r10
     82a:	1f 93       	push	r17
     82c:	0f 93       	push	r16
     82e:	0e 94 7f 0c 	call	0x18fe	; 0x18fe <sprintf>
	strcat(str_out,str);
     832:	0f b6       	in	r0, 0x3f	; 63
     834:	f8 94       	cli
     836:	de bf       	out	0x3e, r29	; 62
     838:	0f be       	out	0x3f, r0	; 63
     83a:	cd bf       	out	0x3d, r28	; 61
     83c:	b8 01       	movw	r22, r16
     83e:	ce 01       	movw	r24, r28
     840:	01 96       	adiw	r24, 0x01	; 1
     842:	0e 94 31 0c 	call	0x1862	; 0x1862 <strcat>
	
	Serial.send(str_out);
     846:	be 01       	movw	r22, r28
     848:	6f 5f       	subi	r22, 0xFF	; 255
     84a:	7f 4f       	sbci	r23, 0xFF	; 255
     84c:	86 e7       	ldi	r24, 0x76	; 118
     84e:	91 e0       	ldi	r25, 0x01	; 1
     850:	0e 94 25 05 	call	0xa4a	; 0xa4a <_ZN5USART4sendEPKc>
}
     854:	cd 56       	subi	r28, 0x6D	; 109
     856:	df 4f       	sbci	r29, 0xFF	; 255
     858:	0f b6       	in	r0, 0x3f	; 63
     85a:	f8 94       	cli
     85c:	de bf       	out	0x3e, r29	; 62
     85e:	0f be       	out	0x3f, r0	; 63
     860:	cd bf       	out	0x3d, r28	; 61
     862:	df 91       	pop	r29
     864:	cf 91       	pop	r28
     866:	1f 91       	pop	r17
     868:	0f 91       	pop	r16
     86a:	ff 90       	pop	r15
     86c:	ef 90       	pop	r14
     86e:	df 90       	pop	r13
     870:	cf 90       	pop	r12
     872:	bf 90       	pop	r11
     874:	af 90       	pop	r10
     876:	9f 90       	pop	r9
     878:	8f 90       	pop	r8
     87a:	7f 90       	pop	r7
     87c:	6f 90       	pop	r6
     87e:	5f 90       	pop	r5
     880:	4f 90       	pop	r4
     882:	3f 90       	pop	r3
     884:	2f 90       	pop	r2
     886:	08 95       	ret

00000888 <main>:
/*********************************************************************/
int main(void)
{	
	setup();
     888:	0e 94 1d 02 	call	0x43a	; 0x43a <_Z5setupv>
	//TIFR1 = 0;
}
/*********************************************************************/
unsigned long int millis(void)
{
	return count;
     88c:	c0 90 3e 01 	lds	r12, 0x013E
     890:	d0 90 3f 01 	lds	r13, 0x013F
     894:	e0 90 40 01 	lds	r14, 0x0140
     898:	f0 90 41 01 	lds	r15, 0x0141
	    start_time = millis();	
		#ifdef _DEBUG
			Serial.sendln("> Read Sensors...");
		#endif

		IR_sensorRead();
     89c:	0e 94 48 02 	call	0x490	; 0x490 <_Z13IR_sensorReadv>
	//TIFR1 = 0;
}
/*********************************************************************/
unsigned long int millis(void)
{
	return count;
     8a0:	80 91 3e 01 	lds	r24, 0x013E
     8a4:	90 91 3f 01 	lds	r25, 0x013F
     8a8:	a0 91 40 01 	lds	r26, 0x0140
     8ac:	b0 91 41 01 	lds	r27, 0x0141
			Serial.sendln("> Read Sensors...");
		#endif

		IR_sensorRead();
		//_delay_ms(250);		
		while((millis()-start_time) <= 250);
     8b0:	8c 19       	sub	r24, r12
     8b2:	9d 09       	sbc	r25, r13
     8b4:	ae 09       	sbc	r26, r14
     8b6:	bf 09       	sbc	r27, r15
     8b8:	8b 3f       	cpi	r24, 0xFB	; 251
     8ba:	91 05       	cpc	r25, r1
     8bc:	a1 05       	cpc	r26, r1
     8be:	b1 05       	cpc	r27, r1
     8c0:	78 f3       	brcs	.-34     	; 0x8a0 <main+0x18>
     8c2:	e4 cf       	rjmp	.-56     	; 0x88c <main+0x4>

000008c4 <_GLOBAL__sub_I_MLX_5a>:
#include <string.h> 
#include "uart.h"
#include "Adafruit_MLX90614.h"
#include "HCSR04.h"

Adafruit_MLX90614 MLX_5a(0x5A);
     8c4:	6a e5       	ldi	r22, 0x5A	; 90
     8c6:	8b e6       	ldi	r24, 0x6B	; 107
     8c8:	91 e0       	ldi	r25, 0x01	; 1
     8ca:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <_ZN17Adafruit_MLX90614C1Eh>
Adafruit_MLX90614 MLX_5b(0x5B);
     8ce:	6b e5       	ldi	r22, 0x5B	; 91
     8d0:	80 e6       	ldi	r24, 0x60	; 96
     8d2:	91 e0       	ldi	r25, 0x01	; 1
     8d4:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <_ZN17Adafruit_MLX90614C1Eh>
Adafruit_MLX90614 MLX_5c(0x5C);
     8d8:	6c e5       	ldi	r22, 0x5C	; 92
     8da:	85 e5       	ldi	r24, 0x55	; 85
     8dc:	91 e0       	ldi	r25, 0x01	; 1
     8de:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <_ZN17Adafruit_MLX90614C1Eh>
Adafruit_MLX90614 MLX_5d(0x5D);
     8e2:	6d e5       	ldi	r22, 0x5D	; 93
     8e4:	8a e4       	ldi	r24, 0x4A	; 74
     8e6:	91 e0       	ldi	r25, 0x01	; 1
     8e8:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <_ZN17Adafruit_MLX90614C1Eh>
     8ec:	08 95       	ret

000008ee <i2c_init>:
 Initialization of the I2C bus interface. Need to be called only once
*************************************************************************/
void i2c_init(void)
{
  /* initialize TWI clock: 100 kHz clock, TWPS = 0 => prescaler = 1 */
  DDRC = 0;
     8ee:	17 b8       	out	0x07, r1	; 7
  PORTC = (1 << PORTC4) | (1 << PORTC5);//enable pull up
     8f0:	80 e3       	ldi	r24, 0x30	; 48
     8f2:	88 b9       	out	0x08, r24	; 8
  TWSR = 0;                         /* no prescaler */
     8f4:	10 92 b9 00 	sts	0x00B9, r1
  TWBR = ((F_CPU/SCL_CLOCK)-16)/2;  /* must be > 10 for stable operation */
     8f8:	88 e4       	ldi	r24, 0x48	; 72
     8fa:	80 93 b8 00 	sts	0x00B8, r24
     8fe:	08 95       	ret

00000900 <i2c_start>:
unsigned char i2c_start(unsigned char address)
{
    uint8_t   twst;

	// send START condition
	TWCR = (1<<TWINT) | (1<<TWSTA) | (1<<TWEN);
     900:	94 ea       	ldi	r25, 0xA4	; 164
     902:	90 93 bc 00 	sts	0x00BC, r25

	// wait until transmission completed
	while(!(TWCR & (1<<TWINT)));
     906:	ec eb       	ldi	r30, 0xBC	; 188
     908:	f0 e0       	ldi	r31, 0x00	; 0
     90a:	90 81       	ld	r25, Z
     90c:	99 23       	and	r25, r25
     90e:	ec f7       	brge	.-6      	; 0x90a <i2c_start+0xa>

	// check value of TWI Status Register. Mask prescaler bits.
	twst = TW_STATUS & 0xF8;
     910:	90 91 b9 00 	lds	r25, 0x00B9
     914:	98 7f       	andi	r25, 0xF8	; 248
	if ( (twst != TW_START) && (twst != TW_REP_START)) return 1;
     916:	98 30       	cpi	r25, 0x08	; 8
     918:	11 f0       	breq	.+4      	; 0x91e <i2c_start+0x1e>
     91a:	90 31       	cpi	r25, 0x10	; 16
     91c:	a1 f4       	brne	.+40     	; 0x946 <i2c_start+0x46>

	// send device address
	TWDR = address;
     91e:	80 93 bb 00 	sts	0x00BB, r24
	TWCR = (1<<TWINT) | (1<<TWEN);
     922:	84 e8       	ldi	r24, 0x84	; 132
     924:	80 93 bc 00 	sts	0x00BC, r24

	// wail until transmission completed and ACK/NACK has been received
	while(!(TWCR & (1<<TWINT)));
     928:	ec eb       	ldi	r30, 0xBC	; 188
     92a:	f0 e0       	ldi	r31, 0x00	; 0
     92c:	80 81       	ld	r24, Z
     92e:	88 23       	and	r24, r24
     930:	ec f7       	brge	.-6      	; 0x92c <i2c_start+0x2c>

	// check value of TWI Status Register. Mask prescaler bits.
	twst = TW_STATUS & 0xF8;
     932:	90 91 b9 00 	lds	r25, 0x00B9
     936:	98 7f       	andi	r25, 0xF8	; 248
	if ( (twst != TW_MT_SLA_ACK) && (twst != TW_MR_SLA_ACK) ) return 1;
     938:	98 31       	cpi	r25, 0x18	; 24
     93a:	39 f0       	breq	.+14     	; 0x94a <i2c_start+0x4a>
     93c:	81 e0       	ldi	r24, 0x01	; 1
     93e:	90 34       	cpi	r25, 0x40	; 64
     940:	29 f4       	brne	.+10     	; 0x94c <i2c_start+0x4c>
     942:	80 e0       	ldi	r24, 0x00	; 0
     944:	08 95       	ret
	// wait until transmission completed
	while(!(TWCR & (1<<TWINT)));

	// check value of TWI Status Register. Mask prescaler bits.
	twst = TW_STATUS & 0xF8;
	if ( (twst != TW_START) && (twst != TW_REP_START)) return 1;
     946:	81 e0       	ldi	r24, 0x01	; 1
     948:	08 95       	ret

	// check value of TWI Status Register. Mask prescaler bits.
	twst = TW_STATUS & 0xF8;
	if ( (twst != TW_MT_SLA_ACK) && (twst != TW_MR_SLA_ACK) ) return 1;

	return 0;
     94a:	80 e0       	ldi	r24, 0x00	; 0

}/* i2c_start */
     94c:	08 95       	ret

0000094e <i2c_stop>:
 Terminates the data transfer and releases the I2C bus
*************************************************************************/
void i2c_stop(void)
{
    /* send stop condition */
	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWSTO);
     94e:	84 e9       	ldi	r24, 0x94	; 148
     950:	80 93 bc 00 	sts	0x00BC, r24
     954:	08 95       	ret

00000956 <i2c_write>:
unsigned char i2c_write( unsigned char data )
{	
    uint8_t   twst;
    
	// send data to the previously addressed device
	TWDR = data;
     956:	80 93 bb 00 	sts	0x00BB, r24
	TWCR = (1<<TWINT) | (1<<TWEN);
     95a:	84 e8       	ldi	r24, 0x84	; 132
     95c:	80 93 bc 00 	sts	0x00BC, r24

	// wait until transmission completed
	while(!(TWCR & (1<<TWINT)));
     960:	ec eb       	ldi	r30, 0xBC	; 188
     962:	f0 e0       	ldi	r31, 0x00	; 0
     964:	80 81       	ld	r24, Z
     966:	88 23       	and	r24, r24
     968:	ec f7       	brge	.-6      	; 0x964 <i2c_write+0xe>

	// check value of TWI Status Register. Mask prescaler bits
	twst = TW_STATUS & 0xF8;
     96a:	90 91 b9 00 	lds	r25, 0x00B9
     96e:	98 7f       	andi	r25, 0xF8	; 248
	if( twst != TW_MT_DATA_ACK) return 1;
     970:	81 e0       	ldi	r24, 0x01	; 1
     972:	98 32       	cpi	r25, 0x28	; 40
     974:	09 f4       	brne	.+2      	; 0x978 <i2c_write+0x22>
     976:	80 e0       	ldi	r24, 0x00	; 0
	return 0;

}/* i2c_write */
     978:	08 95       	ret

0000097a <i2c_readAck>:
 
 Return:  byte read from I2C device
*************************************************************************/
unsigned char i2c_readAck(void)
{
	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWEA);
     97a:	84 ec       	ldi	r24, 0xC4	; 196
     97c:	80 93 bc 00 	sts	0x00BC, r24
	while(!(TWCR & (1<<TWINT)));    
     980:	ec eb       	ldi	r30, 0xBC	; 188
     982:	f0 e0       	ldi	r31, 0x00	; 0
     984:	80 81       	ld	r24, Z
     986:	88 23       	and	r24, r24
     988:	ec f7       	brge	.-6      	; 0x984 <i2c_readAck+0xa>
    return TWDR;
     98a:	80 91 bb 00 	lds	r24, 0x00BB
}/* i2c_readAck */
     98e:	08 95       	ret

00000990 <i2c_readNak>:
 
 Return:  byte read from I2C device
*************************************************************************/
unsigned char i2c_readNak(void)
{
	TWCR = (1<<TWINT) | (1<<TWEN);
     990:	84 e8       	ldi	r24, 0x84	; 132
     992:	80 93 bc 00 	sts	0x00BC, r24
	while(!(TWCR & (1<<TWINT)));
     996:	ec eb       	ldi	r30, 0xBC	; 188
     998:	f0 e0       	ldi	r31, 0x00	; 0
     99a:	80 81       	ld	r24, Z
     99c:	88 23       	and	r24, r24
     99e:	ec f7       	brge	.-6      	; 0x99a <i2c_readNak+0xa>
    return TWDR;
     9a0:	80 91 bb 00 	lds	r24, 0x00BB
}/* i2c_readNak */
     9a4:	08 95       	ret

000009a6 <_ZN5USART4initEi>:
USART Serial; //Initialize new instance of the serial class
//Setup Baud rate in header file
//set to 8 bits, no stop bit, no parity

/*********************************************************************/
void USART::init(int BAUDRATE){
     9a6:	0f 93       	push	r16
     9a8:	1f 93       	push	r17
	UBRR0H = (uint8_t)(BAUD_PRESCALLER>>8);
     9aa:	8b 01       	movw	r16, r22
     9ac:	77 0f       	add	r23, r23
     9ae:	22 0b       	sbc	r18, r18
     9b0:	33 0b       	sbc	r19, r19
     9b2:	d9 01       	movw	r26, r18
     9b4:	c8 01       	movw	r24, r16
     9b6:	80 58       	subi	r24, 0x80	; 128
     9b8:	9b 47       	sbci	r25, 0x7B	; 123
     9ba:	a1 4e       	sbci	r26, 0xE1	; 225
     9bc:	bf 4f       	sbci	r27, 0xFF	; 255
     9be:	88 0f       	add	r24, r24
     9c0:	99 1f       	adc	r25, r25
     9c2:	aa 1f       	adc	r26, r26
     9c4:	bb 1f       	adc	r27, r27
     9c6:	88 0f       	add	r24, r24
     9c8:	99 1f       	adc	r25, r25
     9ca:	aa 1f       	adc	r26, r26
     9cc:	bb 1f       	adc	r27, r27
     9ce:	bc 01       	movw	r22, r24
     9d0:	cd 01       	movw	r24, r26
     9d2:	66 0f       	add	r22, r22
     9d4:	77 1f       	adc	r23, r23
     9d6:	88 1f       	adc	r24, r24
     9d8:	99 1f       	adc	r25, r25
     9da:	00 0f       	add	r16, r16
     9dc:	11 1f       	adc	r17, r17
     9de:	22 1f       	adc	r18, r18
     9e0:	33 1f       	adc	r19, r19
     9e2:	00 0f       	add	r16, r16
     9e4:	11 1f       	adc	r17, r17
     9e6:	22 1f       	adc	r18, r18
     9e8:	33 1f       	adc	r19, r19
     9ea:	a9 01       	movw	r20, r18
     9ec:	98 01       	movw	r18, r16
     9ee:	22 0f       	add	r18, r18
     9f0:	33 1f       	adc	r19, r19
     9f2:	44 1f       	adc	r20, r20
     9f4:	55 1f       	adc	r21, r21
     9f6:	22 0f       	add	r18, r18
     9f8:	33 1f       	adc	r19, r19
     9fa:	44 1f       	adc	r20, r20
     9fc:	55 1f       	adc	r21, r21
     9fe:	0e 94 ef 0a 	call	0x15de	; 0x15de <__udivmodsi4>
     a02:	da 01       	movw	r26, r20
     a04:	c9 01       	movw	r24, r18
     a06:	01 97       	sbiw	r24, 0x01	; 1
     a08:	a1 09       	sbc	r26, r1
     a0a:	b1 09       	sbc	r27, r1
     a0c:	89 2f       	mov	r24, r25
     a0e:	9a 2f       	mov	r25, r26
     a10:	ab 2f       	mov	r26, r27
     a12:	bb 27       	eor	r27, r27
     a14:	80 93 c5 00 	sts	0x00C5, r24
	UBRR0L = (uint8_t)(BAUD_PRESCALLER);
     a18:	21 50       	subi	r18, 0x01	; 1
     a1a:	20 93 c4 00 	sts	0x00C4, r18
	UCSR0B = (1<<RXEN0)|(1<<TXEN0);
     a1e:	e1 ec       	ldi	r30, 0xC1	; 193
     a20:	f0 e0       	ldi	r31, 0x00	; 0
     a22:	88 e1       	ldi	r24, 0x18	; 24
     a24:	80 83       	st	Z, r24
	UCSR0C = (1<<UCSZ00)|(1<<UCSZ01);
     a26:	86 e0       	ldi	r24, 0x06	; 6
     a28:	80 93 c2 00 	sts	0x00C2, r24

	UCSR0B |= (1 << RXCIE0); // Enable the USART Receive Complete interrupt (USART_RXC)
     a2c:	80 81       	ld	r24, Z
     a2e:	80 68       	ori	r24, 0x80	; 128
     a30:	80 83       	st	Z, r24
	sei();
     a32:	78 94       	sei
}
     a34:	1f 91       	pop	r17
     a36:	0f 91       	pop	r16
     a38:	08 95       	ret

00000a3a <_ZN5USART4sendEh>:
 return UDR0;// read buffer
}
/*********************************************************************/
void USART::send(uint8_t data){

	while(!(UCSR0A & (1<<UDRE0))); //wait until buffer is empty
     a3a:	e0 ec       	ldi	r30, 0xC0	; 192
     a3c:	f0 e0       	ldi	r31, 0x00	; 0
     a3e:	80 81       	ld	r24, Z
     a40:	85 ff       	sbrs	r24, 5
     a42:	fd cf       	rjmp	.-6      	; 0xa3e <_ZN5USART4sendEh+0x4>
	UDR0 = data; //Load data into buffer
     a44:	60 93 c6 00 	sts	0x00C6, r22
     a48:	08 95       	ret

00000a4a <_ZN5USART4sendEPKc>:
}
/*********************************************************************/
//send one char at a time
void USART::send(const char* StringPtr)
{
     a4a:	0f 93       	push	r16
     a4c:	1f 93       	push	r17
     a4e:	cf 93       	push	r28
     a50:	df 93       	push	r29
     a52:	eb 01       	movw	r28, r22
	//st = millis();
	while(*StringPtr != 0x00)
     a54:	68 81       	ld	r22, Y
     a56:	66 23       	and	r22, r22
     a58:	41 f0       	breq	.+16     	; 0xa6a <_ZN5USART4sendEPKc+0x20>
     a5a:	8c 01       	movw	r16, r24
     a5c:	21 96       	adiw	r28, 0x01	; 1
		void init(int BAUDRATE = 9600); 
		bool available(void);
		unsigned char read(void);
		bool flush(void);
		void send(uint8_t data);
		void send(char data) {send((uint8_t)data); };
     a5e:	c8 01       	movw	r24, r16
     a60:	0e 94 1d 05 	call	0xa3a	; 0xa3a <_ZN5USART4sendEh>
     a64:	69 91       	ld	r22, Y+
     a66:	61 11       	cpse	r22, r1
     a68:	fa cf       	rjmp	.-12     	; 0xa5e <_ZN5USART4sendEPKc+0x14>
	{
		send(*StringPtr++);
	}
	//ft = millis();
}
     a6a:	df 91       	pop	r29
     a6c:	cf 91       	pop	r28
     a6e:	1f 91       	pop	r17
     a70:	0f 91       	pop	r16
     a72:	08 95       	ret

00000a74 <__subsf3>:
     a74:	50 58       	subi	r21, 0x80	; 128

00000a76 <__addsf3>:
     a76:	bb 27       	eor	r27, r27
     a78:	aa 27       	eor	r26, r26
     a7a:	0e 94 52 05 	call	0xaa4	; 0xaa4 <__addsf3x>
     a7e:	0c 94 a3 06 	jmp	0xd46	; 0xd46 <__fp_round>
     a82:	0e 94 95 06 	call	0xd2a	; 0xd2a <__fp_pscA>
     a86:	38 f0       	brcs	.+14     	; 0xa96 <__addsf3+0x20>
     a88:	0e 94 9c 06 	call	0xd38	; 0xd38 <__fp_pscB>
     a8c:	20 f0       	brcs	.+8      	; 0xa96 <__addsf3+0x20>
     a8e:	39 f4       	brne	.+14     	; 0xa9e <__addsf3+0x28>
     a90:	9f 3f       	cpi	r25, 0xFF	; 255
     a92:	19 f4       	brne	.+6      	; 0xa9a <__addsf3+0x24>
     a94:	26 f4       	brtc	.+8      	; 0xa9e <__addsf3+0x28>
     a96:	0c 94 92 06 	jmp	0xd24	; 0xd24 <__fp_nan>
     a9a:	0e f4       	brtc	.+2      	; 0xa9e <__addsf3+0x28>
     a9c:	e0 95       	com	r30
     a9e:	e7 fb       	bst	r30, 7
     aa0:	0c 94 8c 06 	jmp	0xd18	; 0xd18 <__fp_inf>

00000aa4 <__addsf3x>:
     aa4:	e9 2f       	mov	r30, r25
     aa6:	0e 94 b4 06 	call	0xd68	; 0xd68 <__fp_split3>
     aaa:	58 f3       	brcs	.-42     	; 0xa82 <__addsf3+0xc>
     aac:	ba 17       	cp	r27, r26
     aae:	62 07       	cpc	r22, r18
     ab0:	73 07       	cpc	r23, r19
     ab2:	84 07       	cpc	r24, r20
     ab4:	95 07       	cpc	r25, r21
     ab6:	20 f0       	brcs	.+8      	; 0xac0 <__addsf3x+0x1c>
     ab8:	79 f4       	brne	.+30     	; 0xad8 <__addsf3x+0x34>
     aba:	a6 f5       	brtc	.+104    	; 0xb24 <__addsf3x+0x80>
     abc:	0c 94 d6 06 	jmp	0xdac	; 0xdac <__fp_zero>
     ac0:	0e f4       	brtc	.+2      	; 0xac4 <__addsf3x+0x20>
     ac2:	e0 95       	com	r30
     ac4:	0b 2e       	mov	r0, r27
     ac6:	ba 2f       	mov	r27, r26
     ac8:	a0 2d       	mov	r26, r0
     aca:	0b 01       	movw	r0, r22
     acc:	b9 01       	movw	r22, r18
     ace:	90 01       	movw	r18, r0
     ad0:	0c 01       	movw	r0, r24
     ad2:	ca 01       	movw	r24, r20
     ad4:	a0 01       	movw	r20, r0
     ad6:	11 24       	eor	r1, r1
     ad8:	ff 27       	eor	r31, r31
     ada:	59 1b       	sub	r21, r25
     adc:	99 f0       	breq	.+38     	; 0xb04 <__addsf3x+0x60>
     ade:	59 3f       	cpi	r21, 0xF9	; 249
     ae0:	50 f4       	brcc	.+20     	; 0xaf6 <__addsf3x+0x52>
     ae2:	50 3e       	cpi	r21, 0xE0	; 224
     ae4:	68 f1       	brcs	.+90     	; 0xb40 <__addsf3x+0x9c>
     ae6:	1a 16       	cp	r1, r26
     ae8:	f0 40       	sbci	r31, 0x00	; 0
     aea:	a2 2f       	mov	r26, r18
     aec:	23 2f       	mov	r18, r19
     aee:	34 2f       	mov	r19, r20
     af0:	44 27       	eor	r20, r20
     af2:	58 5f       	subi	r21, 0xF8	; 248
     af4:	f3 cf       	rjmp	.-26     	; 0xadc <__addsf3x+0x38>
     af6:	46 95       	lsr	r20
     af8:	37 95       	ror	r19
     afa:	27 95       	ror	r18
     afc:	a7 95       	ror	r26
     afe:	f0 40       	sbci	r31, 0x00	; 0
     b00:	53 95       	inc	r21
     b02:	c9 f7       	brne	.-14     	; 0xaf6 <__addsf3x+0x52>
     b04:	7e f4       	brtc	.+30     	; 0xb24 <__addsf3x+0x80>
     b06:	1f 16       	cp	r1, r31
     b08:	ba 0b       	sbc	r27, r26
     b0a:	62 0b       	sbc	r22, r18
     b0c:	73 0b       	sbc	r23, r19
     b0e:	84 0b       	sbc	r24, r20
     b10:	ba f0       	brmi	.+46     	; 0xb40 <__addsf3x+0x9c>
     b12:	91 50       	subi	r25, 0x01	; 1
     b14:	a1 f0       	breq	.+40     	; 0xb3e <__addsf3x+0x9a>
     b16:	ff 0f       	add	r31, r31
     b18:	bb 1f       	adc	r27, r27
     b1a:	66 1f       	adc	r22, r22
     b1c:	77 1f       	adc	r23, r23
     b1e:	88 1f       	adc	r24, r24
     b20:	c2 f7       	brpl	.-16     	; 0xb12 <__addsf3x+0x6e>
     b22:	0e c0       	rjmp	.+28     	; 0xb40 <__addsf3x+0x9c>
     b24:	ba 0f       	add	r27, r26
     b26:	62 1f       	adc	r22, r18
     b28:	73 1f       	adc	r23, r19
     b2a:	84 1f       	adc	r24, r20
     b2c:	48 f4       	brcc	.+18     	; 0xb40 <__addsf3x+0x9c>
     b2e:	87 95       	ror	r24
     b30:	77 95       	ror	r23
     b32:	67 95       	ror	r22
     b34:	b7 95       	ror	r27
     b36:	f7 95       	ror	r31
     b38:	9e 3f       	cpi	r25, 0xFE	; 254
     b3a:	08 f0       	brcs	.+2      	; 0xb3e <__addsf3x+0x9a>
     b3c:	b0 cf       	rjmp	.-160    	; 0xa9e <__addsf3+0x28>
     b3e:	93 95       	inc	r25
     b40:	88 0f       	add	r24, r24
     b42:	08 f0       	brcs	.+2      	; 0xb46 <__addsf3x+0xa2>
     b44:	99 27       	eor	r25, r25
     b46:	ee 0f       	add	r30, r30
     b48:	97 95       	ror	r25
     b4a:	87 95       	ror	r24
     b4c:	08 95       	ret

00000b4e <__divsf3>:
     b4e:	0e 94 bb 05 	call	0xb76	; 0xb76 <__divsf3x>
     b52:	0c 94 a3 06 	jmp	0xd46	; 0xd46 <__fp_round>
     b56:	0e 94 9c 06 	call	0xd38	; 0xd38 <__fp_pscB>
     b5a:	58 f0       	brcs	.+22     	; 0xb72 <__divsf3+0x24>
     b5c:	0e 94 95 06 	call	0xd2a	; 0xd2a <__fp_pscA>
     b60:	40 f0       	brcs	.+16     	; 0xb72 <__divsf3+0x24>
     b62:	29 f4       	brne	.+10     	; 0xb6e <__divsf3+0x20>
     b64:	5f 3f       	cpi	r21, 0xFF	; 255
     b66:	29 f0       	breq	.+10     	; 0xb72 <__divsf3+0x24>
     b68:	0c 94 8c 06 	jmp	0xd18	; 0xd18 <__fp_inf>
     b6c:	51 11       	cpse	r21, r1
     b6e:	0c 94 d7 06 	jmp	0xdae	; 0xdae <__fp_szero>
     b72:	0c 94 92 06 	jmp	0xd24	; 0xd24 <__fp_nan>

00000b76 <__divsf3x>:
     b76:	0e 94 b4 06 	call	0xd68	; 0xd68 <__fp_split3>
     b7a:	68 f3       	brcs	.-38     	; 0xb56 <__divsf3+0x8>

00000b7c <__divsf3_pse>:
     b7c:	99 23       	and	r25, r25
     b7e:	b1 f3       	breq	.-20     	; 0xb6c <__divsf3+0x1e>
     b80:	55 23       	and	r21, r21
     b82:	91 f3       	breq	.-28     	; 0xb68 <__divsf3+0x1a>
     b84:	95 1b       	sub	r25, r21
     b86:	55 0b       	sbc	r21, r21
     b88:	bb 27       	eor	r27, r27
     b8a:	aa 27       	eor	r26, r26
     b8c:	62 17       	cp	r22, r18
     b8e:	73 07       	cpc	r23, r19
     b90:	84 07       	cpc	r24, r20
     b92:	38 f0       	brcs	.+14     	; 0xba2 <__divsf3_pse+0x26>
     b94:	9f 5f       	subi	r25, 0xFF	; 255
     b96:	5f 4f       	sbci	r21, 0xFF	; 255
     b98:	22 0f       	add	r18, r18
     b9a:	33 1f       	adc	r19, r19
     b9c:	44 1f       	adc	r20, r20
     b9e:	aa 1f       	adc	r26, r26
     ba0:	a9 f3       	breq	.-22     	; 0xb8c <__divsf3_pse+0x10>
     ba2:	35 d0       	rcall	.+106    	; 0xc0e <__divsf3_pse+0x92>
     ba4:	0e 2e       	mov	r0, r30
     ba6:	3a f0       	brmi	.+14     	; 0xbb6 <__divsf3_pse+0x3a>
     ba8:	e0 e8       	ldi	r30, 0x80	; 128
     baa:	32 d0       	rcall	.+100    	; 0xc10 <__divsf3_pse+0x94>
     bac:	91 50       	subi	r25, 0x01	; 1
     bae:	50 40       	sbci	r21, 0x00	; 0
     bb0:	e6 95       	lsr	r30
     bb2:	00 1c       	adc	r0, r0
     bb4:	ca f7       	brpl	.-14     	; 0xba8 <__divsf3_pse+0x2c>
     bb6:	2b d0       	rcall	.+86     	; 0xc0e <__divsf3_pse+0x92>
     bb8:	fe 2f       	mov	r31, r30
     bba:	29 d0       	rcall	.+82     	; 0xc0e <__divsf3_pse+0x92>
     bbc:	66 0f       	add	r22, r22
     bbe:	77 1f       	adc	r23, r23
     bc0:	88 1f       	adc	r24, r24
     bc2:	bb 1f       	adc	r27, r27
     bc4:	26 17       	cp	r18, r22
     bc6:	37 07       	cpc	r19, r23
     bc8:	48 07       	cpc	r20, r24
     bca:	ab 07       	cpc	r26, r27
     bcc:	b0 e8       	ldi	r27, 0x80	; 128
     bce:	09 f0       	breq	.+2      	; 0xbd2 <__divsf3_pse+0x56>
     bd0:	bb 0b       	sbc	r27, r27
     bd2:	80 2d       	mov	r24, r0
     bd4:	bf 01       	movw	r22, r30
     bd6:	ff 27       	eor	r31, r31
     bd8:	93 58       	subi	r25, 0x83	; 131
     bda:	5f 4f       	sbci	r21, 0xFF	; 255
     bdc:	3a f0       	brmi	.+14     	; 0xbec <__divsf3_pse+0x70>
     bde:	9e 3f       	cpi	r25, 0xFE	; 254
     be0:	51 05       	cpc	r21, r1
     be2:	78 f0       	brcs	.+30     	; 0xc02 <__divsf3_pse+0x86>
     be4:	0c 94 8c 06 	jmp	0xd18	; 0xd18 <__fp_inf>
     be8:	0c 94 d7 06 	jmp	0xdae	; 0xdae <__fp_szero>
     bec:	5f 3f       	cpi	r21, 0xFF	; 255
     bee:	e4 f3       	brlt	.-8      	; 0xbe8 <__divsf3_pse+0x6c>
     bf0:	98 3e       	cpi	r25, 0xE8	; 232
     bf2:	d4 f3       	brlt	.-12     	; 0xbe8 <__divsf3_pse+0x6c>
     bf4:	86 95       	lsr	r24
     bf6:	77 95       	ror	r23
     bf8:	67 95       	ror	r22
     bfa:	b7 95       	ror	r27
     bfc:	f7 95       	ror	r31
     bfe:	9f 5f       	subi	r25, 0xFF	; 255
     c00:	c9 f7       	brne	.-14     	; 0xbf4 <__divsf3_pse+0x78>
     c02:	88 0f       	add	r24, r24
     c04:	91 1d       	adc	r25, r1
     c06:	96 95       	lsr	r25
     c08:	87 95       	ror	r24
     c0a:	97 f9       	bld	r25, 7
     c0c:	08 95       	ret
     c0e:	e1 e0       	ldi	r30, 0x01	; 1
     c10:	66 0f       	add	r22, r22
     c12:	77 1f       	adc	r23, r23
     c14:	88 1f       	adc	r24, r24
     c16:	bb 1f       	adc	r27, r27
     c18:	62 17       	cp	r22, r18
     c1a:	73 07       	cpc	r23, r19
     c1c:	84 07       	cpc	r24, r20
     c1e:	ba 07       	cpc	r27, r26
     c20:	20 f0       	brcs	.+8      	; 0xc2a <__divsf3_pse+0xae>
     c22:	62 1b       	sub	r22, r18
     c24:	73 0b       	sbc	r23, r19
     c26:	84 0b       	sbc	r24, r20
     c28:	ba 0b       	sbc	r27, r26
     c2a:	ee 1f       	adc	r30, r30
     c2c:	88 f7       	brcc	.-30     	; 0xc10 <__divsf3_pse+0x94>
     c2e:	e0 95       	com	r30
     c30:	08 95       	ret

00000c32 <__fixsfsi>:
     c32:	0e 94 20 06 	call	0xc40	; 0xc40 <__fixunssfsi>
     c36:	68 94       	set
     c38:	b1 11       	cpse	r27, r1
     c3a:	0c 94 d7 06 	jmp	0xdae	; 0xdae <__fp_szero>
     c3e:	08 95       	ret

00000c40 <__fixunssfsi>:
     c40:	0e 94 bc 06 	call	0xd78	; 0xd78 <__fp_splitA>
     c44:	88 f0       	brcs	.+34     	; 0xc68 <__fixunssfsi+0x28>
     c46:	9f 57       	subi	r25, 0x7F	; 127
     c48:	98 f0       	brcs	.+38     	; 0xc70 <__fixunssfsi+0x30>
     c4a:	b9 2f       	mov	r27, r25
     c4c:	99 27       	eor	r25, r25
     c4e:	b7 51       	subi	r27, 0x17	; 23
     c50:	b0 f0       	brcs	.+44     	; 0xc7e <__fixunssfsi+0x3e>
     c52:	e1 f0       	breq	.+56     	; 0xc8c <__fixunssfsi+0x4c>
     c54:	66 0f       	add	r22, r22
     c56:	77 1f       	adc	r23, r23
     c58:	88 1f       	adc	r24, r24
     c5a:	99 1f       	adc	r25, r25
     c5c:	1a f0       	brmi	.+6      	; 0xc64 <__fixunssfsi+0x24>
     c5e:	ba 95       	dec	r27
     c60:	c9 f7       	brne	.-14     	; 0xc54 <__fixunssfsi+0x14>
     c62:	14 c0       	rjmp	.+40     	; 0xc8c <__fixunssfsi+0x4c>
     c64:	b1 30       	cpi	r27, 0x01	; 1
     c66:	91 f0       	breq	.+36     	; 0xc8c <__fixunssfsi+0x4c>
     c68:	0e 94 d6 06 	call	0xdac	; 0xdac <__fp_zero>
     c6c:	b1 e0       	ldi	r27, 0x01	; 1
     c6e:	08 95       	ret
     c70:	0c 94 d6 06 	jmp	0xdac	; 0xdac <__fp_zero>
     c74:	67 2f       	mov	r22, r23
     c76:	78 2f       	mov	r23, r24
     c78:	88 27       	eor	r24, r24
     c7a:	b8 5f       	subi	r27, 0xF8	; 248
     c7c:	39 f0       	breq	.+14     	; 0xc8c <__fixunssfsi+0x4c>
     c7e:	b9 3f       	cpi	r27, 0xF9	; 249
     c80:	cc f3       	brlt	.-14     	; 0xc74 <__fixunssfsi+0x34>
     c82:	86 95       	lsr	r24
     c84:	77 95       	ror	r23
     c86:	67 95       	ror	r22
     c88:	b3 95       	inc	r27
     c8a:	d9 f7       	brne	.-10     	; 0xc82 <__fixunssfsi+0x42>
     c8c:	3e f4       	brtc	.+14     	; 0xc9c <__fixunssfsi+0x5c>
     c8e:	90 95       	com	r25
     c90:	80 95       	com	r24
     c92:	70 95       	com	r23
     c94:	61 95       	neg	r22
     c96:	7f 4f       	sbci	r23, 0xFF	; 255
     c98:	8f 4f       	sbci	r24, 0xFF	; 255
     c9a:	9f 4f       	sbci	r25, 0xFF	; 255
     c9c:	08 95       	ret

00000c9e <__floatunsisf>:
     c9e:	e8 94       	clt
     ca0:	09 c0       	rjmp	.+18     	; 0xcb4 <__floatsisf+0x12>

00000ca2 <__floatsisf>:
     ca2:	97 fb       	bst	r25, 7
     ca4:	3e f4       	brtc	.+14     	; 0xcb4 <__floatsisf+0x12>
     ca6:	90 95       	com	r25
     ca8:	80 95       	com	r24
     caa:	70 95       	com	r23
     cac:	61 95       	neg	r22
     cae:	7f 4f       	sbci	r23, 0xFF	; 255
     cb0:	8f 4f       	sbci	r24, 0xFF	; 255
     cb2:	9f 4f       	sbci	r25, 0xFF	; 255
     cb4:	99 23       	and	r25, r25
     cb6:	a9 f0       	breq	.+42     	; 0xce2 <__floatsisf+0x40>
     cb8:	f9 2f       	mov	r31, r25
     cba:	96 e9       	ldi	r25, 0x96	; 150
     cbc:	bb 27       	eor	r27, r27
     cbe:	93 95       	inc	r25
     cc0:	f6 95       	lsr	r31
     cc2:	87 95       	ror	r24
     cc4:	77 95       	ror	r23
     cc6:	67 95       	ror	r22
     cc8:	b7 95       	ror	r27
     cca:	f1 11       	cpse	r31, r1
     ccc:	f8 cf       	rjmp	.-16     	; 0xcbe <__floatsisf+0x1c>
     cce:	fa f4       	brpl	.+62     	; 0xd0e <__floatsisf+0x6c>
     cd0:	bb 0f       	add	r27, r27
     cd2:	11 f4       	brne	.+4      	; 0xcd8 <__floatsisf+0x36>
     cd4:	60 ff       	sbrs	r22, 0
     cd6:	1b c0       	rjmp	.+54     	; 0xd0e <__floatsisf+0x6c>
     cd8:	6f 5f       	subi	r22, 0xFF	; 255
     cda:	7f 4f       	sbci	r23, 0xFF	; 255
     cdc:	8f 4f       	sbci	r24, 0xFF	; 255
     cde:	9f 4f       	sbci	r25, 0xFF	; 255
     ce0:	16 c0       	rjmp	.+44     	; 0xd0e <__floatsisf+0x6c>
     ce2:	88 23       	and	r24, r24
     ce4:	11 f0       	breq	.+4      	; 0xcea <__floatsisf+0x48>
     ce6:	96 e9       	ldi	r25, 0x96	; 150
     ce8:	11 c0       	rjmp	.+34     	; 0xd0c <__floatsisf+0x6a>
     cea:	77 23       	and	r23, r23
     cec:	21 f0       	breq	.+8      	; 0xcf6 <__floatsisf+0x54>
     cee:	9e e8       	ldi	r25, 0x8E	; 142
     cf0:	87 2f       	mov	r24, r23
     cf2:	76 2f       	mov	r23, r22
     cf4:	05 c0       	rjmp	.+10     	; 0xd00 <__floatsisf+0x5e>
     cf6:	66 23       	and	r22, r22
     cf8:	71 f0       	breq	.+28     	; 0xd16 <__floatsisf+0x74>
     cfa:	96 e8       	ldi	r25, 0x86	; 134
     cfc:	86 2f       	mov	r24, r22
     cfe:	70 e0       	ldi	r23, 0x00	; 0
     d00:	60 e0       	ldi	r22, 0x00	; 0
     d02:	2a f0       	brmi	.+10     	; 0xd0e <__floatsisf+0x6c>
     d04:	9a 95       	dec	r25
     d06:	66 0f       	add	r22, r22
     d08:	77 1f       	adc	r23, r23
     d0a:	88 1f       	adc	r24, r24
     d0c:	da f7       	brpl	.-10     	; 0xd04 <__floatsisf+0x62>
     d0e:	88 0f       	add	r24, r24
     d10:	96 95       	lsr	r25
     d12:	87 95       	ror	r24
     d14:	97 f9       	bld	r25, 7
     d16:	08 95       	ret

00000d18 <__fp_inf>:
     d18:	97 f9       	bld	r25, 7
     d1a:	9f 67       	ori	r25, 0x7F	; 127
     d1c:	80 e8       	ldi	r24, 0x80	; 128
     d1e:	70 e0       	ldi	r23, 0x00	; 0
     d20:	60 e0       	ldi	r22, 0x00	; 0
     d22:	08 95       	ret

00000d24 <__fp_nan>:
     d24:	9f ef       	ldi	r25, 0xFF	; 255
     d26:	80 ec       	ldi	r24, 0xC0	; 192
     d28:	08 95       	ret

00000d2a <__fp_pscA>:
     d2a:	00 24       	eor	r0, r0
     d2c:	0a 94       	dec	r0
     d2e:	16 16       	cp	r1, r22
     d30:	17 06       	cpc	r1, r23
     d32:	18 06       	cpc	r1, r24
     d34:	09 06       	cpc	r0, r25
     d36:	08 95       	ret

00000d38 <__fp_pscB>:
     d38:	00 24       	eor	r0, r0
     d3a:	0a 94       	dec	r0
     d3c:	12 16       	cp	r1, r18
     d3e:	13 06       	cpc	r1, r19
     d40:	14 06       	cpc	r1, r20
     d42:	05 06       	cpc	r0, r21
     d44:	08 95       	ret

00000d46 <__fp_round>:
     d46:	09 2e       	mov	r0, r25
     d48:	03 94       	inc	r0
     d4a:	00 0c       	add	r0, r0
     d4c:	11 f4       	brne	.+4      	; 0xd52 <__fp_round+0xc>
     d4e:	88 23       	and	r24, r24
     d50:	52 f0       	brmi	.+20     	; 0xd66 <__fp_round+0x20>
     d52:	bb 0f       	add	r27, r27
     d54:	40 f4       	brcc	.+16     	; 0xd66 <__fp_round+0x20>
     d56:	bf 2b       	or	r27, r31
     d58:	11 f4       	brne	.+4      	; 0xd5e <__fp_round+0x18>
     d5a:	60 ff       	sbrs	r22, 0
     d5c:	04 c0       	rjmp	.+8      	; 0xd66 <__fp_round+0x20>
     d5e:	6f 5f       	subi	r22, 0xFF	; 255
     d60:	7f 4f       	sbci	r23, 0xFF	; 255
     d62:	8f 4f       	sbci	r24, 0xFF	; 255
     d64:	9f 4f       	sbci	r25, 0xFF	; 255
     d66:	08 95       	ret

00000d68 <__fp_split3>:
     d68:	57 fd       	sbrc	r21, 7
     d6a:	90 58       	subi	r25, 0x80	; 128
     d6c:	44 0f       	add	r20, r20
     d6e:	55 1f       	adc	r21, r21
     d70:	59 f0       	breq	.+22     	; 0xd88 <__fp_splitA+0x10>
     d72:	5f 3f       	cpi	r21, 0xFF	; 255
     d74:	71 f0       	breq	.+28     	; 0xd92 <__fp_splitA+0x1a>
     d76:	47 95       	ror	r20

00000d78 <__fp_splitA>:
     d78:	88 0f       	add	r24, r24
     d7a:	97 fb       	bst	r25, 7
     d7c:	99 1f       	adc	r25, r25
     d7e:	61 f0       	breq	.+24     	; 0xd98 <__fp_splitA+0x20>
     d80:	9f 3f       	cpi	r25, 0xFF	; 255
     d82:	79 f0       	breq	.+30     	; 0xda2 <__fp_splitA+0x2a>
     d84:	87 95       	ror	r24
     d86:	08 95       	ret
     d88:	12 16       	cp	r1, r18
     d8a:	13 06       	cpc	r1, r19
     d8c:	14 06       	cpc	r1, r20
     d8e:	55 1f       	adc	r21, r21
     d90:	f2 cf       	rjmp	.-28     	; 0xd76 <__fp_split3+0xe>
     d92:	46 95       	lsr	r20
     d94:	f1 df       	rcall	.-30     	; 0xd78 <__fp_splitA>
     d96:	08 c0       	rjmp	.+16     	; 0xda8 <__fp_splitA+0x30>
     d98:	16 16       	cp	r1, r22
     d9a:	17 06       	cpc	r1, r23
     d9c:	18 06       	cpc	r1, r24
     d9e:	99 1f       	adc	r25, r25
     da0:	f1 cf       	rjmp	.-30     	; 0xd84 <__fp_splitA+0xc>
     da2:	86 95       	lsr	r24
     da4:	71 05       	cpc	r23, r1
     da6:	61 05       	cpc	r22, r1
     da8:	08 94       	sec
     daa:	08 95       	ret

00000dac <__fp_zero>:
     dac:	e8 94       	clt

00000dae <__fp_szero>:
     dae:	bb 27       	eor	r27, r27
     db0:	66 27       	eor	r22, r22
     db2:	77 27       	eor	r23, r23
     db4:	cb 01       	movw	r24, r22
     db6:	97 f9       	bld	r25, 7
     db8:	08 95       	ret

00000dba <__gesf2>:
     dba:	0e 94 4f 07 	call	0xe9e	; 0xe9e <__fp_cmp>
     dbe:	08 f4       	brcc	.+2      	; 0xdc2 <__gesf2+0x8>
     dc0:	8f ef       	ldi	r24, 0xFF	; 255
     dc2:	08 95       	ret

00000dc4 <__mulsf3>:
     dc4:	0e 94 f5 06 	call	0xdea	; 0xdea <__mulsf3x>
     dc8:	0c 94 a3 06 	jmp	0xd46	; 0xd46 <__fp_round>
     dcc:	0e 94 95 06 	call	0xd2a	; 0xd2a <__fp_pscA>
     dd0:	38 f0       	brcs	.+14     	; 0xde0 <__mulsf3+0x1c>
     dd2:	0e 94 9c 06 	call	0xd38	; 0xd38 <__fp_pscB>
     dd6:	20 f0       	brcs	.+8      	; 0xde0 <__mulsf3+0x1c>
     dd8:	95 23       	and	r25, r21
     dda:	11 f0       	breq	.+4      	; 0xde0 <__mulsf3+0x1c>
     ddc:	0c 94 8c 06 	jmp	0xd18	; 0xd18 <__fp_inf>
     de0:	0c 94 92 06 	jmp	0xd24	; 0xd24 <__fp_nan>
     de4:	11 24       	eor	r1, r1
     de6:	0c 94 d7 06 	jmp	0xdae	; 0xdae <__fp_szero>

00000dea <__mulsf3x>:
     dea:	0e 94 b4 06 	call	0xd68	; 0xd68 <__fp_split3>
     dee:	70 f3       	brcs	.-36     	; 0xdcc <__mulsf3+0x8>

00000df0 <__mulsf3_pse>:
     df0:	95 9f       	mul	r25, r21
     df2:	c1 f3       	breq	.-16     	; 0xde4 <__mulsf3+0x20>
     df4:	95 0f       	add	r25, r21
     df6:	50 e0       	ldi	r21, 0x00	; 0
     df8:	55 1f       	adc	r21, r21
     dfa:	62 9f       	mul	r22, r18
     dfc:	f0 01       	movw	r30, r0
     dfe:	72 9f       	mul	r23, r18
     e00:	bb 27       	eor	r27, r27
     e02:	f0 0d       	add	r31, r0
     e04:	b1 1d       	adc	r27, r1
     e06:	63 9f       	mul	r22, r19
     e08:	aa 27       	eor	r26, r26
     e0a:	f0 0d       	add	r31, r0
     e0c:	b1 1d       	adc	r27, r1
     e0e:	aa 1f       	adc	r26, r26
     e10:	64 9f       	mul	r22, r20
     e12:	66 27       	eor	r22, r22
     e14:	b0 0d       	add	r27, r0
     e16:	a1 1d       	adc	r26, r1
     e18:	66 1f       	adc	r22, r22
     e1a:	82 9f       	mul	r24, r18
     e1c:	22 27       	eor	r18, r18
     e1e:	b0 0d       	add	r27, r0
     e20:	a1 1d       	adc	r26, r1
     e22:	62 1f       	adc	r22, r18
     e24:	73 9f       	mul	r23, r19
     e26:	b0 0d       	add	r27, r0
     e28:	a1 1d       	adc	r26, r1
     e2a:	62 1f       	adc	r22, r18
     e2c:	83 9f       	mul	r24, r19
     e2e:	a0 0d       	add	r26, r0
     e30:	61 1d       	adc	r22, r1
     e32:	22 1f       	adc	r18, r18
     e34:	74 9f       	mul	r23, r20
     e36:	33 27       	eor	r19, r19
     e38:	a0 0d       	add	r26, r0
     e3a:	61 1d       	adc	r22, r1
     e3c:	23 1f       	adc	r18, r19
     e3e:	84 9f       	mul	r24, r20
     e40:	60 0d       	add	r22, r0
     e42:	21 1d       	adc	r18, r1
     e44:	82 2f       	mov	r24, r18
     e46:	76 2f       	mov	r23, r22
     e48:	6a 2f       	mov	r22, r26
     e4a:	11 24       	eor	r1, r1
     e4c:	9f 57       	subi	r25, 0x7F	; 127
     e4e:	50 40       	sbci	r21, 0x00	; 0
     e50:	9a f0       	brmi	.+38     	; 0xe78 <__mulsf3_pse+0x88>
     e52:	f1 f0       	breq	.+60     	; 0xe90 <__mulsf3_pse+0xa0>
     e54:	88 23       	and	r24, r24
     e56:	4a f0       	brmi	.+18     	; 0xe6a <__mulsf3_pse+0x7a>
     e58:	ee 0f       	add	r30, r30
     e5a:	ff 1f       	adc	r31, r31
     e5c:	bb 1f       	adc	r27, r27
     e5e:	66 1f       	adc	r22, r22
     e60:	77 1f       	adc	r23, r23
     e62:	88 1f       	adc	r24, r24
     e64:	91 50       	subi	r25, 0x01	; 1
     e66:	50 40       	sbci	r21, 0x00	; 0
     e68:	a9 f7       	brne	.-22     	; 0xe54 <__mulsf3_pse+0x64>
     e6a:	9e 3f       	cpi	r25, 0xFE	; 254
     e6c:	51 05       	cpc	r21, r1
     e6e:	80 f0       	brcs	.+32     	; 0xe90 <__mulsf3_pse+0xa0>
     e70:	0c 94 8c 06 	jmp	0xd18	; 0xd18 <__fp_inf>
     e74:	0c 94 d7 06 	jmp	0xdae	; 0xdae <__fp_szero>
     e78:	5f 3f       	cpi	r21, 0xFF	; 255
     e7a:	e4 f3       	brlt	.-8      	; 0xe74 <__mulsf3_pse+0x84>
     e7c:	98 3e       	cpi	r25, 0xE8	; 232
     e7e:	d4 f3       	brlt	.-12     	; 0xe74 <__mulsf3_pse+0x84>
     e80:	86 95       	lsr	r24
     e82:	77 95       	ror	r23
     e84:	67 95       	ror	r22
     e86:	b7 95       	ror	r27
     e88:	f7 95       	ror	r31
     e8a:	e7 95       	ror	r30
     e8c:	9f 5f       	subi	r25, 0xFF	; 255
     e8e:	c1 f7       	brne	.-16     	; 0xe80 <__mulsf3_pse+0x90>
     e90:	fe 2b       	or	r31, r30
     e92:	88 0f       	add	r24, r24
     e94:	91 1d       	adc	r25, r1
     e96:	96 95       	lsr	r25
     e98:	87 95       	ror	r24
     e9a:	97 f9       	bld	r25, 7
     e9c:	08 95       	ret

00000e9e <__fp_cmp>:
     e9e:	99 0f       	add	r25, r25
     ea0:	00 08       	sbc	r0, r0
     ea2:	55 0f       	add	r21, r21
     ea4:	aa 0b       	sbc	r26, r26
     ea6:	e0 e8       	ldi	r30, 0x80	; 128
     ea8:	fe ef       	ldi	r31, 0xFE	; 254
     eaa:	16 16       	cp	r1, r22
     eac:	17 06       	cpc	r1, r23
     eae:	e8 07       	cpc	r30, r24
     eb0:	f9 07       	cpc	r31, r25
     eb2:	c0 f0       	brcs	.+48     	; 0xee4 <__fp_cmp+0x46>
     eb4:	12 16       	cp	r1, r18
     eb6:	13 06       	cpc	r1, r19
     eb8:	e4 07       	cpc	r30, r20
     eba:	f5 07       	cpc	r31, r21
     ebc:	98 f0       	brcs	.+38     	; 0xee4 <__fp_cmp+0x46>
     ebe:	62 1b       	sub	r22, r18
     ec0:	73 0b       	sbc	r23, r19
     ec2:	84 0b       	sbc	r24, r20
     ec4:	95 0b       	sbc	r25, r21
     ec6:	39 f4       	brne	.+14     	; 0xed6 <__fp_cmp+0x38>
     ec8:	0a 26       	eor	r0, r26
     eca:	61 f0       	breq	.+24     	; 0xee4 <__fp_cmp+0x46>
     ecc:	23 2b       	or	r18, r19
     ece:	24 2b       	or	r18, r20
     ed0:	25 2b       	or	r18, r21
     ed2:	21 f4       	brne	.+8      	; 0xedc <__fp_cmp+0x3e>
     ed4:	08 95       	ret
     ed6:	0a 26       	eor	r0, r26
     ed8:	09 f4       	brne	.+2      	; 0xedc <__fp_cmp+0x3e>
     eda:	a1 40       	sbci	r26, 0x01	; 1
     edc:	a6 95       	lsr	r26
     ede:	8f ef       	ldi	r24, 0xFF	; 255
     ee0:	81 1d       	adc	r24, r1
     ee2:	81 1d       	adc	r24, r1
     ee4:	08 95       	ret

00000ee6 <vfprintf>:
     ee6:	a3 e1       	ldi	r26, 0x13	; 19
     ee8:	b0 e0       	ldi	r27, 0x00	; 0
     eea:	e9 e7       	ldi	r30, 0x79	; 121
     eec:	f7 e0       	ldi	r31, 0x07	; 7
     eee:	0c 94 11 0b 	jmp	0x1622	; 0x1622 <__prologue_saves__>
     ef2:	6c 01       	movw	r12, r24
     ef4:	4b 01       	movw	r8, r22
     ef6:	2a 01       	movw	r4, r20
     ef8:	fc 01       	movw	r30, r24
     efa:	17 82       	std	Z+7, r1	; 0x07
     efc:	16 82       	std	Z+6, r1	; 0x06
     efe:	83 81       	ldd	r24, Z+3	; 0x03
     f00:	81 ff       	sbrs	r24, 1
     f02:	43 c3       	rjmp	.+1670   	; 0x158a <vfprintf+0x6a4>
     f04:	ae 01       	movw	r20, r28
     f06:	4f 5f       	subi	r20, 0xFF	; 255
     f08:	5f 4f       	sbci	r21, 0xFF	; 255
     f0a:	3a 01       	movw	r6, r20
     f0c:	f6 01       	movw	r30, r12
     f0e:	93 81       	ldd	r25, Z+3	; 0x03
     f10:	f4 01       	movw	r30, r8
     f12:	93 fd       	sbrc	r25, 3
     f14:	85 91       	lpm	r24, Z+
     f16:	93 ff       	sbrs	r25, 3
     f18:	81 91       	ld	r24, Z+
     f1a:	4f 01       	movw	r8, r30
     f1c:	88 23       	and	r24, r24
     f1e:	09 f4       	brne	.+2      	; 0xf22 <vfprintf+0x3c>
     f20:	30 c3       	rjmp	.+1632   	; 0x1582 <vfprintf+0x69c>
     f22:	85 32       	cpi	r24, 0x25	; 37
     f24:	39 f4       	brne	.+14     	; 0xf34 <vfprintf+0x4e>
     f26:	93 fd       	sbrc	r25, 3
     f28:	85 91       	lpm	r24, Z+
     f2a:	93 ff       	sbrs	r25, 3
     f2c:	81 91       	ld	r24, Z+
     f2e:	4f 01       	movw	r8, r30
     f30:	85 32       	cpi	r24, 0x25	; 37
     f32:	39 f4       	brne	.+14     	; 0xf42 <vfprintf+0x5c>
     f34:	b6 01       	movw	r22, r12
     f36:	90 e0       	ldi	r25, 0x00	; 0
     f38:	0e 94 47 0c 	call	0x188e	; 0x188e <fputc>
     f3c:	52 01       	movw	r10, r4
     f3e:	25 01       	movw	r4, r10
     f40:	e5 cf       	rjmp	.-54     	; 0xf0c <vfprintf+0x26>
     f42:	10 e0       	ldi	r17, 0x00	; 0
     f44:	f1 2c       	mov	r15, r1
     f46:	20 e0       	ldi	r18, 0x00	; 0
     f48:	20 32       	cpi	r18, 0x20	; 32
     f4a:	a0 f4       	brcc	.+40     	; 0xf74 <vfprintf+0x8e>
     f4c:	8b 32       	cpi	r24, 0x2B	; 43
     f4e:	69 f0       	breq	.+26     	; 0xf6a <vfprintf+0x84>
     f50:	30 f4       	brcc	.+12     	; 0xf5e <vfprintf+0x78>
     f52:	80 32       	cpi	r24, 0x20	; 32
     f54:	59 f0       	breq	.+22     	; 0xf6c <vfprintf+0x86>
     f56:	83 32       	cpi	r24, 0x23	; 35
     f58:	69 f4       	brne	.+26     	; 0xf74 <vfprintf+0x8e>
     f5a:	20 61       	ori	r18, 0x10	; 16
     f5c:	2c c0       	rjmp	.+88     	; 0xfb6 <vfprintf+0xd0>
     f5e:	8d 32       	cpi	r24, 0x2D	; 45
     f60:	39 f0       	breq	.+14     	; 0xf70 <vfprintf+0x8a>
     f62:	80 33       	cpi	r24, 0x30	; 48
     f64:	39 f4       	brne	.+14     	; 0xf74 <vfprintf+0x8e>
     f66:	21 60       	ori	r18, 0x01	; 1
     f68:	26 c0       	rjmp	.+76     	; 0xfb6 <vfprintf+0xd0>
     f6a:	22 60       	ori	r18, 0x02	; 2
     f6c:	24 60       	ori	r18, 0x04	; 4
     f6e:	23 c0       	rjmp	.+70     	; 0xfb6 <vfprintf+0xd0>
     f70:	28 60       	ori	r18, 0x08	; 8
     f72:	21 c0       	rjmp	.+66     	; 0xfb6 <vfprintf+0xd0>
     f74:	27 fd       	sbrc	r18, 7
     f76:	27 c0       	rjmp	.+78     	; 0xfc6 <vfprintf+0xe0>
     f78:	30 ed       	ldi	r19, 0xD0	; 208
     f7a:	38 0f       	add	r19, r24
     f7c:	3a 30       	cpi	r19, 0x0A	; 10
     f7e:	78 f4       	brcc	.+30     	; 0xf9e <vfprintf+0xb8>
     f80:	26 ff       	sbrs	r18, 6
     f82:	06 c0       	rjmp	.+12     	; 0xf90 <vfprintf+0xaa>
     f84:	fa e0       	ldi	r31, 0x0A	; 10
     f86:	1f 9f       	mul	r17, r31
     f88:	30 0d       	add	r19, r0
     f8a:	11 24       	eor	r1, r1
     f8c:	13 2f       	mov	r17, r19
     f8e:	13 c0       	rjmp	.+38     	; 0xfb6 <vfprintf+0xd0>
     f90:	4a e0       	ldi	r20, 0x0A	; 10
     f92:	f4 9e       	mul	r15, r20
     f94:	30 0d       	add	r19, r0
     f96:	11 24       	eor	r1, r1
     f98:	f3 2e       	mov	r15, r19
     f9a:	20 62       	ori	r18, 0x20	; 32
     f9c:	0c c0       	rjmp	.+24     	; 0xfb6 <vfprintf+0xd0>
     f9e:	8e 32       	cpi	r24, 0x2E	; 46
     fa0:	21 f4       	brne	.+8      	; 0xfaa <vfprintf+0xc4>
     fa2:	26 fd       	sbrc	r18, 6
     fa4:	ee c2       	rjmp	.+1500   	; 0x1582 <vfprintf+0x69c>
     fa6:	20 64       	ori	r18, 0x40	; 64
     fa8:	06 c0       	rjmp	.+12     	; 0xfb6 <vfprintf+0xd0>
     faa:	8c 36       	cpi	r24, 0x6C	; 108
     fac:	11 f4       	brne	.+4      	; 0xfb2 <vfprintf+0xcc>
     fae:	20 68       	ori	r18, 0x80	; 128
     fb0:	02 c0       	rjmp	.+4      	; 0xfb6 <vfprintf+0xd0>
     fb2:	88 36       	cpi	r24, 0x68	; 104
     fb4:	41 f4       	brne	.+16     	; 0xfc6 <vfprintf+0xe0>
     fb6:	f4 01       	movw	r30, r8
     fb8:	93 fd       	sbrc	r25, 3
     fba:	85 91       	lpm	r24, Z+
     fbc:	93 ff       	sbrs	r25, 3
     fbe:	81 91       	ld	r24, Z+
     fc0:	4f 01       	movw	r8, r30
     fc2:	81 11       	cpse	r24, r1
     fc4:	c1 cf       	rjmp	.-126    	; 0xf48 <vfprintf+0x62>
     fc6:	9b eb       	ldi	r25, 0xBB	; 187
     fc8:	98 0f       	add	r25, r24
     fca:	93 30       	cpi	r25, 0x03	; 3
     fcc:	18 f4       	brcc	.+6      	; 0xfd4 <vfprintf+0xee>
     fce:	20 61       	ori	r18, 0x10	; 16
     fd0:	80 5e       	subi	r24, 0xE0	; 224
     fd2:	06 c0       	rjmp	.+12     	; 0xfe0 <vfprintf+0xfa>
     fd4:	9b e9       	ldi	r25, 0x9B	; 155
     fd6:	98 0f       	add	r25, r24
     fd8:	93 30       	cpi	r25, 0x03	; 3
     fda:	08 f0       	brcs	.+2      	; 0xfde <vfprintf+0xf8>
     fdc:	71 c1       	rjmp	.+738    	; 0x12c0 <vfprintf+0x3da>
     fde:	2f 7e       	andi	r18, 0xEF	; 239
     fe0:	26 ff       	sbrs	r18, 6
     fe2:	16 e0       	ldi	r17, 0x06	; 6
     fe4:	2f 73       	andi	r18, 0x3F	; 63
     fe6:	32 2e       	mov	r3, r18
     fe8:	85 36       	cpi	r24, 0x65	; 101
     fea:	19 f4       	brne	.+6      	; 0xff2 <vfprintf+0x10c>
     fec:	20 64       	ori	r18, 0x40	; 64
     fee:	32 2e       	mov	r3, r18
     ff0:	08 c0       	rjmp	.+16     	; 0x1002 <vfprintf+0x11c>
     ff2:	86 36       	cpi	r24, 0x66	; 102
     ff4:	21 f4       	brne	.+8      	; 0xffe <vfprintf+0x118>
     ff6:	f2 2f       	mov	r31, r18
     ff8:	f0 68       	ori	r31, 0x80	; 128
     ffa:	3f 2e       	mov	r3, r31
     ffc:	02 c0       	rjmp	.+4      	; 0x1002 <vfprintf+0x11c>
     ffe:	11 11       	cpse	r17, r1
    1000:	11 50       	subi	r17, 0x01	; 1
    1002:	37 fe       	sbrs	r3, 7
    1004:	07 c0       	rjmp	.+14     	; 0x1014 <vfprintf+0x12e>
    1006:	1c 33       	cpi	r17, 0x3C	; 60
    1008:	50 f4       	brcc	.+20     	; 0x101e <vfprintf+0x138>
    100a:	ee 24       	eor	r14, r14
    100c:	e3 94       	inc	r14
    100e:	e1 0e       	add	r14, r17
    1010:	27 e0       	ldi	r18, 0x07	; 7
    1012:	0b c0       	rjmp	.+22     	; 0x102a <vfprintf+0x144>
    1014:	18 30       	cpi	r17, 0x08	; 8
    1016:	38 f0       	brcs	.+14     	; 0x1026 <vfprintf+0x140>
    1018:	27 e0       	ldi	r18, 0x07	; 7
    101a:	17 e0       	ldi	r17, 0x07	; 7
    101c:	05 c0       	rjmp	.+10     	; 0x1028 <vfprintf+0x142>
    101e:	27 e0       	ldi	r18, 0x07	; 7
    1020:	4c e3       	ldi	r20, 0x3C	; 60
    1022:	e4 2e       	mov	r14, r20
    1024:	02 c0       	rjmp	.+4      	; 0x102a <vfprintf+0x144>
    1026:	21 2f       	mov	r18, r17
    1028:	e1 2c       	mov	r14, r1
    102a:	52 01       	movw	r10, r4
    102c:	44 e0       	ldi	r20, 0x04	; 4
    102e:	a4 0e       	add	r10, r20
    1030:	b1 1c       	adc	r11, r1
    1032:	f2 01       	movw	r30, r4
    1034:	60 81       	ld	r22, Z
    1036:	71 81       	ldd	r23, Z+1	; 0x01
    1038:	82 81       	ldd	r24, Z+2	; 0x02
    103a:	93 81       	ldd	r25, Z+3	; 0x03
    103c:	0e 2d       	mov	r16, r14
    103e:	a3 01       	movw	r20, r6
    1040:	0e 94 4e 0b 	call	0x169c	; 0x169c <__ftoa_engine>
    1044:	2c 01       	movw	r4, r24
    1046:	09 81       	ldd	r16, Y+1	; 0x01
    1048:	00 ff       	sbrs	r16, 0
    104a:	02 c0       	rjmp	.+4      	; 0x1050 <vfprintf+0x16a>
    104c:	03 ff       	sbrs	r16, 3
    104e:	07 c0       	rjmp	.+14     	; 0x105e <vfprintf+0x178>
    1050:	31 fc       	sbrc	r3, 1
    1052:	08 c0       	rjmp	.+16     	; 0x1064 <vfprintf+0x17e>
    1054:	32 fe       	sbrs	r3, 2
    1056:	09 c0       	rjmp	.+18     	; 0x106a <vfprintf+0x184>
    1058:	30 e2       	ldi	r19, 0x20	; 32
    105a:	23 2e       	mov	r2, r19
    105c:	07 c0       	rjmp	.+14     	; 0x106c <vfprintf+0x186>
    105e:	2d e2       	ldi	r18, 0x2D	; 45
    1060:	22 2e       	mov	r2, r18
    1062:	04 c0       	rjmp	.+8      	; 0x106c <vfprintf+0x186>
    1064:	9b e2       	ldi	r25, 0x2B	; 43
    1066:	29 2e       	mov	r2, r25
    1068:	01 c0       	rjmp	.+2      	; 0x106c <vfprintf+0x186>
    106a:	21 2c       	mov	r2, r1
    106c:	80 2f       	mov	r24, r16
    106e:	8c 70       	andi	r24, 0x0C	; 12
    1070:	19 f0       	breq	.+6      	; 0x1078 <vfprintf+0x192>
    1072:	21 10       	cpse	r2, r1
    1074:	68 c2       	rjmp	.+1232   	; 0x1546 <vfprintf+0x660>
    1076:	a8 c2       	rjmp	.+1360   	; 0x15c8 <vfprintf+0x6e2>
    1078:	37 fe       	sbrs	r3, 7
    107a:	0f c0       	rjmp	.+30     	; 0x109a <vfprintf+0x1b4>
    107c:	e4 0c       	add	r14, r4
    107e:	04 ff       	sbrs	r16, 4
    1080:	04 c0       	rjmp	.+8      	; 0x108a <vfprintf+0x1a4>
    1082:	8a 81       	ldd	r24, Y+2	; 0x02
    1084:	81 33       	cpi	r24, 0x31	; 49
    1086:	09 f4       	brne	.+2      	; 0x108a <vfprintf+0x1a4>
    1088:	ea 94       	dec	r14
    108a:	1e 14       	cp	r1, r14
    108c:	74 f5       	brge	.+92     	; 0x10ea <vfprintf+0x204>
    108e:	f8 e0       	ldi	r31, 0x08	; 8
    1090:	fe 15       	cp	r31, r14
    1092:	78 f5       	brcc	.+94     	; 0x10f2 <vfprintf+0x20c>
    1094:	88 e0       	ldi	r24, 0x08	; 8
    1096:	e8 2e       	mov	r14, r24
    1098:	2c c0       	rjmp	.+88     	; 0x10f2 <vfprintf+0x20c>
    109a:	36 fc       	sbrc	r3, 6
    109c:	2a c0       	rjmp	.+84     	; 0x10f2 <vfprintf+0x20c>
    109e:	81 2f       	mov	r24, r17
    10a0:	90 e0       	ldi	r25, 0x00	; 0
    10a2:	84 15       	cp	r24, r4
    10a4:	95 05       	cpc	r25, r5
    10a6:	9c f0       	brlt	.+38     	; 0x10ce <vfprintf+0x1e8>
    10a8:	2c ef       	ldi	r18, 0xFC	; 252
    10aa:	42 16       	cp	r4, r18
    10ac:	2f ef       	ldi	r18, 0xFF	; 255
    10ae:	52 06       	cpc	r5, r18
    10b0:	74 f0       	brlt	.+28     	; 0x10ce <vfprintf+0x1e8>
    10b2:	43 2d       	mov	r20, r3
    10b4:	40 68       	ori	r20, 0x80	; 128
    10b6:	34 2e       	mov	r3, r20
    10b8:	0a c0       	rjmp	.+20     	; 0x10ce <vfprintf+0x1e8>
    10ba:	e2 e0       	ldi	r30, 0x02	; 2
    10bc:	f0 e0       	ldi	r31, 0x00	; 0
    10be:	ec 0f       	add	r30, r28
    10c0:	fd 1f       	adc	r31, r29
    10c2:	e1 0f       	add	r30, r17
    10c4:	f1 1d       	adc	r31, r1
    10c6:	80 81       	ld	r24, Z
    10c8:	80 33       	cpi	r24, 0x30	; 48
    10ca:	19 f4       	brne	.+6      	; 0x10d2 <vfprintf+0x1ec>
    10cc:	11 50       	subi	r17, 0x01	; 1
    10ce:	11 11       	cpse	r17, r1
    10d0:	f4 cf       	rjmp	.-24     	; 0x10ba <vfprintf+0x1d4>
    10d2:	37 fe       	sbrs	r3, 7
    10d4:	0e c0       	rjmp	.+28     	; 0x10f2 <vfprintf+0x20c>
    10d6:	ee 24       	eor	r14, r14
    10d8:	e3 94       	inc	r14
    10da:	e1 0e       	add	r14, r17
    10dc:	81 2f       	mov	r24, r17
    10de:	90 e0       	ldi	r25, 0x00	; 0
    10e0:	48 16       	cp	r4, r24
    10e2:	59 06       	cpc	r5, r25
    10e4:	2c f4       	brge	.+10     	; 0x10f0 <vfprintf+0x20a>
    10e6:	14 19       	sub	r17, r4
    10e8:	04 c0       	rjmp	.+8      	; 0x10f2 <vfprintf+0x20c>
    10ea:	ee 24       	eor	r14, r14
    10ec:	e3 94       	inc	r14
    10ee:	01 c0       	rjmp	.+2      	; 0x10f2 <vfprintf+0x20c>
    10f0:	10 e0       	ldi	r17, 0x00	; 0
    10f2:	37 fe       	sbrs	r3, 7
    10f4:	06 c0       	rjmp	.+12     	; 0x1102 <vfprintf+0x21c>
    10f6:	14 14       	cp	r1, r4
    10f8:	15 04       	cpc	r1, r5
    10fa:	34 f4       	brge	.+12     	; 0x1108 <vfprintf+0x222>
    10fc:	c2 01       	movw	r24, r4
    10fe:	01 96       	adiw	r24, 0x01	; 1
    1100:	05 c0       	rjmp	.+10     	; 0x110c <vfprintf+0x226>
    1102:	85 e0       	ldi	r24, 0x05	; 5
    1104:	90 e0       	ldi	r25, 0x00	; 0
    1106:	02 c0       	rjmp	.+4      	; 0x110c <vfprintf+0x226>
    1108:	81 e0       	ldi	r24, 0x01	; 1
    110a:	90 e0       	ldi	r25, 0x00	; 0
    110c:	21 10       	cpse	r2, r1
    110e:	01 96       	adiw	r24, 0x01	; 1
    1110:	11 23       	and	r17, r17
    1112:	31 f0       	breq	.+12     	; 0x1120 <vfprintf+0x23a>
    1114:	21 2f       	mov	r18, r17
    1116:	30 e0       	ldi	r19, 0x00	; 0
    1118:	2f 5f       	subi	r18, 0xFF	; 255
    111a:	3f 4f       	sbci	r19, 0xFF	; 255
    111c:	82 0f       	add	r24, r18
    111e:	93 1f       	adc	r25, r19
    1120:	2f 2d       	mov	r18, r15
    1122:	30 e0       	ldi	r19, 0x00	; 0
    1124:	82 17       	cp	r24, r18
    1126:	93 07       	cpc	r25, r19
    1128:	14 f4       	brge	.+4      	; 0x112e <vfprintf+0x248>
    112a:	f8 1a       	sub	r15, r24
    112c:	01 c0       	rjmp	.+2      	; 0x1130 <vfprintf+0x24a>
    112e:	f1 2c       	mov	r15, r1
    1130:	83 2d       	mov	r24, r3
    1132:	89 70       	andi	r24, 0x09	; 9
    1134:	49 f4       	brne	.+18     	; 0x1148 <vfprintf+0x262>
    1136:	ff 20       	and	r15, r15
    1138:	39 f0       	breq	.+14     	; 0x1148 <vfprintf+0x262>
    113a:	b6 01       	movw	r22, r12
    113c:	80 e2       	ldi	r24, 0x20	; 32
    113e:	90 e0       	ldi	r25, 0x00	; 0
    1140:	0e 94 47 0c 	call	0x188e	; 0x188e <fputc>
    1144:	fa 94       	dec	r15
    1146:	f7 cf       	rjmp	.-18     	; 0x1136 <vfprintf+0x250>
    1148:	22 20       	and	r2, r2
    114a:	29 f0       	breq	.+10     	; 0x1156 <vfprintf+0x270>
    114c:	b6 01       	movw	r22, r12
    114e:	82 2d       	mov	r24, r2
    1150:	90 e0       	ldi	r25, 0x00	; 0
    1152:	0e 94 47 0c 	call	0x188e	; 0x188e <fputc>
    1156:	33 fc       	sbrc	r3, 3
    1158:	09 c0       	rjmp	.+18     	; 0x116c <vfprintf+0x286>
    115a:	ff 20       	and	r15, r15
    115c:	39 f0       	breq	.+14     	; 0x116c <vfprintf+0x286>
    115e:	b6 01       	movw	r22, r12
    1160:	80 e3       	ldi	r24, 0x30	; 48
    1162:	90 e0       	ldi	r25, 0x00	; 0
    1164:	0e 94 47 0c 	call	0x188e	; 0x188e <fputc>
    1168:	fa 94       	dec	r15
    116a:	f7 cf       	rjmp	.-18     	; 0x115a <vfprintf+0x274>
    116c:	37 fe       	sbrs	r3, 7
    116e:	5a c0       	rjmp	.+180    	; 0x1224 <vfprintf+0x33e>
    1170:	94 2d       	mov	r25, r4
    1172:	85 2d       	mov	r24, r5
    1174:	57 fe       	sbrs	r5, 7
    1176:	02 c0       	rjmp	.+4      	; 0x117c <vfprintf+0x296>
    1178:	90 e0       	ldi	r25, 0x00	; 0
    117a:	80 e0       	ldi	r24, 0x00	; 0
    117c:	29 2e       	mov	r2, r25
    117e:	38 2e       	mov	r3, r24
    1180:	20 e0       	ldi	r18, 0x00	; 0
    1182:	30 e0       	ldi	r19, 0x00	; 0
    1184:	a2 01       	movw	r20, r4
    1186:	4e 19       	sub	r20, r14
    1188:	51 09       	sbc	r21, r1
    118a:	5d 87       	std	Y+13, r21	; 0x0d
    118c:	4c 87       	std	Y+12, r20	; 0x0c
    118e:	a2 01       	movw	r20, r4
    1190:	42 19       	sub	r20, r2
    1192:	53 09       	sbc	r21, r3
    1194:	5f 87       	std	Y+15, r21	; 0x0f
    1196:	4e 87       	std	Y+14, r20	; 0x0e
    1198:	61 2f       	mov	r22, r17
    119a:	70 e0       	ldi	r23, 0x00	; 0
    119c:	44 27       	eor	r20, r20
    119e:	55 27       	eor	r21, r21
    11a0:	46 1b       	sub	r20, r22
    11a2:	57 0b       	sbc	r21, r23
    11a4:	59 8b       	std	Y+17, r21	; 0x11
    11a6:	48 8b       	std	Y+16, r20	; 0x10
    11a8:	5f ef       	ldi	r21, 0xFF	; 255
    11aa:	25 16       	cp	r2, r21
    11ac:	35 06       	cpc	r3, r21
    11ae:	49 f4       	brne	.+18     	; 0x11c2 <vfprintf+0x2dc>
    11b0:	b6 01       	movw	r22, r12
    11b2:	8e e2       	ldi	r24, 0x2E	; 46
    11b4:	90 e0       	ldi	r25, 0x00	; 0
    11b6:	2a 8b       	std	Y+18, r18	; 0x12
    11b8:	3b 8b       	std	Y+19, r19	; 0x13
    11ba:	0e 94 47 0c 	call	0x188e	; 0x188e <fputc>
    11be:	3b 89       	ldd	r19, Y+19	; 0x13
    11c0:	2a 89       	ldd	r18, Y+18	; 0x12
    11c2:	42 14       	cp	r4, r2
    11c4:	53 04       	cpc	r5, r3
    11c6:	6c f0       	brlt	.+26     	; 0x11e2 <vfprintf+0x2fc>
    11c8:	4c 85       	ldd	r20, Y+12	; 0x0c
    11ca:	5d 85       	ldd	r21, Y+13	; 0x0d
    11cc:	42 15       	cp	r20, r2
    11ce:	53 05       	cpc	r21, r3
    11d0:	44 f4       	brge	.+16     	; 0x11e2 <vfprintf+0x2fc>
    11d2:	ee 85       	ldd	r30, Y+14	; 0x0e
    11d4:	ff 85       	ldd	r31, Y+15	; 0x0f
    11d6:	e2 0f       	add	r30, r18
    11d8:	f3 1f       	adc	r31, r19
    11da:	e6 0d       	add	r30, r6
    11dc:	f7 1d       	adc	r31, r7
    11de:	81 81       	ldd	r24, Z+1	; 0x01
    11e0:	01 c0       	rjmp	.+2      	; 0x11e4 <vfprintf+0x2fe>
    11e2:	80 e3       	ldi	r24, 0x30	; 48
    11e4:	51 e0       	ldi	r21, 0x01	; 1
    11e6:	25 1a       	sub	r2, r21
    11e8:	31 08       	sbc	r3, r1
    11ea:	2f 5f       	subi	r18, 0xFF	; 255
    11ec:	3f 4f       	sbci	r19, 0xFF	; 255
    11ee:	48 89       	ldd	r20, Y+16	; 0x10
    11f0:	59 89       	ldd	r21, Y+17	; 0x11
    11f2:	24 16       	cp	r2, r20
    11f4:	35 06       	cpc	r3, r21
    11f6:	4c f0       	brlt	.+18     	; 0x120a <vfprintf+0x324>
    11f8:	b6 01       	movw	r22, r12
    11fa:	90 e0       	ldi	r25, 0x00	; 0
    11fc:	2a 8b       	std	Y+18, r18	; 0x12
    11fe:	3b 8b       	std	Y+19, r19	; 0x13
    1200:	0e 94 47 0c 	call	0x188e	; 0x188e <fputc>
    1204:	2a 89       	ldd	r18, Y+18	; 0x12
    1206:	3b 89       	ldd	r19, Y+19	; 0x13
    1208:	cf cf       	rjmp	.-98     	; 0x11a8 <vfprintf+0x2c2>
    120a:	24 14       	cp	r2, r4
    120c:	35 04       	cpc	r3, r5
    120e:	39 f4       	brne	.+14     	; 0x121e <vfprintf+0x338>
    1210:	9a 81       	ldd	r25, Y+2	; 0x02
    1212:	96 33       	cpi	r25, 0x36	; 54
    1214:	18 f4       	brcc	.+6      	; 0x121c <vfprintf+0x336>
    1216:	95 33       	cpi	r25, 0x35	; 53
    1218:	11 f4       	brne	.+4      	; 0x121e <vfprintf+0x338>
    121a:	04 ff       	sbrs	r16, 4
    121c:	81 e3       	ldi	r24, 0x31	; 49
    121e:	b6 01       	movw	r22, r12
    1220:	90 e0       	ldi	r25, 0x00	; 0
    1222:	4b c0       	rjmp	.+150    	; 0x12ba <vfprintf+0x3d4>
    1224:	8a 81       	ldd	r24, Y+2	; 0x02
    1226:	81 33       	cpi	r24, 0x31	; 49
    1228:	09 f0       	breq	.+2      	; 0x122c <vfprintf+0x346>
    122a:	0f 7e       	andi	r16, 0xEF	; 239
    122c:	b6 01       	movw	r22, r12
    122e:	90 e0       	ldi	r25, 0x00	; 0
    1230:	0e 94 47 0c 	call	0x188e	; 0x188e <fputc>
    1234:	11 11       	cpse	r17, r1
    1236:	05 c0       	rjmp	.+10     	; 0x1242 <vfprintf+0x35c>
    1238:	34 fc       	sbrc	r3, 4
    123a:	18 c0       	rjmp	.+48     	; 0x126c <vfprintf+0x386>
    123c:	85 e6       	ldi	r24, 0x65	; 101
    123e:	90 e0       	ldi	r25, 0x00	; 0
    1240:	17 c0       	rjmp	.+46     	; 0x1270 <vfprintf+0x38a>
    1242:	b6 01       	movw	r22, r12
    1244:	8e e2       	ldi	r24, 0x2E	; 46
    1246:	90 e0       	ldi	r25, 0x00	; 0
    1248:	0e 94 47 0c 	call	0x188e	; 0x188e <fputc>
    124c:	82 e0       	ldi	r24, 0x02	; 2
    124e:	ee 24       	eor	r14, r14
    1250:	e3 94       	inc	r14
    1252:	e8 0e       	add	r14, r24
    1254:	f3 01       	movw	r30, r6
    1256:	e8 0f       	add	r30, r24
    1258:	f1 1d       	adc	r31, r1
    125a:	80 81       	ld	r24, Z
    125c:	b6 01       	movw	r22, r12
    125e:	90 e0       	ldi	r25, 0x00	; 0
    1260:	0e 94 47 0c 	call	0x188e	; 0x188e <fputc>
    1264:	11 50       	subi	r17, 0x01	; 1
    1266:	8e 2d       	mov	r24, r14
    1268:	91 f7       	brne	.-28     	; 0x124e <vfprintf+0x368>
    126a:	e6 cf       	rjmp	.-52     	; 0x1238 <vfprintf+0x352>
    126c:	85 e4       	ldi	r24, 0x45	; 69
    126e:	90 e0       	ldi	r25, 0x00	; 0
    1270:	b6 01       	movw	r22, r12
    1272:	0e 94 47 0c 	call	0x188e	; 0x188e <fputc>
    1276:	57 fc       	sbrc	r5, 7
    1278:	05 c0       	rjmp	.+10     	; 0x1284 <vfprintf+0x39e>
    127a:	41 14       	cp	r4, r1
    127c:	51 04       	cpc	r5, r1
    127e:	39 f4       	brne	.+14     	; 0x128e <vfprintf+0x3a8>
    1280:	04 ff       	sbrs	r16, 4
    1282:	05 c0       	rjmp	.+10     	; 0x128e <vfprintf+0x3a8>
    1284:	51 94       	neg	r5
    1286:	41 94       	neg	r4
    1288:	51 08       	sbc	r5, r1
    128a:	8d e2       	ldi	r24, 0x2D	; 45
    128c:	01 c0       	rjmp	.+2      	; 0x1290 <vfprintf+0x3aa>
    128e:	8b e2       	ldi	r24, 0x2B	; 43
    1290:	b6 01       	movw	r22, r12
    1292:	90 e0       	ldi	r25, 0x00	; 0
    1294:	0e 94 47 0c 	call	0x188e	; 0x188e <fputc>
    1298:	80 e3       	ldi	r24, 0x30	; 48
    129a:	9a e0       	ldi	r25, 0x0A	; 10
    129c:	49 16       	cp	r4, r25
    129e:	51 04       	cpc	r5, r1
    12a0:	2c f0       	brlt	.+10     	; 0x12ac <vfprintf+0x3c6>
    12a2:	8f 5f       	subi	r24, 0xFF	; 255
    12a4:	5a e0       	ldi	r21, 0x0A	; 10
    12a6:	45 1a       	sub	r4, r21
    12a8:	51 08       	sbc	r5, r1
    12aa:	f7 cf       	rjmp	.-18     	; 0x129a <vfprintf+0x3b4>
    12ac:	b6 01       	movw	r22, r12
    12ae:	90 e0       	ldi	r25, 0x00	; 0
    12b0:	0e 94 47 0c 	call	0x188e	; 0x188e <fputc>
    12b4:	b6 01       	movw	r22, r12
    12b6:	c2 01       	movw	r24, r4
    12b8:	c0 96       	adiw	r24, 0x30	; 48
    12ba:	0e 94 47 0c 	call	0x188e	; 0x188e <fputc>
    12be:	57 c1       	rjmp	.+686    	; 0x156e <vfprintf+0x688>
    12c0:	83 36       	cpi	r24, 0x63	; 99
    12c2:	31 f0       	breq	.+12     	; 0x12d0 <vfprintf+0x3ea>
    12c4:	83 37       	cpi	r24, 0x73	; 115
    12c6:	79 f0       	breq	.+30     	; 0x12e6 <vfprintf+0x400>
    12c8:	83 35       	cpi	r24, 0x53	; 83
    12ca:	09 f0       	breq	.+2      	; 0x12ce <vfprintf+0x3e8>
    12cc:	58 c0       	rjmp	.+176    	; 0x137e <vfprintf+0x498>
    12ce:	21 c0       	rjmp	.+66     	; 0x1312 <vfprintf+0x42c>
    12d0:	52 01       	movw	r10, r4
    12d2:	e2 e0       	ldi	r30, 0x02	; 2
    12d4:	ae 0e       	add	r10, r30
    12d6:	b1 1c       	adc	r11, r1
    12d8:	f2 01       	movw	r30, r4
    12da:	80 81       	ld	r24, Z
    12dc:	89 83       	std	Y+1, r24	; 0x01
    12de:	01 e0       	ldi	r16, 0x01	; 1
    12e0:	10 e0       	ldi	r17, 0x00	; 0
    12e2:	23 01       	movw	r4, r6
    12e4:	14 c0       	rjmp	.+40     	; 0x130e <vfprintf+0x428>
    12e6:	52 01       	movw	r10, r4
    12e8:	f2 e0       	ldi	r31, 0x02	; 2
    12ea:	af 0e       	add	r10, r31
    12ec:	b1 1c       	adc	r11, r1
    12ee:	f2 01       	movw	r30, r4
    12f0:	40 80       	ld	r4, Z
    12f2:	51 80       	ldd	r5, Z+1	; 0x01
    12f4:	26 ff       	sbrs	r18, 6
    12f6:	03 c0       	rjmp	.+6      	; 0x12fe <vfprintf+0x418>
    12f8:	61 2f       	mov	r22, r17
    12fa:	70 e0       	ldi	r23, 0x00	; 0
    12fc:	02 c0       	rjmp	.+4      	; 0x1302 <vfprintf+0x41c>
    12fe:	6f ef       	ldi	r22, 0xFF	; 255
    1300:	7f ef       	ldi	r23, 0xFF	; 255
    1302:	c2 01       	movw	r24, r4
    1304:	2a 8b       	std	Y+18, r18	; 0x12
    1306:	0e 94 3c 0c 	call	0x1878	; 0x1878 <strnlen>
    130a:	8c 01       	movw	r16, r24
    130c:	2a 89       	ldd	r18, Y+18	; 0x12
    130e:	2f 77       	andi	r18, 0x7F	; 127
    1310:	15 c0       	rjmp	.+42     	; 0x133c <vfprintf+0x456>
    1312:	52 01       	movw	r10, r4
    1314:	f2 e0       	ldi	r31, 0x02	; 2
    1316:	af 0e       	add	r10, r31
    1318:	b1 1c       	adc	r11, r1
    131a:	f2 01       	movw	r30, r4
    131c:	40 80       	ld	r4, Z
    131e:	51 80       	ldd	r5, Z+1	; 0x01
    1320:	26 ff       	sbrs	r18, 6
    1322:	03 c0       	rjmp	.+6      	; 0x132a <vfprintf+0x444>
    1324:	61 2f       	mov	r22, r17
    1326:	70 e0       	ldi	r23, 0x00	; 0
    1328:	02 c0       	rjmp	.+4      	; 0x132e <vfprintf+0x448>
    132a:	6f ef       	ldi	r22, 0xFF	; 255
    132c:	7f ef       	ldi	r23, 0xFF	; 255
    132e:	c2 01       	movw	r24, r4
    1330:	2a 8b       	std	Y+18, r18	; 0x12
    1332:	0e 94 26 0c 	call	0x184c	; 0x184c <strnlen_P>
    1336:	8c 01       	movw	r16, r24
    1338:	2a 89       	ldd	r18, Y+18	; 0x12
    133a:	20 68       	ori	r18, 0x80	; 128
    133c:	32 2e       	mov	r3, r18
    133e:	23 fd       	sbrc	r18, 3
    1340:	1a c0       	rjmp	.+52     	; 0x1376 <vfprintf+0x490>
    1342:	8f 2d       	mov	r24, r15
    1344:	90 e0       	ldi	r25, 0x00	; 0
    1346:	08 17       	cp	r16, r24
    1348:	19 07       	cpc	r17, r25
    134a:	a8 f4       	brcc	.+42     	; 0x1376 <vfprintf+0x490>
    134c:	b6 01       	movw	r22, r12
    134e:	80 e2       	ldi	r24, 0x20	; 32
    1350:	90 e0       	ldi	r25, 0x00	; 0
    1352:	0e 94 47 0c 	call	0x188e	; 0x188e <fputc>
    1356:	fa 94       	dec	r15
    1358:	f4 cf       	rjmp	.-24     	; 0x1342 <vfprintf+0x45c>
    135a:	f2 01       	movw	r30, r4
    135c:	37 fc       	sbrc	r3, 7
    135e:	85 91       	lpm	r24, Z+
    1360:	37 fe       	sbrs	r3, 7
    1362:	81 91       	ld	r24, Z+
    1364:	2f 01       	movw	r4, r30
    1366:	b6 01       	movw	r22, r12
    1368:	90 e0       	ldi	r25, 0x00	; 0
    136a:	0e 94 47 0c 	call	0x188e	; 0x188e <fputc>
    136e:	f1 10       	cpse	r15, r1
    1370:	fa 94       	dec	r15
    1372:	01 50       	subi	r16, 0x01	; 1
    1374:	11 09       	sbc	r17, r1
    1376:	01 15       	cp	r16, r1
    1378:	11 05       	cpc	r17, r1
    137a:	79 f7       	brne	.-34     	; 0x135a <vfprintf+0x474>
    137c:	f8 c0       	rjmp	.+496    	; 0x156e <vfprintf+0x688>
    137e:	84 36       	cpi	r24, 0x64	; 100
    1380:	11 f0       	breq	.+4      	; 0x1386 <vfprintf+0x4a0>
    1382:	89 36       	cpi	r24, 0x69	; 105
    1384:	59 f5       	brne	.+86     	; 0x13dc <vfprintf+0x4f6>
    1386:	52 01       	movw	r10, r4
    1388:	27 ff       	sbrs	r18, 7
    138a:	09 c0       	rjmp	.+18     	; 0x139e <vfprintf+0x4b8>
    138c:	f4 e0       	ldi	r31, 0x04	; 4
    138e:	af 0e       	add	r10, r31
    1390:	b1 1c       	adc	r11, r1
    1392:	f2 01       	movw	r30, r4
    1394:	60 81       	ld	r22, Z
    1396:	71 81       	ldd	r23, Z+1	; 0x01
    1398:	82 81       	ldd	r24, Z+2	; 0x02
    139a:	93 81       	ldd	r25, Z+3	; 0x03
    139c:	0a c0       	rjmp	.+20     	; 0x13b2 <vfprintf+0x4cc>
    139e:	f2 e0       	ldi	r31, 0x02	; 2
    13a0:	af 0e       	add	r10, r31
    13a2:	b1 1c       	adc	r11, r1
    13a4:	f2 01       	movw	r30, r4
    13a6:	60 81       	ld	r22, Z
    13a8:	71 81       	ldd	r23, Z+1	; 0x01
    13aa:	07 2e       	mov	r0, r23
    13ac:	00 0c       	add	r0, r0
    13ae:	88 0b       	sbc	r24, r24
    13b0:	99 0b       	sbc	r25, r25
    13b2:	2f 76       	andi	r18, 0x6F	; 111
    13b4:	32 2e       	mov	r3, r18
    13b6:	97 ff       	sbrs	r25, 7
    13b8:	09 c0       	rjmp	.+18     	; 0x13cc <vfprintf+0x4e6>
    13ba:	90 95       	com	r25
    13bc:	80 95       	com	r24
    13be:	70 95       	com	r23
    13c0:	61 95       	neg	r22
    13c2:	7f 4f       	sbci	r23, 0xFF	; 255
    13c4:	8f 4f       	sbci	r24, 0xFF	; 255
    13c6:	9f 4f       	sbci	r25, 0xFF	; 255
    13c8:	20 68       	ori	r18, 0x80	; 128
    13ca:	32 2e       	mov	r3, r18
    13cc:	2a e0       	ldi	r18, 0x0A	; 10
    13ce:	30 e0       	ldi	r19, 0x00	; 0
    13d0:	a3 01       	movw	r20, r6
    13d2:	0e 94 a2 0c 	call	0x1944	; 0x1944 <__ultoa_invert>
    13d6:	e8 2e       	mov	r14, r24
    13d8:	e6 18       	sub	r14, r6
    13da:	3f c0       	rjmp	.+126    	; 0x145a <vfprintf+0x574>
    13dc:	02 2f       	mov	r16, r18
    13de:	85 37       	cpi	r24, 0x75	; 117
    13e0:	21 f4       	brne	.+8      	; 0x13ea <vfprintf+0x504>
    13e2:	0f 7e       	andi	r16, 0xEF	; 239
    13e4:	2a e0       	ldi	r18, 0x0A	; 10
    13e6:	30 e0       	ldi	r19, 0x00	; 0
    13e8:	1d c0       	rjmp	.+58     	; 0x1424 <vfprintf+0x53e>
    13ea:	09 7f       	andi	r16, 0xF9	; 249
    13ec:	8f 36       	cpi	r24, 0x6F	; 111
    13ee:	91 f0       	breq	.+36     	; 0x1414 <vfprintf+0x52e>
    13f0:	18 f4       	brcc	.+6      	; 0x13f8 <vfprintf+0x512>
    13f2:	88 35       	cpi	r24, 0x58	; 88
    13f4:	59 f0       	breq	.+22     	; 0x140c <vfprintf+0x526>
    13f6:	c5 c0       	rjmp	.+394    	; 0x1582 <vfprintf+0x69c>
    13f8:	80 37       	cpi	r24, 0x70	; 112
    13fa:	19 f0       	breq	.+6      	; 0x1402 <vfprintf+0x51c>
    13fc:	88 37       	cpi	r24, 0x78	; 120
    13fe:	11 f0       	breq	.+4      	; 0x1404 <vfprintf+0x51e>
    1400:	c0 c0       	rjmp	.+384    	; 0x1582 <vfprintf+0x69c>
    1402:	00 61       	ori	r16, 0x10	; 16
    1404:	04 ff       	sbrs	r16, 4
    1406:	09 c0       	rjmp	.+18     	; 0x141a <vfprintf+0x534>
    1408:	04 60       	ori	r16, 0x04	; 4
    140a:	07 c0       	rjmp	.+14     	; 0x141a <vfprintf+0x534>
    140c:	24 ff       	sbrs	r18, 4
    140e:	08 c0       	rjmp	.+16     	; 0x1420 <vfprintf+0x53a>
    1410:	06 60       	ori	r16, 0x06	; 6
    1412:	06 c0       	rjmp	.+12     	; 0x1420 <vfprintf+0x53a>
    1414:	28 e0       	ldi	r18, 0x08	; 8
    1416:	30 e0       	ldi	r19, 0x00	; 0
    1418:	05 c0       	rjmp	.+10     	; 0x1424 <vfprintf+0x53e>
    141a:	20 e1       	ldi	r18, 0x10	; 16
    141c:	30 e0       	ldi	r19, 0x00	; 0
    141e:	02 c0       	rjmp	.+4      	; 0x1424 <vfprintf+0x53e>
    1420:	20 e1       	ldi	r18, 0x10	; 16
    1422:	32 e0       	ldi	r19, 0x02	; 2
    1424:	52 01       	movw	r10, r4
    1426:	07 ff       	sbrs	r16, 7
    1428:	09 c0       	rjmp	.+18     	; 0x143c <vfprintf+0x556>
    142a:	f4 e0       	ldi	r31, 0x04	; 4
    142c:	af 0e       	add	r10, r31
    142e:	b1 1c       	adc	r11, r1
    1430:	f2 01       	movw	r30, r4
    1432:	60 81       	ld	r22, Z
    1434:	71 81       	ldd	r23, Z+1	; 0x01
    1436:	82 81       	ldd	r24, Z+2	; 0x02
    1438:	93 81       	ldd	r25, Z+3	; 0x03
    143a:	08 c0       	rjmp	.+16     	; 0x144c <vfprintf+0x566>
    143c:	f2 e0       	ldi	r31, 0x02	; 2
    143e:	af 0e       	add	r10, r31
    1440:	b1 1c       	adc	r11, r1
    1442:	f2 01       	movw	r30, r4
    1444:	60 81       	ld	r22, Z
    1446:	71 81       	ldd	r23, Z+1	; 0x01
    1448:	80 e0       	ldi	r24, 0x00	; 0
    144a:	90 e0       	ldi	r25, 0x00	; 0
    144c:	a3 01       	movw	r20, r6
    144e:	0e 94 a2 0c 	call	0x1944	; 0x1944 <__ultoa_invert>
    1452:	e8 2e       	mov	r14, r24
    1454:	e6 18       	sub	r14, r6
    1456:	0f 77       	andi	r16, 0x7F	; 127
    1458:	30 2e       	mov	r3, r16
    145a:	36 fe       	sbrs	r3, 6
    145c:	0b c0       	rjmp	.+22     	; 0x1474 <vfprintf+0x58e>
    145e:	33 2d       	mov	r19, r3
    1460:	3e 7f       	andi	r19, 0xFE	; 254
    1462:	e1 16       	cp	r14, r17
    1464:	50 f4       	brcc	.+20     	; 0x147a <vfprintf+0x594>
    1466:	34 fe       	sbrs	r3, 4
    1468:	0a c0       	rjmp	.+20     	; 0x147e <vfprintf+0x598>
    146a:	32 fc       	sbrc	r3, 2
    146c:	08 c0       	rjmp	.+16     	; 0x147e <vfprintf+0x598>
    146e:	33 2d       	mov	r19, r3
    1470:	3e 7e       	andi	r19, 0xEE	; 238
    1472:	05 c0       	rjmp	.+10     	; 0x147e <vfprintf+0x598>
    1474:	0e 2d       	mov	r16, r14
    1476:	33 2d       	mov	r19, r3
    1478:	03 c0       	rjmp	.+6      	; 0x1480 <vfprintf+0x59a>
    147a:	0e 2d       	mov	r16, r14
    147c:	01 c0       	rjmp	.+2      	; 0x1480 <vfprintf+0x59a>
    147e:	01 2f       	mov	r16, r17
    1480:	34 ff       	sbrs	r19, 4
    1482:	0c c0       	rjmp	.+24     	; 0x149c <vfprintf+0x5b6>
    1484:	fe 01       	movw	r30, r28
    1486:	ee 0d       	add	r30, r14
    1488:	f1 1d       	adc	r31, r1
    148a:	80 81       	ld	r24, Z
    148c:	80 33       	cpi	r24, 0x30	; 48
    148e:	11 f4       	brne	.+4      	; 0x1494 <vfprintf+0x5ae>
    1490:	39 7e       	andi	r19, 0xE9	; 233
    1492:	08 c0       	rjmp	.+16     	; 0x14a4 <vfprintf+0x5be>
    1494:	32 ff       	sbrs	r19, 2
    1496:	05 c0       	rjmp	.+10     	; 0x14a2 <vfprintf+0x5bc>
    1498:	0e 5f       	subi	r16, 0xFE	; 254
    149a:	04 c0       	rjmp	.+8      	; 0x14a4 <vfprintf+0x5be>
    149c:	83 2f       	mov	r24, r19
    149e:	86 78       	andi	r24, 0x86	; 134
    14a0:	09 f0       	breq	.+2      	; 0x14a4 <vfprintf+0x5be>
    14a2:	0f 5f       	subi	r16, 0xFF	; 255
    14a4:	33 fd       	sbrc	r19, 3
    14a6:	13 c0       	rjmp	.+38     	; 0x14ce <vfprintf+0x5e8>
    14a8:	30 ff       	sbrs	r19, 0
    14aa:	06 c0       	rjmp	.+12     	; 0x14b8 <vfprintf+0x5d2>
    14ac:	1e 2d       	mov	r17, r14
    14ae:	0f 15       	cp	r16, r15
    14b0:	18 f4       	brcc	.+6      	; 0x14b8 <vfprintf+0x5d2>
    14b2:	1f 0d       	add	r17, r15
    14b4:	10 1b       	sub	r17, r16
    14b6:	0f 2d       	mov	r16, r15
    14b8:	0f 15       	cp	r16, r15
    14ba:	68 f4       	brcc	.+26     	; 0x14d6 <vfprintf+0x5f0>
    14bc:	b6 01       	movw	r22, r12
    14be:	80 e2       	ldi	r24, 0x20	; 32
    14c0:	90 e0       	ldi	r25, 0x00	; 0
    14c2:	3b 8b       	std	Y+19, r19	; 0x13
    14c4:	0e 94 47 0c 	call	0x188e	; 0x188e <fputc>
    14c8:	0f 5f       	subi	r16, 0xFF	; 255
    14ca:	3b 89       	ldd	r19, Y+19	; 0x13
    14cc:	f5 cf       	rjmp	.-22     	; 0x14b8 <vfprintf+0x5d2>
    14ce:	0f 15       	cp	r16, r15
    14d0:	10 f4       	brcc	.+4      	; 0x14d6 <vfprintf+0x5f0>
    14d2:	f0 1a       	sub	r15, r16
    14d4:	01 c0       	rjmp	.+2      	; 0x14d8 <vfprintf+0x5f2>
    14d6:	f1 2c       	mov	r15, r1
    14d8:	34 ff       	sbrs	r19, 4
    14da:	12 c0       	rjmp	.+36     	; 0x1500 <vfprintf+0x61a>
    14dc:	b6 01       	movw	r22, r12
    14de:	80 e3       	ldi	r24, 0x30	; 48
    14e0:	90 e0       	ldi	r25, 0x00	; 0
    14e2:	3b 8b       	std	Y+19, r19	; 0x13
    14e4:	0e 94 47 0c 	call	0x188e	; 0x188e <fputc>
    14e8:	3b 89       	ldd	r19, Y+19	; 0x13
    14ea:	32 ff       	sbrs	r19, 2
    14ec:	17 c0       	rjmp	.+46     	; 0x151c <vfprintf+0x636>
    14ee:	31 fd       	sbrc	r19, 1
    14f0:	03 c0       	rjmp	.+6      	; 0x14f8 <vfprintf+0x612>
    14f2:	88 e7       	ldi	r24, 0x78	; 120
    14f4:	90 e0       	ldi	r25, 0x00	; 0
    14f6:	02 c0       	rjmp	.+4      	; 0x14fc <vfprintf+0x616>
    14f8:	88 e5       	ldi	r24, 0x58	; 88
    14fa:	90 e0       	ldi	r25, 0x00	; 0
    14fc:	b6 01       	movw	r22, r12
    14fe:	0c c0       	rjmp	.+24     	; 0x1518 <vfprintf+0x632>
    1500:	83 2f       	mov	r24, r19
    1502:	86 78       	andi	r24, 0x86	; 134
    1504:	59 f0       	breq	.+22     	; 0x151c <vfprintf+0x636>
    1506:	31 ff       	sbrs	r19, 1
    1508:	02 c0       	rjmp	.+4      	; 0x150e <vfprintf+0x628>
    150a:	8b e2       	ldi	r24, 0x2B	; 43
    150c:	01 c0       	rjmp	.+2      	; 0x1510 <vfprintf+0x62a>
    150e:	80 e2       	ldi	r24, 0x20	; 32
    1510:	37 fd       	sbrc	r19, 7
    1512:	8d e2       	ldi	r24, 0x2D	; 45
    1514:	b6 01       	movw	r22, r12
    1516:	90 e0       	ldi	r25, 0x00	; 0
    1518:	0e 94 47 0c 	call	0x188e	; 0x188e <fputc>
    151c:	e1 16       	cp	r14, r17
    151e:	38 f4       	brcc	.+14     	; 0x152e <vfprintf+0x648>
    1520:	b6 01       	movw	r22, r12
    1522:	80 e3       	ldi	r24, 0x30	; 48
    1524:	90 e0       	ldi	r25, 0x00	; 0
    1526:	0e 94 47 0c 	call	0x188e	; 0x188e <fputc>
    152a:	11 50       	subi	r17, 0x01	; 1
    152c:	f7 cf       	rjmp	.-18     	; 0x151c <vfprintf+0x636>
    152e:	ea 94       	dec	r14
    1530:	f3 01       	movw	r30, r6
    1532:	ee 0d       	add	r30, r14
    1534:	f1 1d       	adc	r31, r1
    1536:	80 81       	ld	r24, Z
    1538:	b6 01       	movw	r22, r12
    153a:	90 e0       	ldi	r25, 0x00	; 0
    153c:	0e 94 47 0c 	call	0x188e	; 0x188e <fputc>
    1540:	e1 10       	cpse	r14, r1
    1542:	f5 cf       	rjmp	.-22     	; 0x152e <vfprintf+0x648>
    1544:	14 c0       	rjmp	.+40     	; 0x156e <vfprintf+0x688>
    1546:	f4 e0       	ldi	r31, 0x04	; 4
    1548:	ff 15       	cp	r31, r15
    154a:	58 f5       	brcc	.+86     	; 0x15a2 <vfprintf+0x6bc>
    154c:	84 e0       	ldi	r24, 0x04	; 4
    154e:	f8 1a       	sub	r15, r24
    1550:	33 fe       	sbrs	r3, 3
    1552:	1e c0       	rjmp	.+60     	; 0x1590 <vfprintf+0x6aa>
    1554:	21 10       	cpse	r2, r1
    1556:	26 c0       	rjmp	.+76     	; 0x15a4 <vfprintf+0x6be>
    1558:	03 ff       	sbrs	r16, 3
    155a:	2a c0       	rjmp	.+84     	; 0x15b0 <vfprintf+0x6ca>
    155c:	08 e6       	ldi	r16, 0x68	; 104
    155e:	10 e0       	ldi	r17, 0x00	; 0
    1560:	f3 2d       	mov	r31, r3
    1562:	f0 71       	andi	r31, 0x10	; 16
    1564:	3f 2e       	mov	r3, r31
    1566:	f8 01       	movw	r30, r16
    1568:	84 91       	lpm	r24, Z
    156a:	81 11       	cpse	r24, r1
    156c:	24 c0       	rjmp	.+72     	; 0x15b6 <vfprintf+0x6d0>
    156e:	ff 20       	and	r15, r15
    1570:	09 f4       	brne	.+2      	; 0x1574 <vfprintf+0x68e>
    1572:	e5 cc       	rjmp	.-1590   	; 0xf3e <vfprintf+0x58>
    1574:	b6 01       	movw	r22, r12
    1576:	80 e2       	ldi	r24, 0x20	; 32
    1578:	90 e0       	ldi	r25, 0x00	; 0
    157a:	0e 94 47 0c 	call	0x188e	; 0x188e <fputc>
    157e:	fa 94       	dec	r15
    1580:	f6 cf       	rjmp	.-20     	; 0x156e <vfprintf+0x688>
    1582:	f6 01       	movw	r30, r12
    1584:	86 81       	ldd	r24, Z+6	; 0x06
    1586:	97 81       	ldd	r25, Z+7	; 0x07
    1588:	26 c0       	rjmp	.+76     	; 0x15d6 <vfprintf+0x6f0>
    158a:	8f ef       	ldi	r24, 0xFF	; 255
    158c:	9f ef       	ldi	r25, 0xFF	; 255
    158e:	23 c0       	rjmp	.+70     	; 0x15d6 <vfprintf+0x6f0>
    1590:	b6 01       	movw	r22, r12
    1592:	80 e2       	ldi	r24, 0x20	; 32
    1594:	90 e0       	ldi	r25, 0x00	; 0
    1596:	0e 94 47 0c 	call	0x188e	; 0x188e <fputc>
    159a:	fa 94       	dec	r15
    159c:	f1 10       	cpse	r15, r1
    159e:	f8 cf       	rjmp	.-16     	; 0x1590 <vfprintf+0x6aa>
    15a0:	d9 cf       	rjmp	.-78     	; 0x1554 <vfprintf+0x66e>
    15a2:	f1 2c       	mov	r15, r1
    15a4:	b6 01       	movw	r22, r12
    15a6:	82 2d       	mov	r24, r2
    15a8:	90 e0       	ldi	r25, 0x00	; 0
    15aa:	0e 94 47 0c 	call	0x188e	; 0x188e <fputc>
    15ae:	d4 cf       	rjmp	.-88     	; 0x1558 <vfprintf+0x672>
    15b0:	0c e6       	ldi	r16, 0x6C	; 108
    15b2:	10 e0       	ldi	r17, 0x00	; 0
    15b4:	d5 cf       	rjmp	.-86     	; 0x1560 <vfprintf+0x67a>
    15b6:	31 10       	cpse	r3, r1
    15b8:	80 52       	subi	r24, 0x20	; 32
    15ba:	b6 01       	movw	r22, r12
    15bc:	90 e0       	ldi	r25, 0x00	; 0
    15be:	0e 94 47 0c 	call	0x188e	; 0x188e <fputc>
    15c2:	0f 5f       	subi	r16, 0xFF	; 255
    15c4:	1f 4f       	sbci	r17, 0xFF	; 255
    15c6:	cf cf       	rjmp	.-98     	; 0x1566 <vfprintf+0x680>
    15c8:	23 e0       	ldi	r18, 0x03	; 3
    15ca:	2f 15       	cp	r18, r15
    15cc:	10 f4       	brcc	.+4      	; 0x15d2 <vfprintf+0x6ec>
    15ce:	83 e0       	ldi	r24, 0x03	; 3
    15d0:	be cf       	rjmp	.-132    	; 0x154e <vfprintf+0x668>
    15d2:	f1 2c       	mov	r15, r1
    15d4:	c1 cf       	rjmp	.-126    	; 0x1558 <vfprintf+0x672>
    15d6:	63 96       	adiw	r28, 0x13	; 19
    15d8:	e2 e1       	ldi	r30, 0x12	; 18
    15da:	0c 94 2d 0b 	jmp	0x165a	; 0x165a <__epilogue_restores__>

000015de <__udivmodsi4>:
    15de:	a1 e2       	ldi	r26, 0x21	; 33
    15e0:	1a 2e       	mov	r1, r26
    15e2:	aa 1b       	sub	r26, r26
    15e4:	bb 1b       	sub	r27, r27
    15e6:	fd 01       	movw	r30, r26
    15e8:	0d c0       	rjmp	.+26     	; 0x1604 <__udivmodsi4_ep>

000015ea <__udivmodsi4_loop>:
    15ea:	aa 1f       	adc	r26, r26
    15ec:	bb 1f       	adc	r27, r27
    15ee:	ee 1f       	adc	r30, r30
    15f0:	ff 1f       	adc	r31, r31
    15f2:	a2 17       	cp	r26, r18
    15f4:	b3 07       	cpc	r27, r19
    15f6:	e4 07       	cpc	r30, r20
    15f8:	f5 07       	cpc	r31, r21
    15fa:	20 f0       	brcs	.+8      	; 0x1604 <__udivmodsi4_ep>
    15fc:	a2 1b       	sub	r26, r18
    15fe:	b3 0b       	sbc	r27, r19
    1600:	e4 0b       	sbc	r30, r20
    1602:	f5 0b       	sbc	r31, r21

00001604 <__udivmodsi4_ep>:
    1604:	66 1f       	adc	r22, r22
    1606:	77 1f       	adc	r23, r23
    1608:	88 1f       	adc	r24, r24
    160a:	99 1f       	adc	r25, r25
    160c:	1a 94       	dec	r1
    160e:	69 f7       	brne	.-38     	; 0x15ea <__udivmodsi4_loop>
    1610:	60 95       	com	r22
    1612:	70 95       	com	r23
    1614:	80 95       	com	r24
    1616:	90 95       	com	r25
    1618:	9b 01       	movw	r18, r22
    161a:	ac 01       	movw	r20, r24
    161c:	bd 01       	movw	r22, r26
    161e:	cf 01       	movw	r24, r30
    1620:	08 95       	ret

00001622 <__prologue_saves__>:
    1622:	2f 92       	push	r2
    1624:	3f 92       	push	r3
    1626:	4f 92       	push	r4
    1628:	5f 92       	push	r5
    162a:	6f 92       	push	r6
    162c:	7f 92       	push	r7
    162e:	8f 92       	push	r8
    1630:	9f 92       	push	r9
    1632:	af 92       	push	r10
    1634:	bf 92       	push	r11
    1636:	cf 92       	push	r12
    1638:	df 92       	push	r13
    163a:	ef 92       	push	r14
    163c:	ff 92       	push	r15
    163e:	0f 93       	push	r16
    1640:	1f 93       	push	r17
    1642:	cf 93       	push	r28
    1644:	df 93       	push	r29
    1646:	cd b7       	in	r28, 0x3d	; 61
    1648:	de b7       	in	r29, 0x3e	; 62
    164a:	ca 1b       	sub	r28, r26
    164c:	db 0b       	sbc	r29, r27
    164e:	0f b6       	in	r0, 0x3f	; 63
    1650:	f8 94       	cli
    1652:	de bf       	out	0x3e, r29	; 62
    1654:	0f be       	out	0x3f, r0	; 63
    1656:	cd bf       	out	0x3d, r28	; 61
    1658:	09 94       	ijmp

0000165a <__epilogue_restores__>:
    165a:	2a 88       	ldd	r2, Y+18	; 0x12
    165c:	39 88       	ldd	r3, Y+17	; 0x11
    165e:	48 88       	ldd	r4, Y+16	; 0x10
    1660:	5f 84       	ldd	r5, Y+15	; 0x0f
    1662:	6e 84       	ldd	r6, Y+14	; 0x0e
    1664:	7d 84       	ldd	r7, Y+13	; 0x0d
    1666:	8c 84       	ldd	r8, Y+12	; 0x0c
    1668:	9b 84       	ldd	r9, Y+11	; 0x0b
    166a:	aa 84       	ldd	r10, Y+10	; 0x0a
    166c:	b9 84       	ldd	r11, Y+9	; 0x09
    166e:	c8 84       	ldd	r12, Y+8	; 0x08
    1670:	df 80       	ldd	r13, Y+7	; 0x07
    1672:	ee 80       	ldd	r14, Y+6	; 0x06
    1674:	fd 80       	ldd	r15, Y+5	; 0x05
    1676:	0c 81       	ldd	r16, Y+4	; 0x04
    1678:	1b 81       	ldd	r17, Y+3	; 0x03
    167a:	aa 81       	ldd	r26, Y+2	; 0x02
    167c:	b9 81       	ldd	r27, Y+1	; 0x01
    167e:	ce 0f       	add	r28, r30
    1680:	d1 1d       	adc	r29, r1
    1682:	0f b6       	in	r0, 0x3f	; 63
    1684:	f8 94       	cli
    1686:	de bf       	out	0x3e, r29	; 62
    1688:	0f be       	out	0x3f, r0	; 63
    168a:	cd bf       	out	0x3d, r28	; 61
    168c:	ed 01       	movw	r28, r26
    168e:	08 95       	ret

00001690 <__tablejump2__>:
    1690:	ee 0f       	add	r30, r30
    1692:	ff 1f       	adc	r31, r31
    1694:	05 90       	lpm	r0, Z+
    1696:	f4 91       	lpm	r31, Z
    1698:	e0 2d       	mov	r30, r0
    169a:	09 94       	ijmp

0000169c <__ftoa_engine>:
    169c:	28 30       	cpi	r18, 0x08	; 8
    169e:	08 f0       	brcs	.+2      	; 0x16a2 <__ftoa_engine+0x6>
    16a0:	27 e0       	ldi	r18, 0x07	; 7
    16a2:	33 27       	eor	r19, r19
    16a4:	da 01       	movw	r26, r20
    16a6:	99 0f       	add	r25, r25
    16a8:	31 1d       	adc	r19, r1
    16aa:	87 fd       	sbrc	r24, 7
    16ac:	91 60       	ori	r25, 0x01	; 1
    16ae:	00 96       	adiw	r24, 0x00	; 0
    16b0:	61 05       	cpc	r22, r1
    16b2:	71 05       	cpc	r23, r1
    16b4:	39 f4       	brne	.+14     	; 0x16c4 <__ftoa_engine+0x28>
    16b6:	32 60       	ori	r19, 0x02	; 2
    16b8:	2e 5f       	subi	r18, 0xFE	; 254
    16ba:	3d 93       	st	X+, r19
    16bc:	30 e3       	ldi	r19, 0x30	; 48
    16be:	2a 95       	dec	r18
    16c0:	e1 f7       	brne	.-8      	; 0x16ba <__ftoa_engine+0x1e>
    16c2:	08 95       	ret
    16c4:	9f 3f       	cpi	r25, 0xFF	; 255
    16c6:	30 f0       	brcs	.+12     	; 0x16d4 <__ftoa_engine+0x38>
    16c8:	80 38       	cpi	r24, 0x80	; 128
    16ca:	71 05       	cpc	r23, r1
    16cc:	61 05       	cpc	r22, r1
    16ce:	09 f0       	breq	.+2      	; 0x16d2 <__ftoa_engine+0x36>
    16d0:	3c 5f       	subi	r19, 0xFC	; 252
    16d2:	3c 5f       	subi	r19, 0xFC	; 252
    16d4:	3d 93       	st	X+, r19
    16d6:	91 30       	cpi	r25, 0x01	; 1
    16d8:	08 f0       	brcs	.+2      	; 0x16dc <__ftoa_engine+0x40>
    16da:	80 68       	ori	r24, 0x80	; 128
    16dc:	91 1d       	adc	r25, r1
    16de:	df 93       	push	r29
    16e0:	cf 93       	push	r28
    16e2:	1f 93       	push	r17
    16e4:	0f 93       	push	r16
    16e6:	ff 92       	push	r15
    16e8:	ef 92       	push	r14
    16ea:	19 2f       	mov	r17, r25
    16ec:	98 7f       	andi	r25, 0xF8	; 248
    16ee:	96 95       	lsr	r25
    16f0:	e9 2f       	mov	r30, r25
    16f2:	96 95       	lsr	r25
    16f4:	96 95       	lsr	r25
    16f6:	e9 0f       	add	r30, r25
    16f8:	ff 27       	eor	r31, r31
    16fa:	e6 53       	subi	r30, 0x36	; 54
    16fc:	ff 4f       	sbci	r31, 0xFF	; 255
    16fe:	99 27       	eor	r25, r25
    1700:	33 27       	eor	r19, r19
    1702:	ee 24       	eor	r14, r14
    1704:	ff 24       	eor	r15, r15
    1706:	a7 01       	movw	r20, r14
    1708:	e7 01       	movw	r28, r14
    170a:	05 90       	lpm	r0, Z+
    170c:	08 94       	sec
    170e:	07 94       	ror	r0
    1710:	28 f4       	brcc	.+10     	; 0x171c <__ftoa_engine+0x80>
    1712:	36 0f       	add	r19, r22
    1714:	e7 1e       	adc	r14, r23
    1716:	f8 1e       	adc	r15, r24
    1718:	49 1f       	adc	r20, r25
    171a:	51 1d       	adc	r21, r1
    171c:	66 0f       	add	r22, r22
    171e:	77 1f       	adc	r23, r23
    1720:	88 1f       	adc	r24, r24
    1722:	99 1f       	adc	r25, r25
    1724:	06 94       	lsr	r0
    1726:	a1 f7       	brne	.-24     	; 0x1710 <__ftoa_engine+0x74>
    1728:	05 90       	lpm	r0, Z+
    172a:	07 94       	ror	r0
    172c:	28 f4       	brcc	.+10     	; 0x1738 <__ftoa_engine+0x9c>
    172e:	e7 0e       	add	r14, r23
    1730:	f8 1e       	adc	r15, r24
    1732:	49 1f       	adc	r20, r25
    1734:	56 1f       	adc	r21, r22
    1736:	c1 1d       	adc	r28, r1
    1738:	77 0f       	add	r23, r23
    173a:	88 1f       	adc	r24, r24
    173c:	99 1f       	adc	r25, r25
    173e:	66 1f       	adc	r22, r22
    1740:	06 94       	lsr	r0
    1742:	a1 f7       	brne	.-24     	; 0x172c <__ftoa_engine+0x90>
    1744:	05 90       	lpm	r0, Z+
    1746:	07 94       	ror	r0
    1748:	28 f4       	brcc	.+10     	; 0x1754 <__ftoa_engine+0xb8>
    174a:	f8 0e       	add	r15, r24
    174c:	49 1f       	adc	r20, r25
    174e:	56 1f       	adc	r21, r22
    1750:	c7 1f       	adc	r28, r23
    1752:	d1 1d       	adc	r29, r1
    1754:	88 0f       	add	r24, r24
    1756:	99 1f       	adc	r25, r25
    1758:	66 1f       	adc	r22, r22
    175a:	77 1f       	adc	r23, r23
    175c:	06 94       	lsr	r0
    175e:	a1 f7       	brne	.-24     	; 0x1748 <__ftoa_engine+0xac>
    1760:	05 90       	lpm	r0, Z+
    1762:	07 94       	ror	r0
    1764:	20 f4       	brcc	.+8      	; 0x176e <__ftoa_engine+0xd2>
    1766:	49 0f       	add	r20, r25
    1768:	56 1f       	adc	r21, r22
    176a:	c7 1f       	adc	r28, r23
    176c:	d8 1f       	adc	r29, r24
    176e:	99 0f       	add	r25, r25
    1770:	66 1f       	adc	r22, r22
    1772:	77 1f       	adc	r23, r23
    1774:	88 1f       	adc	r24, r24
    1776:	06 94       	lsr	r0
    1778:	a9 f7       	brne	.-22     	; 0x1764 <__ftoa_engine+0xc8>
    177a:	84 91       	lpm	r24, Z
    177c:	10 95       	com	r17
    177e:	17 70       	andi	r17, 0x07	; 7
    1780:	41 f0       	breq	.+16     	; 0x1792 <__ftoa_engine+0xf6>
    1782:	d6 95       	lsr	r29
    1784:	c7 95       	ror	r28
    1786:	57 95       	ror	r21
    1788:	47 95       	ror	r20
    178a:	f7 94       	ror	r15
    178c:	e7 94       	ror	r14
    178e:	1a 95       	dec	r17
    1790:	c1 f7       	brne	.-16     	; 0x1782 <__ftoa_engine+0xe6>
    1792:	e0 e7       	ldi	r30, 0x70	; 112
    1794:	f0 e0       	ldi	r31, 0x00	; 0
    1796:	68 94       	set
    1798:	15 90       	lpm	r1, Z+
    179a:	15 91       	lpm	r17, Z+
    179c:	35 91       	lpm	r19, Z+
    179e:	65 91       	lpm	r22, Z+
    17a0:	95 91       	lpm	r25, Z+
    17a2:	05 90       	lpm	r0, Z+
    17a4:	7f e2       	ldi	r23, 0x2F	; 47
    17a6:	73 95       	inc	r23
    17a8:	e1 18       	sub	r14, r1
    17aa:	f1 0a       	sbc	r15, r17
    17ac:	43 0b       	sbc	r20, r19
    17ae:	56 0b       	sbc	r21, r22
    17b0:	c9 0b       	sbc	r28, r25
    17b2:	d0 09       	sbc	r29, r0
    17b4:	c0 f7       	brcc	.-16     	; 0x17a6 <__ftoa_engine+0x10a>
    17b6:	e1 0c       	add	r14, r1
    17b8:	f1 1e       	adc	r15, r17
    17ba:	43 1f       	adc	r20, r19
    17bc:	56 1f       	adc	r21, r22
    17be:	c9 1f       	adc	r28, r25
    17c0:	d0 1d       	adc	r29, r0
    17c2:	7e f4       	brtc	.+30     	; 0x17e2 <__ftoa_engine+0x146>
    17c4:	70 33       	cpi	r23, 0x30	; 48
    17c6:	11 f4       	brne	.+4      	; 0x17cc <__ftoa_engine+0x130>
    17c8:	8a 95       	dec	r24
    17ca:	e6 cf       	rjmp	.-52     	; 0x1798 <__ftoa_engine+0xfc>
    17cc:	e8 94       	clt
    17ce:	01 50       	subi	r16, 0x01	; 1
    17d0:	30 f0       	brcs	.+12     	; 0x17de <__ftoa_engine+0x142>
    17d2:	08 0f       	add	r16, r24
    17d4:	0a f4       	brpl	.+2      	; 0x17d8 <__ftoa_engine+0x13c>
    17d6:	00 27       	eor	r16, r16
    17d8:	02 17       	cp	r16, r18
    17da:	08 f4       	brcc	.+2      	; 0x17de <__ftoa_engine+0x142>
    17dc:	20 2f       	mov	r18, r16
    17de:	23 95       	inc	r18
    17e0:	02 2f       	mov	r16, r18
    17e2:	7a 33       	cpi	r23, 0x3A	; 58
    17e4:	28 f0       	brcs	.+10     	; 0x17f0 <__ftoa_engine+0x154>
    17e6:	79 e3       	ldi	r23, 0x39	; 57
    17e8:	7d 93       	st	X+, r23
    17ea:	2a 95       	dec	r18
    17ec:	e9 f7       	brne	.-6      	; 0x17e8 <__ftoa_engine+0x14c>
    17ee:	10 c0       	rjmp	.+32     	; 0x1810 <__ftoa_engine+0x174>
    17f0:	7d 93       	st	X+, r23
    17f2:	2a 95       	dec	r18
    17f4:	89 f6       	brne	.-94     	; 0x1798 <__ftoa_engine+0xfc>
    17f6:	06 94       	lsr	r0
    17f8:	97 95       	ror	r25
    17fa:	67 95       	ror	r22
    17fc:	37 95       	ror	r19
    17fe:	17 95       	ror	r17
    1800:	17 94       	ror	r1
    1802:	e1 18       	sub	r14, r1
    1804:	f1 0a       	sbc	r15, r17
    1806:	43 0b       	sbc	r20, r19
    1808:	56 0b       	sbc	r21, r22
    180a:	c9 0b       	sbc	r28, r25
    180c:	d0 09       	sbc	r29, r0
    180e:	98 f0       	brcs	.+38     	; 0x1836 <__ftoa_engine+0x19a>
    1810:	23 95       	inc	r18
    1812:	7e 91       	ld	r23, -X
    1814:	73 95       	inc	r23
    1816:	7a 33       	cpi	r23, 0x3A	; 58
    1818:	08 f0       	brcs	.+2      	; 0x181c <__ftoa_engine+0x180>
    181a:	70 e3       	ldi	r23, 0x30	; 48
    181c:	7c 93       	st	X, r23
    181e:	20 13       	cpse	r18, r16
    1820:	b8 f7       	brcc	.-18     	; 0x1810 <__ftoa_engine+0x174>
    1822:	7e 91       	ld	r23, -X
    1824:	70 61       	ori	r23, 0x10	; 16
    1826:	7d 93       	st	X+, r23
    1828:	30 f0       	brcs	.+12     	; 0x1836 <__ftoa_engine+0x19a>
    182a:	83 95       	inc	r24
    182c:	71 e3       	ldi	r23, 0x31	; 49
    182e:	7d 93       	st	X+, r23
    1830:	70 e3       	ldi	r23, 0x30	; 48
    1832:	2a 95       	dec	r18
    1834:	e1 f7       	brne	.-8      	; 0x182e <__ftoa_engine+0x192>
    1836:	11 24       	eor	r1, r1
    1838:	ef 90       	pop	r14
    183a:	ff 90       	pop	r15
    183c:	0f 91       	pop	r16
    183e:	1f 91       	pop	r17
    1840:	cf 91       	pop	r28
    1842:	df 91       	pop	r29
    1844:	99 27       	eor	r25, r25
    1846:	87 fd       	sbrc	r24, 7
    1848:	90 95       	com	r25
    184a:	08 95       	ret

0000184c <strnlen_P>:
    184c:	fc 01       	movw	r30, r24
    184e:	05 90       	lpm	r0, Z+
    1850:	61 50       	subi	r22, 0x01	; 1
    1852:	70 40       	sbci	r23, 0x00	; 0
    1854:	01 10       	cpse	r0, r1
    1856:	d8 f7       	brcc	.-10     	; 0x184e <strnlen_P+0x2>
    1858:	80 95       	com	r24
    185a:	90 95       	com	r25
    185c:	8e 0f       	add	r24, r30
    185e:	9f 1f       	adc	r25, r31
    1860:	08 95       	ret

00001862 <strcat>:
    1862:	fb 01       	movw	r30, r22
    1864:	dc 01       	movw	r26, r24
    1866:	0d 90       	ld	r0, X+
    1868:	00 20       	and	r0, r0
    186a:	e9 f7       	brne	.-6      	; 0x1866 <strcat+0x4>
    186c:	11 97       	sbiw	r26, 0x01	; 1
    186e:	01 90       	ld	r0, Z+
    1870:	0d 92       	st	X+, r0
    1872:	00 20       	and	r0, r0
    1874:	e1 f7       	brne	.-8      	; 0x186e <strcat+0xc>
    1876:	08 95       	ret

00001878 <strnlen>:
    1878:	fc 01       	movw	r30, r24
    187a:	61 50       	subi	r22, 0x01	; 1
    187c:	70 40       	sbci	r23, 0x00	; 0
    187e:	01 90       	ld	r0, Z+
    1880:	01 10       	cpse	r0, r1
    1882:	d8 f7       	brcc	.-10     	; 0x187a <strnlen+0x2>
    1884:	80 95       	com	r24
    1886:	90 95       	com	r25
    1888:	8e 0f       	add	r24, r30
    188a:	9f 1f       	adc	r25, r31
    188c:	08 95       	ret

0000188e <fputc>:
    188e:	0f 93       	push	r16
    1890:	1f 93       	push	r17
    1892:	cf 93       	push	r28
    1894:	df 93       	push	r29
    1896:	fb 01       	movw	r30, r22
    1898:	23 81       	ldd	r18, Z+3	; 0x03
    189a:	21 fd       	sbrc	r18, 1
    189c:	03 c0       	rjmp	.+6      	; 0x18a4 <fputc+0x16>
    189e:	8f ef       	ldi	r24, 0xFF	; 255
    18a0:	9f ef       	ldi	r25, 0xFF	; 255
    18a2:	28 c0       	rjmp	.+80     	; 0x18f4 <fputc+0x66>
    18a4:	22 ff       	sbrs	r18, 2
    18a6:	16 c0       	rjmp	.+44     	; 0x18d4 <fputc+0x46>
    18a8:	46 81       	ldd	r20, Z+6	; 0x06
    18aa:	57 81       	ldd	r21, Z+7	; 0x07
    18ac:	24 81       	ldd	r18, Z+4	; 0x04
    18ae:	35 81       	ldd	r19, Z+5	; 0x05
    18b0:	42 17       	cp	r20, r18
    18b2:	53 07       	cpc	r21, r19
    18b4:	44 f4       	brge	.+16     	; 0x18c6 <fputc+0x38>
    18b6:	a0 81       	ld	r26, Z
    18b8:	b1 81       	ldd	r27, Z+1	; 0x01
    18ba:	9d 01       	movw	r18, r26
    18bc:	2f 5f       	subi	r18, 0xFF	; 255
    18be:	3f 4f       	sbci	r19, 0xFF	; 255
    18c0:	31 83       	std	Z+1, r19	; 0x01
    18c2:	20 83       	st	Z, r18
    18c4:	8c 93       	st	X, r24
    18c6:	26 81       	ldd	r18, Z+6	; 0x06
    18c8:	37 81       	ldd	r19, Z+7	; 0x07
    18ca:	2f 5f       	subi	r18, 0xFF	; 255
    18cc:	3f 4f       	sbci	r19, 0xFF	; 255
    18ce:	37 83       	std	Z+7, r19	; 0x07
    18d0:	26 83       	std	Z+6, r18	; 0x06
    18d2:	10 c0       	rjmp	.+32     	; 0x18f4 <fputc+0x66>
    18d4:	eb 01       	movw	r28, r22
    18d6:	09 2f       	mov	r16, r25
    18d8:	18 2f       	mov	r17, r24
    18da:	00 84       	ldd	r0, Z+8	; 0x08
    18dc:	f1 85       	ldd	r31, Z+9	; 0x09
    18de:	e0 2d       	mov	r30, r0
    18e0:	09 95       	icall
    18e2:	89 2b       	or	r24, r25
    18e4:	e1 f6       	brne	.-72     	; 0x189e <fputc+0x10>
    18e6:	8e 81       	ldd	r24, Y+6	; 0x06
    18e8:	9f 81       	ldd	r25, Y+7	; 0x07
    18ea:	01 96       	adiw	r24, 0x01	; 1
    18ec:	9f 83       	std	Y+7, r25	; 0x07
    18ee:	8e 83       	std	Y+6, r24	; 0x06
    18f0:	81 2f       	mov	r24, r17
    18f2:	90 2f       	mov	r25, r16
    18f4:	df 91       	pop	r29
    18f6:	cf 91       	pop	r28
    18f8:	1f 91       	pop	r17
    18fa:	0f 91       	pop	r16
    18fc:	08 95       	ret

000018fe <sprintf>:
    18fe:	ae e0       	ldi	r26, 0x0E	; 14
    1900:	b0 e0       	ldi	r27, 0x00	; 0
    1902:	e5 e8       	ldi	r30, 0x85	; 133
    1904:	fc e0       	ldi	r31, 0x0C	; 12
    1906:	0c 94 1f 0b 	jmp	0x163e	; 0x163e <__prologue_saves__+0x1c>
    190a:	0d 89       	ldd	r16, Y+21	; 0x15
    190c:	1e 89       	ldd	r17, Y+22	; 0x16
    190e:	86 e0       	ldi	r24, 0x06	; 6
    1910:	8c 83       	std	Y+4, r24	; 0x04
    1912:	1a 83       	std	Y+2, r17	; 0x02
    1914:	09 83       	std	Y+1, r16	; 0x01
    1916:	8f ef       	ldi	r24, 0xFF	; 255
    1918:	9f e7       	ldi	r25, 0x7F	; 127
    191a:	9e 83       	std	Y+6, r25	; 0x06
    191c:	8d 83       	std	Y+5, r24	; 0x05
    191e:	ae 01       	movw	r20, r28
    1920:	47 5e       	subi	r20, 0xE7	; 231
    1922:	5f 4f       	sbci	r21, 0xFF	; 255
    1924:	6f 89       	ldd	r22, Y+23	; 0x17
    1926:	78 8d       	ldd	r23, Y+24	; 0x18
    1928:	ce 01       	movw	r24, r28
    192a:	01 96       	adiw	r24, 0x01	; 1
    192c:	0e 94 73 07 	call	0xee6	; 0xee6 <vfprintf>
    1930:	2f 81       	ldd	r18, Y+7	; 0x07
    1932:	38 85       	ldd	r19, Y+8	; 0x08
    1934:	f8 01       	movw	r30, r16
    1936:	e2 0f       	add	r30, r18
    1938:	f3 1f       	adc	r31, r19
    193a:	10 82       	st	Z, r1
    193c:	2e 96       	adiw	r28, 0x0e	; 14
    193e:	e4 e0       	ldi	r30, 0x04	; 4
    1940:	0c 94 3b 0b 	jmp	0x1676	; 0x1676 <__epilogue_restores__+0x1c>

00001944 <__ultoa_invert>:
    1944:	fa 01       	movw	r30, r20
    1946:	aa 27       	eor	r26, r26
    1948:	28 30       	cpi	r18, 0x08	; 8
    194a:	51 f1       	breq	.+84     	; 0x19a0 <__ultoa_invert+0x5c>
    194c:	20 31       	cpi	r18, 0x10	; 16
    194e:	81 f1       	breq	.+96     	; 0x19b0 <__ultoa_invert+0x6c>
    1950:	e8 94       	clt
    1952:	6f 93       	push	r22
    1954:	6e 7f       	andi	r22, 0xFE	; 254
    1956:	6e 5f       	subi	r22, 0xFE	; 254
    1958:	7f 4f       	sbci	r23, 0xFF	; 255
    195a:	8f 4f       	sbci	r24, 0xFF	; 255
    195c:	9f 4f       	sbci	r25, 0xFF	; 255
    195e:	af 4f       	sbci	r26, 0xFF	; 255
    1960:	b1 e0       	ldi	r27, 0x01	; 1
    1962:	3e d0       	rcall	.+124    	; 0x19e0 <__ultoa_invert+0x9c>
    1964:	b4 e0       	ldi	r27, 0x04	; 4
    1966:	3c d0       	rcall	.+120    	; 0x19e0 <__ultoa_invert+0x9c>
    1968:	67 0f       	add	r22, r23
    196a:	78 1f       	adc	r23, r24
    196c:	89 1f       	adc	r24, r25
    196e:	9a 1f       	adc	r25, r26
    1970:	a1 1d       	adc	r26, r1
    1972:	68 0f       	add	r22, r24
    1974:	79 1f       	adc	r23, r25
    1976:	8a 1f       	adc	r24, r26
    1978:	91 1d       	adc	r25, r1
    197a:	a1 1d       	adc	r26, r1
    197c:	6a 0f       	add	r22, r26
    197e:	71 1d       	adc	r23, r1
    1980:	81 1d       	adc	r24, r1
    1982:	91 1d       	adc	r25, r1
    1984:	a1 1d       	adc	r26, r1
    1986:	20 d0       	rcall	.+64     	; 0x19c8 <__ultoa_invert+0x84>
    1988:	09 f4       	brne	.+2      	; 0x198c <__ultoa_invert+0x48>
    198a:	68 94       	set
    198c:	3f 91       	pop	r19
    198e:	2a e0       	ldi	r18, 0x0A	; 10
    1990:	26 9f       	mul	r18, r22
    1992:	11 24       	eor	r1, r1
    1994:	30 19       	sub	r19, r0
    1996:	30 5d       	subi	r19, 0xD0	; 208
    1998:	31 93       	st	Z+, r19
    199a:	de f6       	brtc	.-74     	; 0x1952 <__ultoa_invert+0xe>
    199c:	cf 01       	movw	r24, r30
    199e:	08 95       	ret
    19a0:	46 2f       	mov	r20, r22
    19a2:	47 70       	andi	r20, 0x07	; 7
    19a4:	40 5d       	subi	r20, 0xD0	; 208
    19a6:	41 93       	st	Z+, r20
    19a8:	b3 e0       	ldi	r27, 0x03	; 3
    19aa:	0f d0       	rcall	.+30     	; 0x19ca <__ultoa_invert+0x86>
    19ac:	c9 f7       	brne	.-14     	; 0x19a0 <__ultoa_invert+0x5c>
    19ae:	f6 cf       	rjmp	.-20     	; 0x199c <__ultoa_invert+0x58>
    19b0:	46 2f       	mov	r20, r22
    19b2:	4f 70       	andi	r20, 0x0F	; 15
    19b4:	40 5d       	subi	r20, 0xD0	; 208
    19b6:	4a 33       	cpi	r20, 0x3A	; 58
    19b8:	18 f0       	brcs	.+6      	; 0x19c0 <__ultoa_invert+0x7c>
    19ba:	49 5d       	subi	r20, 0xD9	; 217
    19bc:	31 fd       	sbrc	r19, 1
    19be:	40 52       	subi	r20, 0x20	; 32
    19c0:	41 93       	st	Z+, r20
    19c2:	02 d0       	rcall	.+4      	; 0x19c8 <__ultoa_invert+0x84>
    19c4:	a9 f7       	brne	.-22     	; 0x19b0 <__ultoa_invert+0x6c>
    19c6:	ea cf       	rjmp	.-44     	; 0x199c <__ultoa_invert+0x58>
    19c8:	b4 e0       	ldi	r27, 0x04	; 4
    19ca:	a6 95       	lsr	r26
    19cc:	97 95       	ror	r25
    19ce:	87 95       	ror	r24
    19d0:	77 95       	ror	r23
    19d2:	67 95       	ror	r22
    19d4:	ba 95       	dec	r27
    19d6:	c9 f7       	brne	.-14     	; 0x19ca <__ultoa_invert+0x86>
    19d8:	00 97       	sbiw	r24, 0x00	; 0
    19da:	61 05       	cpc	r22, r1
    19dc:	71 05       	cpc	r23, r1
    19de:	08 95       	ret
    19e0:	9b 01       	movw	r18, r22
    19e2:	ac 01       	movw	r20, r24
    19e4:	0a 2e       	mov	r0, r26
    19e6:	06 94       	lsr	r0
    19e8:	57 95       	ror	r21
    19ea:	47 95       	ror	r20
    19ec:	37 95       	ror	r19
    19ee:	27 95       	ror	r18
    19f0:	ba 95       	dec	r27
    19f2:	c9 f7       	brne	.-14     	; 0x19e6 <__ultoa_invert+0xa2>
    19f4:	62 0f       	add	r22, r18
    19f6:	73 1f       	adc	r23, r19
    19f8:	84 1f       	adc	r24, r20
    19fa:	95 1f       	adc	r25, r21
    19fc:	a0 1d       	adc	r26, r0
    19fe:	08 95       	ret

00001a00 <_exit>:
    1a00:	f8 94       	cli

00001a02 <__stop_program>:
    1a02:	ff cf       	rjmp	.-2      	; 0x1a02 <__stop_program>

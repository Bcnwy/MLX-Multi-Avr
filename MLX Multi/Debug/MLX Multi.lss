
MLX Multi.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000008e  00800100  000018da  0000196e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000018da  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000034  0080018e  0080018e  000019fc  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000019fc  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001a58  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000298  00000000  00000000  00001a98  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00005fd2  00000000  00000000  00001d30  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000010aa  00000000  00000000  00007d02  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000e55  00000000  00000000  00008dac  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000960  00000000  00000000  00009c04  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000195d  00000000  00000000  0000a564  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00002f1d  00000000  00000000  0000bec1  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000510  00000000  00000000  0000edde  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 b7 00 	jmp	0x16e	; 0x16e <__ctors_end>
       4:	0c 94 df 00 	jmp	0x1be	; 0x1be <__bad_interrupt>
       8:	0c 94 df 00 	jmp	0x1be	; 0x1be <__bad_interrupt>
       c:	0c 94 df 00 	jmp	0x1be	; 0x1be <__bad_interrupt>
      10:	0c 94 df 00 	jmp	0x1be	; 0x1be <__bad_interrupt>
      14:	0c 94 df 00 	jmp	0x1be	; 0x1be <__bad_interrupt>
      18:	0c 94 df 00 	jmp	0x1be	; 0x1be <__bad_interrupt>
      1c:	0c 94 df 00 	jmp	0x1be	; 0x1be <__bad_interrupt>
      20:	0c 94 df 00 	jmp	0x1be	; 0x1be <__bad_interrupt>
      24:	0c 94 df 00 	jmp	0x1be	; 0x1be <__bad_interrupt>
      28:	0c 94 df 00 	jmp	0x1be	; 0x1be <__bad_interrupt>
      2c:	0c 94 df 00 	jmp	0x1be	; 0x1be <__bad_interrupt>
      30:	0c 94 df 00 	jmp	0x1be	; 0x1be <__bad_interrupt>
      34:	0c 94 14 02 	jmp	0x428	; 0x428 <__vector_13>
      38:	0c 94 ef 01 	jmp	0x3de	; 0x3de <__vector_14>
      3c:	0c 94 df 00 	jmp	0x1be	; 0x1be <__bad_interrupt>
      40:	0c 94 df 00 	jmp	0x1be	; 0x1be <__bad_interrupt>
      44:	0c 94 df 00 	jmp	0x1be	; 0x1be <__bad_interrupt>
      48:	0c 94 df 00 	jmp	0x1be	; 0x1be <__bad_interrupt>
      4c:	0c 94 df 00 	jmp	0x1be	; 0x1be <__bad_interrupt>
      50:	0c 94 df 00 	jmp	0x1be	; 0x1be <__bad_interrupt>
      54:	0c 94 df 00 	jmp	0x1be	; 0x1be <__bad_interrupt>
      58:	0c 94 df 00 	jmp	0x1be	; 0x1be <__bad_interrupt>
      5c:	0c 94 df 00 	jmp	0x1be	; 0x1be <__bad_interrupt>
      60:	0c 94 df 00 	jmp	0x1be	; 0x1be <__bad_interrupt>
      64:	0c 94 df 00 	jmp	0x1be	; 0x1be <__bad_interrupt>

00000068 <__trampolines_end>:
      68:	6e 61       	ori	r22, 0x1E	; 30
      6a:	6e 00       	.word	0x006e	; ????

0000006c <__c.2177>:
      6c:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      7c:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
      8c:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
      9c:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
      ac:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
      bc:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
      cc:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
      dc:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
      ec:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
      fc:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     10c:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     11c:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     12c:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     13c:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     14c:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     15c:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

0000016a <__ctors_start>:
     16a:	9c 03       	fmulsu	r17, r20
     16c:	a9 04       	cpc	r10, r9

0000016e <__ctors_end>:
     16e:	11 24       	eor	r1, r1
     170:	1f be       	out	0x3f, r1	; 63
     172:	cf ef       	ldi	r28, 0xFF	; 255
     174:	d8 e0       	ldi	r29, 0x08	; 8
     176:	de bf       	out	0x3e, r29	; 62
     178:	cd bf       	out	0x3d, r28	; 61

0000017a <__do_copy_data>:
     17a:	11 e0       	ldi	r17, 0x01	; 1
     17c:	a0 e0       	ldi	r26, 0x00	; 0
     17e:	b1 e0       	ldi	r27, 0x01	; 1
     180:	ea ed       	ldi	r30, 0xDA	; 218
     182:	f8 e1       	ldi	r31, 0x18	; 24
     184:	02 c0       	rjmp	.+4      	; 0x18a <__do_copy_data+0x10>
     186:	05 90       	lpm	r0, Z+
     188:	0d 92       	st	X+, r0
     18a:	ae 38       	cpi	r26, 0x8E	; 142
     18c:	b1 07       	cpc	r27, r17
     18e:	d9 f7       	brne	.-10     	; 0x186 <__do_copy_data+0xc>

00000190 <__do_clear_bss>:
     190:	21 e0       	ldi	r18, 0x01	; 1
     192:	ae e8       	ldi	r26, 0x8E	; 142
     194:	b1 e0       	ldi	r27, 0x01	; 1
     196:	01 c0       	rjmp	.+2      	; 0x19a <.do_clear_bss_start>

00000198 <.do_clear_bss_loop>:
     198:	1d 92       	st	X+, r1

0000019a <.do_clear_bss_start>:
     19a:	a2 3c       	cpi	r26, 0xC2	; 194
     19c:	b2 07       	cpc	r27, r18
     19e:	e1 f7       	brne	.-8      	; 0x198 <.do_clear_bss_loop>

000001a0 <__do_global_ctors>:
     1a0:	10 e0       	ldi	r17, 0x00	; 0
     1a2:	c7 eb       	ldi	r28, 0xB7	; 183
     1a4:	d0 e0       	ldi	r29, 0x00	; 0
     1a6:	04 c0       	rjmp	.+8      	; 0x1b0 <__do_global_ctors+0x10>
     1a8:	21 97       	sbiw	r28, 0x01	; 1
     1aa:	fe 01       	movw	r30, r28
     1ac:	0e 94 be 0a 	call	0x157c	; 0x157c <__tablejump2__>
     1b0:	c5 3b       	cpi	r28, 0xB5	; 181
     1b2:	d1 07       	cpc	r29, r17
     1b4:	c9 f7       	brne	.-14     	; 0x1a8 <__do_global_ctors+0x8>
     1b6:	0e 94 72 03 	call	0x6e4	; 0x6e4 <main>
     1ba:	0c 94 6b 0c 	jmp	0x18d6	; 0x18d6 <_exit>

000001be <__bad_interrupt>:
     1be:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001c2 <_ZN17Adafruit_MLX90614C1Eh>:
 ****************************************************/

#include "Adafruit_MLX90614.h"
#include "uart.h"
  
Adafruit_MLX90614::Adafruit_MLX90614(uint8_t i2caddr) {
     1c2:	1f 93       	push	r17
     1c4:	cf 93       	push	r28
     1c6:	df 93       	push	r29
     1c8:	ec 01       	movw	r28, r24
     1ca:	16 2f       	mov	r17, r22
	  }
 class I2c
 {
 public:
    I2c()
    {
     1cc:	18 86       	std	Y+8, r1	; 0x08
     1ce:	19 86       	std	Y+9, r1	; 0x09
	    i2c_init();
     1d0:	0e 94 a7 03 	call	0x74e	; 0x74e <i2c_init>
  _addr = i2caddr;
     1d4:	1a 87       	std	Y+10, r17	; 0x0a
}
     1d6:	df 91       	pop	r29
     1d8:	cf 91       	pop	r28
     1da:	1f 91       	pop	r17
     1dc:	08 95       	ret

000001de <_ZN17Adafruit_MLX906146read16Eh>:
  return temp;
}

/*********************************************************************/

uint16_t Adafruit_MLX90614::read16(uint8_t a) {
     1de:	0f 93       	push	r16
     1e0:	1f 93       	push	r17
     1e2:	cf 93       	push	r28
     1e4:	8c 01       	movw	r16, r24
     1e6:	c6 2f       	mov	r28, r22
  uint16_t ret;
  Wire.beginTransmission(_addr); // start transmission to device 
     1e8:	fc 01       	movw	r30, r24
     1ea:	82 85       	ldd	r24, Z+10	; 0x0a
    }
     void beginTransmission(uint8_t address)
     {
         m_bufferIndex = 0;
     1ec:	10 86       	std	Z+8, r1	; 0x08

         i2c_start((address << 1) | I2C_WRITE);
     1ee:	88 0f       	add	r24, r24
     1f0:	0e 94 b0 03 	call	0x760	; 0x760 <i2c_start>
     }

     void write(uint8_t byte)
     {
         if (m_bufferIndex == c_bufferSize)
     1f4:	f8 01       	movw	r30, r16
     1f6:	80 85       	ldd	r24, Z+8	; 0x08
     1f8:	88 30       	cpi	r24, 0x08	; 8
     1fa:	59 f0       	breq	.+22     	; 0x212 <_ZN17Adafruit_MLX906146read16Eh+0x34>
             return;

         m_buffer[m_bufferIndex++] = byte;
     1fc:	91 e0       	ldi	r25, 0x01	; 1
     1fe:	98 0f       	add	r25, r24
     200:	90 87       	std	Z+8, r25	; 0x08
     202:	e8 0f       	add	r30, r24
     204:	f1 1d       	adc	r31, r1
     206:	c0 83       	st	Z, r28
    }

    uint8_t endTransmission(bool stop = true)
    {
         for (uint8_t index = 0; index < m_bufferIndex; ++index) {
     208:	f8 01       	movw	r30, r16
     20a:	80 85       	ldd	r24, Z+8	; 0x08
     20c:	88 23       	and	r24, r24
     20e:	09 f4       	brne	.+2      	; 0x212 <_ZN17Adafruit_MLX906146read16Eh+0x34>
     210:	4e c0       	rjmp	.+156    	; 0x2ae <_ZN17Adafruit_MLX906146read16Eh+0xd0>
  return temp;
}

/*********************************************************************/

uint16_t Adafruit_MLX90614::read16(uint8_t a) {
     212:	c0 e0       	ldi	r28, 0x00	; 0
             if (i2c_write(m_buffer[index]) != 0)
     214:	f8 01       	movw	r30, r16
     216:	ec 0f       	add	r30, r28
     218:	f1 1d       	adc	r31, r1
     21a:	80 81       	ld	r24, Z
     21c:	0e 94 db 03 	call	0x7b6	; 0x7b6 <i2c_write>
     220:	81 11       	cpse	r24, r1
     222:	45 c0       	rjmp	.+138    	; 0x2ae <_ZN17Adafruit_MLX906146read16Eh+0xd0>
         m_buffer[m_bufferIndex++] = byte;
    }

    uint8_t endTransmission(bool stop = true)
    {
         for (uint8_t index = 0; index < m_bufferIndex; ++index) {
     224:	cf 5f       	subi	r28, 0xFF	; 255
     226:	f8 01       	movw	r30, r16
     228:	80 85       	ldd	r24, Z+8	; 0x08
     22a:	c8 17       	cp	r28, r24
     22c:	98 f3       	brcs	.-26     	; 0x214 <_ZN17Adafruit_MLX906146read16Eh+0x36>
     22e:	3f c0       	rjmp	.+126    	; 0x2ae <_ZN17Adafruit_MLX906146read16Eh+0xd0>
         return m_bufferIndex;
     }

     uint8_t read()
     {
         if (m_bufferReadIndex == m_bufferIndex)
     230:	f8 01       	movw	r30, r16
     232:	91 85       	ldd	r25, Z+9	; 0x09
     234:	80 85       	ldd	r24, Z+8	; 0x08
     236:	98 17       	cp	r25, r24
     238:	b1 f0       	breq	.+44     	; 0x266 <_ZN17Adafruit_MLX906146read16Eh+0x88>
             return 0;
        return m_buffer[m_bufferReadIndex++];
     23a:	41 e0       	ldi	r20, 0x01	; 1
     23c:	49 0f       	add	r20, r25
     23e:	41 87       	std	Z+9, r20	; 0x09
     240:	e9 0f       	add	r30, r25
     242:	f1 1d       	adc	r31, r1
  Wire.beginTransmission(_addr); // start transmission to device 
  Wire.write(a); // sends register address to read from
  Wire.endTransmission(false); // end transmission
  
  Wire.requestFrom(_addr, (uint8_t)3);// send data n-bytes read
  ret = Wire.read(); // receive DATA
     244:	20 81       	ld	r18, Z
     246:	30 e0       	ldi	r19, 0x00	; 0
         return m_bufferIndex;
     }

     uint8_t read()
     {
         if (m_bufferReadIndex == m_bufferIndex)
     248:	84 17       	cp	r24, r20
     24a:	d1 f1       	breq	.+116    	; 0x2c0 <_ZN17Adafruit_MLX906146read16Eh+0xe2>
             return 0;
        return m_buffer[m_bufferReadIndex++];
     24c:	9e 5f       	subi	r25, 0xFE	; 254
     24e:	f8 01       	movw	r30, r16
     250:	91 87       	std	Z+9, r25	; 0x09
     252:	e4 0f       	add	r30, r20
     254:	f1 1d       	adc	r31, r1
  ret |= Wire.read() << 8; // receive DATA
     256:	40 81       	ld	r20, Z
     258:	34 2b       	or	r19, r20
         return m_bufferIndex;
     }

     uint8_t read()
     {
         if (m_bufferReadIndex == m_bufferIndex)
     25a:	98 17       	cp	r25, r24
     25c:	89 f1       	breq	.+98     	; 0x2c0 <_ZN17Adafruit_MLX906146read16Eh+0xe2>
             return 0;
        return m_buffer[m_bufferReadIndex++];
     25e:	9f 5f       	subi	r25, 0xFF	; 255
     260:	f8 01       	movw	r30, r16
     262:	91 87       	std	Z+9, r25	; 0x09
     264:	2d c0       	rjmp	.+90     	; 0x2c0 <_ZN17Adafruit_MLX906146read16Eh+0xe2>
     266:	20 e0       	ldi	r18, 0x00	; 0
     268:	30 e0       	ldi	r19, 0x00	; 0
     26a:	2a c0       	rjmp	.+84     	; 0x2c0 <_ZN17Adafruit_MLX906146read16Eh+0xe2>
         if (i2c_start((address << 1) | I2C_READ) != 0)
             return 0;

        m_bufferIndex = 0;
         while (--quantity > 0) {
             m_buffer[m_bufferIndex++] = i2c_readAck();
     26c:	81 e0       	ldi	r24, 0x01	; 1
     26e:	f8 01       	movw	r30, r16
     270:	80 87       	std	Z+8, r24	; 0x08
     272:	0e 94 ed 03 	call	0x7da	; 0x7da <i2c_readAck>
     276:	f8 01       	movw	r30, r16
     278:	80 83       	st	Z, r24
     27a:	c0 85       	ldd	r28, Z+8	; 0x08
     27c:	81 e0       	ldi	r24, 0x01	; 1
     27e:	8c 0f       	add	r24, r28
     280:	80 87       	std	Z+8, r24	; 0x08
     282:	0e 94 ed 03 	call	0x7da	; 0x7da <i2c_readAck>
     286:	f8 01       	movw	r30, r16
     288:	ec 0f       	add	r30, r28
     28a:	f1 1d       	adc	r31, r1
     28c:	80 83       	st	Z, r24
         }
         m_buffer[m_bufferIndex++] = i2c_readNak();
     28e:	f8 01       	movw	r30, r16
     290:	c0 85       	ldd	r28, Z+8	; 0x08
     292:	81 e0       	ldi	r24, 0x01	; 1
     294:	8c 0f       	add	r24, r28
     296:	80 87       	std	Z+8, r24	; 0x08
     298:	0e 94 f8 03 	call	0x7f0	; 0x7f0 <i2c_readNak>
     29c:	f8 01       	movw	r30, r16
     29e:	ec 0f       	add	r30, r28
     2a0:	f1 1d       	adc	r31, r1
     2a2:	80 83       	st	Z, r24
         m_bufferReadIndex = 0;
     2a4:	f8 01       	movw	r30, r16
     2a6:	11 86       	std	Z+9, r1	; 0x09

         if (stop)
             i2c_stop();
     2a8:	0e 94 d7 03 	call	0x7ae	; 0x7ae <i2c_stop>
     2ac:	c1 cf       	rjmp	.-126    	; 0x230 <_ZN17Adafruit_MLX906146read16Eh+0x52>
     {
        // quantity = Sensors::min(quantity, c_bufferSize);
         if (quantity == 0)
             return 0;

         if (i2c_start((address << 1) | I2C_READ) != 0)
     2ae:	f8 01       	movw	r30, r16
     2b0:	82 85       	ldd	r24, Z+10	; 0x0a
     2b2:	88 0f       	add	r24, r24
     2b4:	81 60       	ori	r24, 0x01	; 1
     2b6:	0e 94 b0 03 	call	0x760	; 0x760 <i2c_start>
     2ba:	88 23       	and	r24, r24
     2bc:	b9 f2       	breq	.-82     	; 0x26c <_ZN17Adafruit_MLX906146read16Eh+0x8e>
     2be:	b8 cf       	rjmp	.-144    	; 0x230 <_ZN17Adafruit_MLX906146read16Eh+0x52>

  uint8_t pec = Wire.read();

  return ret;
}
     2c0:	c9 01       	movw	r24, r18
     2c2:	cf 91       	pop	r28
     2c4:	1f 91       	pop	r17
     2c6:	0f 91       	pop	r16
     2c8:	08 95       	ret

000002ca <_ZN17Adafruit_MLX906148readTempEh>:
  return readTemp(MLX90614_TA);
}

float Adafruit_MLX90614::readTemp(uint8_t reg) {
  float temp;
  temp = read16(reg);
     2ca:	0e 94 ef 00 	call	0x1de	; 0x1de <_ZN17Adafruit_MLX906146read16Eh>
     2ce:	bc 01       	movw	r22, r24
     2d0:	80 e0       	ldi	r24, 0x00	; 0
     2d2:	90 e0       	ldi	r25, 0x00	; 0
     2d4:	0e 94 c5 05 	call	0xb8a	; 0xb8a <__floatunsisf>
  temp *= .02;
     2d8:	2a e0       	ldi	r18, 0x0A	; 10
     2da:	37 ed       	ldi	r19, 0xD7	; 215
     2dc:	43 ea       	ldi	r20, 0xA3	; 163
     2de:	5c e3       	ldi	r21, 0x3C	; 60
     2e0:	0e 94 7c 06 	call	0xcf8	; 0xcf8 <__mulsf3>
  temp  -= 273.15;
     2e4:	23 e3       	ldi	r18, 0x33	; 51
     2e6:	33 e9       	ldi	r19, 0x93	; 147
     2e8:	48 e8       	ldi	r20, 0x88	; 136
     2ea:	53 e4       	ldi	r21, 0x43	; 67
     2ec:	0e 94 b0 04 	call	0x960	; 0x960 <__subsf3>
  return temp;
}
     2f0:	08 95       	ret

000002f2 <_ZN17Adafruit_MLX9061415readObjectTempCEv>:
  _addr = i2caddr;
}
//////////////////////////////////////////////////////

double Adafruit_MLX90614::readObjectTempC(void) {
  return readTemp(MLX90614_TOBJ1);
     2f2:	67 e0       	ldi	r22, 0x07	; 7
     2f4:	0e 94 65 01 	call	0x2ca	; 0x2ca <_ZN17Adafruit_MLX906148readTempEh>
}
     2f8:	08 95       	ret

000002fa <_ZN17Adafruit_MLX9061416readAmbientTempCEv>:


double Adafruit_MLX90614::readAmbientTempC(void) {
  return readTemp(MLX90614_TA);
     2fa:	66 e0       	ldi	r22, 0x06	; 6
     2fc:	0e 94 65 01 	call	0x2ca	; 0x2ca <_ZN17Adafruit_MLX906148readTempEh>
}
     300:	08 95       	ret

00000302 <_ZN7HC_SR044initEv>:
// Anything over 400/500 cm (23200/29410 us pulse) is "out of range"
const unsigned long MAX_DIST = 23200;
  
void HC_SR04::init() {
  // The Trigger pin will tell the sensor to range find
  DDRD = 0x20;
     302:	80 e2       	ldi	r24, 0x20	; 32
     304:	8a b9       	out	0x0a, r24	; 10
  PORTD = 0x00;
     306:	1b b8       	out	0x0b, r1	; 11
  clr_pin(PORTD, TRIG_PIN);  
     308:	5d 98       	cbi	0x0b, 5	; 11
     30a:	08 95       	ret

0000030c <_ZN7HC_SR044readEv>:
}
uint8_t HC_SR04::read(){
     30c:	cf 92       	push	r12
     30e:	df 92       	push	r13
     310:	ef 92       	push	r14
     312:	ff 92       	push	r15
     314:	0f 93       	push	r16
     316:	1f 93       	push	r17
     318:	cf 93       	push	r28
     31a:	8c 01       	movw	r16, r24
	float t1;
	float t2;
	float pulse_width;
	
	//set_micro(0);
	clr_pin(PORTD, TRIG_PIN);
     31c:	5d 98       	cbi	0x0b, 5	; 11
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     31e:	8a e0       	ldi	r24, 0x0A	; 10
     320:	8a 95       	dec	r24
     322:	f1 f7       	brne	.-4      	; 0x320 <_ZN7HC_SR044readEv+0x14>
     324:	00 c0       	rjmp	.+0      	; 0x326 <_ZN7HC_SR044readEv+0x1a>
	_delay_us(2);
	// Hold the trigger pin high for at least 10 us
	set_pin(PORTD, TRIG_PIN);
     326:	5d 9a       	sbi	0x0b, 5	; 11
     328:	ea e6       	ldi	r30, 0x6A	; 106
     32a:	ea 95       	dec	r30
     32c:	f1 f7       	brne	.-4      	; 0x32a <_ZN7HC_SR044readEv+0x1e>
     32e:	00 c0       	rjmp	.+0      	; 0x330 <_ZN7HC_SR044readEv+0x24>
	_delay_us(20);
	clr_pin(PORTD, TRIG_PIN);
     330:	5d 98       	cbi	0x0b, 5	; 11
	
	// Wait for pulse on echo pin
	while ((PIND & _BV(ECHO_PIN)) == 0 );
     332:	4e 9b       	sbis	0x09, 6	; 9
     334:	fe cf       	rjmp	.-4      	; 0x332 <_ZN7HC_SR044readEv+0x26>
	// Measure how long the echo pin was held high (pulse width)
	// Note: the micros() counter will overflow after ~70 min
	TCNT1 = 0;
     336:	e4 e8       	ldi	r30, 0x84	; 132
     338:	f0 e0       	ldi	r31, 0x00	; 0
     33a:	11 82       	std	Z+1, r1	; 0x01
     33c:	10 82       	st	Z, r1
	t1 = TCNT1 ;
     33e:	60 81       	ld	r22, Z
     340:	71 81       	ldd	r23, Z+1	; 0x01
     342:	80 e0       	ldi	r24, 0x00	; 0
     344:	90 e0       	ldi	r25, 0x00	; 0
     346:	0e 94 c5 05 	call	0xb8a	; 0xb8a <__floatunsisf>
     34a:	6b 01       	movw	r12, r22
     34c:	7c 01       	movw	r14, r24
	cli();
     34e:	f8 94       	cli

	while ((PIND & _BV(ECHO_PIN)) != 0);
     350:	99 b1       	in	r25, 0x09	; 9
     352:	c9 2f       	mov	r28, r25
     354:	c0 74       	andi	r28, 0x40	; 64
     356:	96 fd       	sbrc	r25, 6
     358:	fb cf       	rjmp	.-10     	; 0x350 <_ZN7HC_SR044readEv+0x44>
	sei();
     35a:	78 94       	sei
	t2 = TCNT1 ;
     35c:	40 91 84 00 	lds	r20, 0x0084
     360:	50 91 85 00 	lds	r21, 0x0085
     364:	ba 01       	movw	r22, r20
     366:	80 e0       	ldi	r24, 0x00	; 0
     368:	90 e0       	ldi	r25, 0x00	; 0
     36a:	0e 94 c5 05 	call	0xb8a	; 0xb8a <__floatunsisf>
	
	pulse_width = (t2 - t1)* 0.5;
     36e:	a7 01       	movw	r20, r14
     370:	96 01       	movw	r18, r12
     372:	0e 94 b0 04 	call	0x960	; 0x960 <__subsf3>
     376:	20 e0       	ldi	r18, 0x00	; 0
     378:	30 e0       	ldi	r19, 0x00	; 0
     37a:	40 e0       	ldi	r20, 0x00	; 0
     37c:	5f e3       	ldi	r21, 0x3F	; 63
     37e:	0e 94 7c 06 	call	0xcf8	; 0xcf8 <__mulsf3>
     382:	6b 01       	movw	r12, r22
     384:	7c 01       	movw	r14, r24
	
	if ( pulse_width > MAX_DIST ) {
     386:	20 e0       	ldi	r18, 0x00	; 0
     388:	30 e4       	ldi	r19, 0x40	; 64
     38a:	45 eb       	ldi	r20, 0xB5	; 181
     38c:	56 e4       	ldi	r21, 0x46	; 70
     38e:	0e 94 77 06 	call	0xcee	; 0xcee <__gesf2>
     392:	18 16       	cp	r1, r24
     394:	74 f4       	brge	.+28     	; 0x3b2 <_ZN7HC_SR044readEv+0xa6>
		//void send_int(int d);
		void send(double data, int base);
		//void send(uint32_t str);
			
		void sendln(void) {send("\r\n");};
		void sendln(const char* c) {send(c);send("\r\n");};
     396:	60 e0       	ldi	r22, 0x00	; 0
     398:	71 e0       	ldi	r23, 0x01	; 1
     39a:	80 eb       	ldi	r24, 0xB0	; 176
     39c:	91 e0       	ldi	r25, 0x01	; 1
     39e:	0e 94 55 04 	call	0x8aa	; 0x8aa <_ZN5USART4sendEPKc>
     3a2:	6d e0       	ldi	r22, 0x0D	; 13
     3a4:	71 e0       	ldi	r23, 0x01	; 1
     3a6:	80 eb       	ldi	r24, 0xB0	; 176
     3a8:	91 e0       	ldi	r25, 0x01	; 1
     3aa:	0e 94 55 04 	call	0x8aa	; 0x8aa <_ZN5USART4sendEPKc>
		Serial.sendln("Out of range");
		pulse_width = MAX_DIST;
		return 1;
     3ae:	c1 e0       	ldi	r28, 0x01	; 1
     3b0:	0d c0       	rjmp	.+26     	; 0x3cc <_ZN7HC_SR044readEv+0xc0>
	}
	// Calculate distance in centimeters and inches. The constants
	// are found in the data-sheet, and calculated from the assumed speed 
	//of sound in air at sea level (~340 m/s).
	cm = pulse_width/ 58;
     3b2:	20 e0       	ldi	r18, 0x00	; 0
     3b4:	30 e0       	ldi	r19, 0x00	; 0
     3b6:	48 e6       	ldi	r20, 0x68	; 104
     3b8:	52 e4       	ldi	r21, 0x42	; 66
     3ba:	c7 01       	movw	r24, r14
     3bc:	b6 01       	movw	r22, r12
     3be:	0e 94 1d 05 	call	0xa3a	; 0xa3a <__divsf3>
	Distance = cm;
     3c2:	f8 01       	movw	r30, r16
     3c4:	60 83       	st	Z, r22
     3c6:	71 83       	std	Z+1, r23	; 0x01
     3c8:	82 83       	std	Z+2, r24	; 0x02
     3ca:	93 83       	std	Z+3, r25	; 0x03
	return 0;
}
     3cc:	8c 2f       	mov	r24, r28
     3ce:	cf 91       	pop	r28
     3d0:	1f 91       	pop	r17
     3d2:	0f 91       	pop	r16
     3d4:	ff 90       	pop	r15
     3d6:	ef 90       	pop	r14
     3d8:	df 90       	pop	r13
     3da:	cf 90       	pop	r12
     3dc:	08 95       	ret

000003de <__vector_14>:

HC_SR04 Sonic;
//VL53L0X TOF;
volatile unsigned long int count = 0; 
ISR(TIMER0_COMPA_vect)
{
     3de:	1f 92       	push	r1
     3e0:	0f 92       	push	r0
     3e2:	0f b6       	in	r0, 0x3f	; 63
     3e4:	0f 92       	push	r0
     3e6:	11 24       	eor	r1, r1
     3e8:	8f 93       	push	r24
     3ea:	9f 93       	push	r25
     3ec:	af 93       	push	r26
     3ee:	bf 93       	push	r27
	count++;
     3f0:	80 91 8e 01 	lds	r24, 0x018E
     3f4:	90 91 8f 01 	lds	r25, 0x018F
     3f8:	a0 91 90 01 	lds	r26, 0x0190
     3fc:	b0 91 91 01 	lds	r27, 0x0191
     400:	01 96       	adiw	r24, 0x01	; 1
     402:	a1 1d       	adc	r26, r1
     404:	b1 1d       	adc	r27, r1
     406:	80 93 8e 01 	sts	0x018E, r24
     40a:	90 93 8f 01 	sts	0x018F, r25
     40e:	a0 93 90 01 	sts	0x0190, r26
     412:	b0 93 91 01 	sts	0x0191, r27
}
     416:	bf 91       	pop	r27
     418:	af 91       	pop	r26
     41a:	9f 91       	pop	r25
     41c:	8f 91       	pop	r24
     41e:	0f 90       	pop	r0
     420:	0f be       	out	0x3f, r0	; 63
     422:	0f 90       	pop	r0
     424:	1f 90       	pop	r1
     426:	18 95       	reti

00000428 <__vector_13>:

ISR(TIMER1_OVF_vect){
     428:	1f 92       	push	r1
     42a:	0f 92       	push	r0
     42c:	0f b6       	in	r0, 0x3f	; 63
     42e:	0f 92       	push	r0
     430:	11 24       	eor	r1, r1
	//PORTB ^= _BV(PORTB5);
	//TIFR1 = 0;
}
     432:	0f 90       	pop	r0
     434:	0f be       	out	0x3f, r0	; 63
     436:	0f 90       	pop	r0
     438:	1f 90       	pop	r1
     43a:	18 95       	reti

0000043c <_Z5setupv>:
{
	return count;
}
/*********************************************************************/
void setup(void)
{		
     43c:	cf 93       	push	r28
	cli();
     43e:	f8 94       	cli
	#ifdef _DEBUG
		uint8_t rflag = MCUSR;
     440:	c4 b7       	in	r28, 0x34	; 52
		MCUSR = 0;
     442:	14 be       	out	0x34, r1	; 52
	#endif // _DEBUG
	
	//DDRB |= _BV(PORTB5);
	//PORTB &= ~_BV(PORTB5);
	
	TCNT0 = 0;
     444:	16 bc       	out	0x26, r1	; 38
	TCNT1 = 0;
     446:	10 92 85 00 	sts	0x0085, r1
     44a:	10 92 84 00 	sts	0x0084, r1
	TCCR0A |= (1<<WGM01);
     44e:	84 b5       	in	r24, 0x24	; 36
     450:	82 60       	ori	r24, 0x02	; 2
     452:	84 bd       	out	0x24, r24	; 36
	OCR0A = 249;
     454:	89 ef       	ldi	r24, 0xF9	; 249
     456:	87 bd       	out	0x27, r24	; 39
	TIMSK0 |= (1 << OCIE0A);
     458:	ee e6       	ldi	r30, 0x6E	; 110
     45a:	f0 e0       	ldi	r31, 0x00	; 0
     45c:	80 81       	ld	r24, Z
     45e:	82 60       	ori	r24, 0x02	; 2
     460:	80 83       	st	Z, r24
	TIMSK1 |= _BV(TOIE1);
     462:	ef e6       	ldi	r30, 0x6F	; 111
     464:	f0 e0       	ldi	r31, 0x00	; 0
     466:	80 81       	ld	r24, Z
     468:	81 60       	ori	r24, 0x01	; 1
     46a:	80 83       	st	Z, r24
	TCCR0B |= (1<<CS01) | (1<<CS00);
     46c:	85 b5       	in	r24, 0x25	; 37
     46e:	83 60       	ori	r24, 0x03	; 3
     470:	85 bd       	out	0x25, r24	; 37
	TCCR1B |= (1<<CS11);
     472:	e1 e8       	ldi	r30, 0x81	; 129
     474:	f0 e0       	ldi	r31, 0x00	; 0
     476:	80 81       	ld	r24, Z
     478:	82 60       	ori	r24, 0x02	; 2
     47a:	80 83       	st	Z, r24
	sei();
     47c:	78 94       	sei
	Serial.init(9600);
     47e:	60 e8       	ldi	r22, 0x80	; 128
     480:	75 e2       	ldi	r23, 0x25	; 37
     482:	80 eb       	ldi	r24, 0xB0	; 176
     484:	91 e0       	ldi	r25, 0x01	; 1
     486:	0e 94 03 04 	call	0x806	; 0x806 <_ZN5USART4initEi>
	Sonic.init();
     48a:	82 e9       	ldi	r24, 0x92	; 146
     48c:	91 e0       	ldi	r25, 0x01	; 1
     48e:	0e 94 81 01 	call	0x302	; 0x302 <_ZN7HC_SR044initEv>
	#ifdef _DEBUG
		Serial.send( rflag ,HEX);
     492:	40 e1       	ldi	r20, 0x10	; 16
     494:	50 e0       	ldi	r21, 0x00	; 0
     496:	6c 2f       	mov	r22, r28
     498:	80 eb       	ldi	r24, 0xB0	; 176
     49a:	91 e0       	ldi	r25, 0x01	; 1
     49c:	0e 94 6a 04 	call	0x8d4	; 0x8d4 <_ZN5USART4sendEhi>
     4a0:	60 e1       	ldi	r22, 0x10	; 16
     4a2:	71 e0       	ldi	r23, 0x01	; 1
     4a4:	80 eb       	ldi	r24, 0xB0	; 176
     4a6:	91 e0       	ldi	r25, 0x01	; 1
     4a8:	0e 94 55 04 	call	0x8aa	; 0x8aa <_ZN5USART4sendEPKc>
     4ac:	6d e0       	ldi	r22, 0x0D	; 13
     4ae:	71 e0       	ldi	r23, 0x01	; 1
     4b0:	80 eb       	ldi	r24, 0xB0	; 176
     4b2:	91 e0       	ldi	r25, 0x01	; 1
     4b4:	0e 94 55 04 	call	0x8aa	; 0x8aa <_ZN5USART4sendEPKc>
// 	TOF.init();
// 	TOF.setTimeout(250);
// 	TOF.setSignalRateLimit(0.2);
// 	TOF.setVcselPulsePeriod(VL53L0X::VcselPeriodPreRange, 16);
// 	TOF.setVcselPulsePeriod(VL53L0X::VcselPeriodFinalRange, 12);
}
     4b8:	cf 91       	pop	r28
     4ba:	08 95       	ret

000004bc <_Z13IR_sensorReadv>:
/*********************************************************************/
void IR_sensorRead(void )
{
     4bc:	2f 92       	push	r2
     4be:	3f 92       	push	r3
     4c0:	4f 92       	push	r4
     4c2:	5f 92       	push	r5
     4c4:	6f 92       	push	r6
     4c6:	7f 92       	push	r7
     4c8:	8f 92       	push	r8
     4ca:	9f 92       	push	r9
     4cc:	af 92       	push	r10
     4ce:	bf 92       	push	r11
     4d0:	cf 92       	push	r12
     4d2:	df 92       	push	r13
     4d4:	ef 92       	push	r14
     4d6:	ff 92       	push	r15
     4d8:	0f 93       	push	r16
     4da:	1f 93       	push	r17
     4dc:	cf 93       	push	r28
     4de:	df 93       	push	r29
     4e0:	cd b7       	in	r28, 0x3d	; 61
     4e2:	de b7       	in	r29, 0x3e	; 62
     4e4:	ce 5c       	subi	r28, 0xCE	; 206
     4e6:	d1 09       	sbc	r29, r1
     4e8:	0f b6       	in	r0, 0x3f	; 63
     4ea:	f8 94       	cli
     4ec:	de bf       	out	0x3e, r29	; 62
     4ee:	0f be       	out	0x3f, r0	; 63
     4f0:	cd bf       	out	0x3d, r28	; 61
	char str[100], str_out[100] = {""};
     4f2:	19 82       	std	Y+1, r1	; 0x01
     4f4:	1a 82       	std	Y+2, r1	; 0x02
     4f6:	1b 82       	std	Y+3, r1	; 0x03
     4f8:	1c 82       	std	Y+4, r1	; 0x04
     4fa:	fe 01       	movw	r30, r28
     4fc:	35 96       	adiw	r30, 0x05	; 5
     4fe:	80 e6       	ldi	r24, 0x60	; 96
     500:	df 01       	movw	r26, r30
     502:	1d 92       	st	X+, r1
     504:	8a 95       	dec	r24
     506:	e9 f7       	brne	.-6      	; 0x502 <_Z13IR_sensorReadv+0x46>
	double obj_1,obj_2,obj_3,obj_4,amb_1,amb_2,amb_3,amb_4,mDistance = 0;
	unsigned long int m_read_time = 0;

 	Sonic.read();
     508:	82 e9       	ldi	r24, 0x92	; 146
     50a:	91 e0       	ldi	r25, 0x01	; 1
     50c:	0e 94 86 01 	call	0x30c	; 0x30c <_ZN7HC_SR044readEv>
     510:	6d e1       	ldi	r22, 0x1D	; 29
     512:	71 e0       	ldi	r23, 0x01	; 1
     514:	80 eb       	ldi	r24, 0xB0	; 176
     516:	91 e0       	ldi	r25, 0x01	; 1
     518:	0e 94 55 04 	call	0x8aa	; 0x8aa <_ZN5USART4sendEPKc>
     51c:	6d e0       	ldi	r22, 0x0D	; 13
     51e:	71 e0       	ldi	r23, 0x01	; 1
     520:	80 eb       	ldi	r24, 0xB0	; 176
     522:	91 e0       	ldi	r25, 0x01	; 1
     524:	0e 94 55 04 	call	0x8aa	; 0x8aa <_ZN5USART4sendEPKc>
	//TIFR1 = 0;
}
/*********************************************************************/
unsigned long int millis(void)
{
	return count;
     528:	80 90 8e 01 	lds	r8, 0x018E
     52c:	90 90 8f 01 	lds	r9, 0x018F
     530:	a0 90 90 01 	lds	r10, 0x0190
     534:	b0 90 91 01 	lds	r11, 0x0191
 	Serial.sendln("> Read Distance...");
 	#endif
// 	//Read 0x5A
 	m_read_time = millis();	
	
	amb_1 = MLX_5a.readAmbientTempC();
     538:	85 ea       	ldi	r24, 0xA5	; 165
     53a:	91 e0       	ldi	r25, 0x01	; 1
     53c:	0e 94 7d 01 	call	0x2fa	; 0x2fa <_ZN17Adafruit_MLX9061416readAmbientTempCEv>
     540:	56 2e       	mov	r5, r22
     542:	47 2e       	mov	r4, r23
     544:	38 2e       	mov	r3, r24
     546:	29 2e       	mov	r2, r25
 	obj_1 = MLX_5a.readObjectTempC();
     548:	85 ea       	ldi	r24, 0xA5	; 165
     54a:	91 e0       	ldi	r25, 0x01	; 1
     54c:	0e 94 79 01 	call	0x2f2	; 0x2f2 <_ZN17Adafruit_MLX9061415readObjectTempCEv>
     550:	16 2f       	mov	r17, r22
     552:	07 2f       	mov	r16, r23
     554:	f8 2e       	mov	r15, r24
     556:	e9 2e       	mov	r14, r25
// 
// 	//Read 0x5B	
 	amb_2 = MLX_5b.readAmbientTempC();
     558:	8a e9       	ldi	r24, 0x9A	; 154
     55a:	91 e0       	ldi	r25, 0x01	; 1
     55c:	0e 94 7d 01 	call	0x2fa	; 0x2fa <_ZN17Adafruit_MLX9061416readAmbientTempCEv>
     560:	c7 53       	subi	r28, 0x37	; 55
     562:	df 4f       	sbci	r29, 0xFF	; 255
     564:	68 83       	st	Y, r22
     566:	c9 5c       	subi	r28, 0xC9	; 201
     568:	d0 40       	sbci	r29, 0x00	; 0
     56a:	c6 53       	subi	r28, 0x36	; 54
     56c:	df 4f       	sbci	r29, 0xFF	; 255
     56e:	78 83       	st	Y, r23
     570:	ca 5c       	subi	r28, 0xCA	; 202
     572:	d0 40       	sbci	r29, 0x00	; 0
     574:	78 2e       	mov	r7, r24
     576:	69 2e       	mov	r6, r25
	obj_2 = MLX_5b.readObjectTempC();
     578:	8a e9       	ldi	r24, 0x9A	; 154
     57a:	91 e0       	ldi	r25, 0x01	; 1
     57c:	0e 94 79 01 	call	0x2f2	; 0x2f2 <_ZN17Adafruit_MLX9061415readObjectTempCEv>
     580:	c5 53       	subi	r28, 0x35	; 53
     582:	df 4f       	sbci	r29, 0xFF	; 255
     584:	68 83       	st	Y, r22
     586:	cb 5c       	subi	r28, 0xCB	; 203
     588:	d0 40       	sbci	r29, 0x00	; 0
     58a:	c4 53       	subi	r28, 0x34	; 52
     58c:	df 4f       	sbci	r29, 0xFF	; 255
     58e:	78 83       	st	Y, r23
     590:	cc 5c       	subi	r28, 0xCC	; 204
     592:	d0 40       	sbci	r29, 0x00	; 0
     594:	c3 53       	subi	r28, 0x33	; 51
     596:	df 4f       	sbci	r29, 0xFF	; 255
     598:	88 83       	st	Y, r24
     59a:	cd 5c       	subi	r28, 0xCD	; 205
     59c:	d0 40       	sbci	r29, 0x00	; 0
     59e:	c2 53       	subi	r28, 0x32	; 50
     5a0:	df 4f       	sbci	r29, 0xFF	; 255
     5a2:	98 83       	st	Y, r25
     5a4:	ce 5c       	subi	r28, 0xCE	; 206
     5a6:	d0 40       	sbci	r29, 0x00	; 0
//
// 	//Read 0x5D
// 	amb_4 = MLX_5d.readAmbientTempC();	
// 	obj_4 = MLX_5d.readObjectTempC();
// 	
 	sprintf(str, "{\"Sensor\":%d{\"Obj\":%0.1f,\"Amb\":%0.1f,\"Dist\":[%i,%.2f],\"Time\":%lu}}", 1, obj_1, amb_1, (int)Sonic.Distance,mDistance,m_read_time);
     5a8:	0f 2e       	mov	r0, r31
     5aa:	f2 e9       	ldi	r31, 0x92	; 146
     5ac:	cf 2e       	mov	r12, r31
     5ae:	f1 e0       	ldi	r31, 0x01	; 1
     5b0:	df 2e       	mov	r13, r31
     5b2:	f0 2d       	mov	r31, r0
     5b4:	f6 01       	movw	r30, r12
     5b6:	60 81       	ld	r22, Z
     5b8:	71 81       	ldd	r23, Z+1	; 0x01
     5ba:	82 81       	ldd	r24, Z+2	; 0x02
     5bc:	93 81       	ldd	r25, Z+3	; 0x03
     5be:	bf 92       	push	r11
     5c0:	af 92       	push	r10
     5c2:	9f 92       	push	r9
     5c4:	8f 92       	push	r8
     5c6:	1f 92       	push	r1
     5c8:	1f 92       	push	r1
     5ca:	1f 92       	push	r1
     5cc:	1f 92       	push	r1
     5ce:	0e 94 8f 05 	call	0xb1e	; 0xb1e <__fixsfsi>
     5d2:	7f 93       	push	r23
     5d4:	6f 93       	push	r22
     5d6:	2f 92       	push	r2
     5d8:	3f 92       	push	r3
     5da:	4f 92       	push	r4
     5dc:	5f 92       	push	r5
     5de:	ef 92       	push	r14
     5e0:	ff 92       	push	r15
     5e2:	0f 93       	push	r16
     5e4:	1f 93       	push	r17
     5e6:	1f 92       	push	r1
     5e8:	81 e0       	ldi	r24, 0x01	; 1
     5ea:	8f 93       	push	r24
     5ec:	0f 2e       	mov	r0, r31
     5ee:	f0 e3       	ldi	r31, 0x30	; 48
     5f0:	ef 2e       	mov	r14, r31
     5f2:	f1 e0       	ldi	r31, 0x01	; 1
     5f4:	ff 2e       	mov	r15, r31
     5f6:	f0 2d       	mov	r31, r0
     5f8:	ff 92       	push	r15
     5fa:	ef 92       	push	r14
     5fc:	8e 01       	movw	r16, r28
     5fe:	0b 59       	subi	r16, 0x9B	; 155
     600:	1f 4f       	sbci	r17, 0xFF	; 255
     602:	1f 93       	push	r17
     604:	0f 93       	push	r16
     606:	0e 94 ea 0b 	call	0x17d4	; 0x17d4 <sprintf>
   	//strcat(str_out,str);
	Serial.send(str_out);
     60a:	be 01       	movw	r22, r28
     60c:	6f 5f       	subi	r22, 0xFF	; 255
     60e:	7f 4f       	sbci	r23, 0xFF	; 255
     610:	80 eb       	ldi	r24, 0xB0	; 176
     612:	91 e0       	ldi	r25, 0x01	; 1
     614:	0e 94 55 04 	call	0x8aa	; 0x8aa <_ZN5USART4sendEPKc>
	
	sprintf(str, "{\"Sensor\":%d{\"Obj\":%0.1f,\"Amb\":%0.1f,\"Dist\":[%i,%.2f],\"Time\":%lu}}", 2, obj_2, amb_2, (int)Sonic.Distance,mDistance,m_read_time);
     618:	d6 01       	movw	r26, r12
     61a:	6d 91       	ld	r22, X+
     61c:	7d 91       	ld	r23, X+
     61e:	8d 91       	ld	r24, X+
     620:	9c 91       	ld	r25, X
     622:	bf 92       	push	r11
     624:	af 92       	push	r10
     626:	9f 92       	push	r9
     628:	8f 92       	push	r8
     62a:	1f 92       	push	r1
     62c:	1f 92       	push	r1
     62e:	1f 92       	push	r1
     630:	1f 92       	push	r1
     632:	0e 94 8f 05 	call	0xb1e	; 0xb1e <__fixsfsi>
     636:	7f 93       	push	r23
     638:	6f 93       	push	r22
     63a:	6f 92       	push	r6
     63c:	7f 92       	push	r7
     63e:	c6 53       	subi	r28, 0x36	; 54
     640:	df 4f       	sbci	r29, 0xFF	; 255
     642:	b8 81       	ld	r27, Y
     644:	ca 5c       	subi	r28, 0xCA	; 202
     646:	d0 40       	sbci	r29, 0x00	; 0
     648:	bf 93       	push	r27
     64a:	c7 53       	subi	r28, 0x37	; 55
     64c:	df 4f       	sbci	r29, 0xFF	; 255
     64e:	e8 81       	ld	r30, Y
     650:	c9 5c       	subi	r28, 0xC9	; 201
     652:	d0 40       	sbci	r29, 0x00	; 0
     654:	ef 93       	push	r30
     656:	c2 53       	subi	r28, 0x32	; 50
     658:	df 4f       	sbci	r29, 0xFF	; 255
     65a:	f8 81       	ld	r31, Y
     65c:	ce 5c       	subi	r28, 0xCE	; 206
     65e:	d0 40       	sbci	r29, 0x00	; 0
     660:	ff 93       	push	r31
     662:	c3 53       	subi	r28, 0x33	; 51
     664:	df 4f       	sbci	r29, 0xFF	; 255
     666:	88 81       	ld	r24, Y
     668:	cd 5c       	subi	r28, 0xCD	; 205
     66a:	d0 40       	sbci	r29, 0x00	; 0
     66c:	8f 93       	push	r24
     66e:	c4 53       	subi	r28, 0x34	; 52
     670:	df 4f       	sbci	r29, 0xFF	; 255
     672:	98 81       	ld	r25, Y
     674:	cc 5c       	subi	r28, 0xCC	; 204
     676:	d0 40       	sbci	r29, 0x00	; 0
     678:	9f 93       	push	r25
     67a:	c5 53       	subi	r28, 0x35	; 53
     67c:	df 4f       	sbci	r29, 0xFF	; 255
     67e:	a8 81       	ld	r26, Y
     680:	cb 5c       	subi	r28, 0xCB	; 203
     682:	d0 40       	sbci	r29, 0x00	; 0
     684:	af 93       	push	r26
     686:	1f 92       	push	r1
     688:	82 e0       	ldi	r24, 0x02	; 2
     68a:	8f 93       	push	r24
     68c:	ff 92       	push	r15
     68e:	ef 92       	push	r14
     690:	1f 93       	push	r17
     692:	0f 93       	push	r16
     694:	0e 94 ea 0b 	call	0x17d4	; 0x17d4 <sprintf>
	//strcat(str_out,str);
	Serial.send(str_out);
     698:	0f b6       	in	r0, 0x3f	; 63
     69a:	f8 94       	cli
     69c:	de bf       	out	0x3e, r29	; 62
     69e:	0f be       	out	0x3f, r0	; 63
     6a0:	cd bf       	out	0x3d, r28	; 61
     6a2:	be 01       	movw	r22, r28
     6a4:	6f 5f       	subi	r22, 0xFF	; 255
     6a6:	7f 4f       	sbci	r23, 0xFF	; 255
     6a8:	80 eb       	ldi	r24, 0xB0	; 176
     6aa:	91 e0       	ldi	r25, 0x01	; 1
     6ac:	0e 94 55 04 	call	0x8aa	; 0x8aa <_ZN5USART4sendEPKc>
// 	
// 	sprintf(str, "{\"Sensor\":%d{\"obj\":%0.1f,\"amb\":%0.1f,\"Dist\":[%i,%.2f],\"Time\":%lu}}", 4, obj_4, amb_4 , (int)Sonic.Distance,mDistance,m_read_time);
// 	strcat(str_out,str);
	 	
	//Serial.send(str_out);
}
     6b0:	c2 53       	subi	r28, 0x32	; 50
     6b2:	df 4f       	sbci	r29, 0xFF	; 255
     6b4:	0f b6       	in	r0, 0x3f	; 63
     6b6:	f8 94       	cli
     6b8:	de bf       	out	0x3e, r29	; 62
     6ba:	0f be       	out	0x3f, r0	; 63
     6bc:	cd bf       	out	0x3d, r28	; 61
     6be:	df 91       	pop	r29
     6c0:	cf 91       	pop	r28
     6c2:	1f 91       	pop	r17
     6c4:	0f 91       	pop	r16
     6c6:	ff 90       	pop	r15
     6c8:	ef 90       	pop	r14
     6ca:	df 90       	pop	r13
     6cc:	cf 90       	pop	r12
     6ce:	bf 90       	pop	r11
     6d0:	af 90       	pop	r10
     6d2:	9f 90       	pop	r9
     6d4:	8f 90       	pop	r8
     6d6:	7f 90       	pop	r7
     6d8:	6f 90       	pop	r6
     6da:	5f 90       	pop	r5
     6dc:	4f 90       	pop	r4
     6de:	3f 90       	pop	r3
     6e0:	2f 90       	pop	r2
     6e2:	08 95       	ret

000006e4 <main>:
/*********************************************************************/
int main(void)
{	
	setup();
     6e4:	0e 94 1e 02 	call	0x43c	; 0x43c <_Z5setupv>
	//TIFR1 = 0;
}
/*********************************************************************/
unsigned long int millis(void)
{
	return count;
     6e8:	c0 90 8e 01 	lds	r12, 0x018E
     6ec:	d0 90 8f 01 	lds	r13, 0x018F
     6f0:	e0 90 90 01 	lds	r14, 0x0190
     6f4:	f0 90 91 01 	lds	r15, 0x0191
     6f8:	63 e7       	ldi	r22, 0x73	; 115
     6fa:	71 e0       	ldi	r23, 0x01	; 1
     6fc:	80 eb       	ldi	r24, 0xB0	; 176
     6fe:	91 e0       	ldi	r25, 0x01	; 1
     700:	0e 94 55 04 	call	0x8aa	; 0x8aa <_ZN5USART4sendEPKc>
     704:	6d e0       	ldi	r22, 0x0D	; 13
     706:	71 e0       	ldi	r23, 0x01	; 1
     708:	80 eb       	ldi	r24, 0xB0	; 176
     70a:	91 e0       	ldi	r25, 0x01	; 1
     70c:	0e 94 55 04 	call	0x8aa	; 0x8aa <_ZN5USART4sendEPKc>
		unsigned long int start_time;
	    start_time = millis();	
		#ifdef _DEBUG
			Serial.sendln("> Read Sensors...");
		#endif
		IR_sensorRead();
     710:	0e 94 5e 02 	call	0x4bc	; 0x4bc <_Z13IR_sensorReadv>
	//TIFR1 = 0;
}
/*********************************************************************/
unsigned long int millis(void)
{
	return count;
     714:	80 91 8e 01 	lds	r24, 0x018E
     718:	90 91 8f 01 	lds	r25, 0x018F
     71c:	a0 91 90 01 	lds	r26, 0x0190
     720:	b0 91 91 01 	lds	r27, 0x0191
		#endif
		IR_sensorRead();
		//_delay_ms(250);	
		//sprintf(s,"%lu",start_time)	;
		//Serial.sendln(s);
		while((millis()-start_time) <= 250);
     724:	8c 19       	sub	r24, r12
     726:	9d 09       	sbc	r25, r13
     728:	ae 09       	sbc	r26, r14
     72a:	bf 09       	sbc	r27, r15
     72c:	8b 3f       	cpi	r24, 0xFB	; 251
     72e:	91 05       	cpc	r25, r1
     730:	a1 05       	cpc	r26, r1
     732:	b1 05       	cpc	r27, r1
     734:	78 f3       	brcs	.-34     	; 0x714 <main+0x30>
     736:	d8 cf       	rjmp	.-80     	; 0x6e8 <main+0x4>

00000738 <_GLOBAL__sub_I_MLX_5a>:
#include "uart.h"
#include "Adafruit_MLX90614.h"
#include "HCSR04.h"
#include "VL53L0X.h"

Adafruit_MLX90614 MLX_5a(0x5A);
     738:	6a e5       	ldi	r22, 0x5A	; 90
     73a:	85 ea       	ldi	r24, 0xA5	; 165
     73c:	91 e0       	ldi	r25, 0x01	; 1
     73e:	0e 94 e1 00 	call	0x1c2	; 0x1c2 <_ZN17Adafruit_MLX90614C1Eh>
Adafruit_MLX90614 MLX_5b(0x5B);
     742:	6b e5       	ldi	r22, 0x5B	; 91
     744:	8a e9       	ldi	r24, 0x9A	; 154
     746:	91 e0       	ldi	r25, 0x01	; 1
     748:	0e 94 e1 00 	call	0x1c2	; 0x1c2 <_ZN17Adafruit_MLX90614C1Eh>
     74c:	08 95       	ret

0000074e <i2c_init>:
 Initialization of the I2C bus interface. Need to be called only once
*************************************************************************/
void i2c_init(void)
{
  /* initialize TWI clock: 100 kHz clock, TWPS = 0 => prescaler = 1 */
  DDRC = 0;
     74e:	17 b8       	out	0x07, r1	; 7
  PORTC = (1 << PORTC4) | (1 << PORTC5);//enable pull up
     750:	80 e3       	ldi	r24, 0x30	; 48
     752:	88 b9       	out	0x08, r24	; 8
  TWSR = 0;                         /* no prescaler */
     754:	10 92 b9 00 	sts	0x00B9, r1
  TWBR = ((F_CPU/SCL_CLOCK)-16)/2;  /* must be > 10 for stable operation */
     758:	88 e4       	ldi	r24, 0x48	; 72
     75a:	80 93 b8 00 	sts	0x00B8, r24
     75e:	08 95       	ret

00000760 <i2c_start>:
unsigned char i2c_start(unsigned char address)
{
    uint8_t   twst;

	// send START condition
	TWCR = (1<<TWINT) | (1<<TWSTA) | (1<<TWEN);
     760:	94 ea       	ldi	r25, 0xA4	; 164
     762:	90 93 bc 00 	sts	0x00BC, r25

	// wait until transmission completed
	while(!(TWCR & (1<<TWINT)));
     766:	ec eb       	ldi	r30, 0xBC	; 188
     768:	f0 e0       	ldi	r31, 0x00	; 0
     76a:	90 81       	ld	r25, Z
     76c:	99 23       	and	r25, r25
     76e:	ec f7       	brge	.-6      	; 0x76a <i2c_start+0xa>

	// check value of TWI Status Register. Mask prescaler bits.
	twst = TW_STATUS & 0xF8;
     770:	90 91 b9 00 	lds	r25, 0x00B9
     774:	98 7f       	andi	r25, 0xF8	; 248
	if ( (twst != TW_START) && (twst != TW_REP_START)) return 1;
     776:	98 30       	cpi	r25, 0x08	; 8
     778:	11 f0       	breq	.+4      	; 0x77e <i2c_start+0x1e>
     77a:	90 31       	cpi	r25, 0x10	; 16
     77c:	a1 f4       	brne	.+40     	; 0x7a6 <i2c_start+0x46>

	// send device address
	TWDR = address;
     77e:	80 93 bb 00 	sts	0x00BB, r24
	TWCR = (1<<TWINT) | (1<<TWEN);
     782:	84 e8       	ldi	r24, 0x84	; 132
     784:	80 93 bc 00 	sts	0x00BC, r24

	// wail until transmission completed and ACK/NACK has been received
	while(!(TWCR & (1<<TWINT)));
     788:	ec eb       	ldi	r30, 0xBC	; 188
     78a:	f0 e0       	ldi	r31, 0x00	; 0
     78c:	80 81       	ld	r24, Z
     78e:	88 23       	and	r24, r24
     790:	ec f7       	brge	.-6      	; 0x78c <i2c_start+0x2c>

	// check value of TWI Status Register. Mask prescaler bits.
	twst = TW_STATUS & 0xF8;
     792:	90 91 b9 00 	lds	r25, 0x00B9
     796:	98 7f       	andi	r25, 0xF8	; 248
	if ( (twst != TW_MT_SLA_ACK) && (twst != TW_MR_SLA_ACK) ) return 1;
     798:	98 31       	cpi	r25, 0x18	; 24
     79a:	39 f0       	breq	.+14     	; 0x7aa <i2c_start+0x4a>
     79c:	81 e0       	ldi	r24, 0x01	; 1
     79e:	90 34       	cpi	r25, 0x40	; 64
     7a0:	29 f4       	brne	.+10     	; 0x7ac <i2c_start+0x4c>
     7a2:	80 e0       	ldi	r24, 0x00	; 0
     7a4:	08 95       	ret
	// wait until transmission completed
	while(!(TWCR & (1<<TWINT)));

	// check value of TWI Status Register. Mask prescaler bits.
	twst = TW_STATUS & 0xF8;
	if ( (twst != TW_START) && (twst != TW_REP_START)) return 1;
     7a6:	81 e0       	ldi	r24, 0x01	; 1
     7a8:	08 95       	ret

	// check value of TWI Status Register. Mask prescaler bits.
	twst = TW_STATUS & 0xF8;
	if ( (twst != TW_MT_SLA_ACK) && (twst != TW_MR_SLA_ACK) ) return 1;

	return 0;
     7aa:	80 e0       	ldi	r24, 0x00	; 0

}/* i2c_start */
     7ac:	08 95       	ret

000007ae <i2c_stop>:
 Terminates the data transfer and releases the I2C bus
*************************************************************************/
void i2c_stop(void)
{
    /* send stop condition */
	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWSTO);
     7ae:	84 e9       	ldi	r24, 0x94	; 148
     7b0:	80 93 bc 00 	sts	0x00BC, r24
     7b4:	08 95       	ret

000007b6 <i2c_write>:
unsigned char i2c_write( unsigned char data )
{	
    uint8_t   twst;
    
	// send data to the previously addressed device
	TWDR = data;
     7b6:	80 93 bb 00 	sts	0x00BB, r24
	TWCR = (1<<TWINT) | (1<<TWEN);
     7ba:	84 e8       	ldi	r24, 0x84	; 132
     7bc:	80 93 bc 00 	sts	0x00BC, r24

	// wait until transmission completed
	while(!(TWCR & (1<<TWINT)));
     7c0:	ec eb       	ldi	r30, 0xBC	; 188
     7c2:	f0 e0       	ldi	r31, 0x00	; 0
     7c4:	80 81       	ld	r24, Z
     7c6:	88 23       	and	r24, r24
     7c8:	ec f7       	brge	.-6      	; 0x7c4 <i2c_write+0xe>

	// check value of TWI Status Register. Mask prescaler bits
	twst = TW_STATUS & 0xF8;
     7ca:	90 91 b9 00 	lds	r25, 0x00B9
     7ce:	98 7f       	andi	r25, 0xF8	; 248
	if( twst != TW_MT_DATA_ACK) return 1;
     7d0:	81 e0       	ldi	r24, 0x01	; 1
     7d2:	98 32       	cpi	r25, 0x28	; 40
     7d4:	09 f4       	brne	.+2      	; 0x7d8 <i2c_write+0x22>
     7d6:	80 e0       	ldi	r24, 0x00	; 0
	return 0;

}/* i2c_write */
     7d8:	08 95       	ret

000007da <i2c_readAck>:
 
 Return:  byte read from I2C device
*************************************************************************/
unsigned char i2c_readAck(void)
{
	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWEA);
     7da:	84 ec       	ldi	r24, 0xC4	; 196
     7dc:	80 93 bc 00 	sts	0x00BC, r24
	while(!(TWCR & (1<<TWINT)));    
     7e0:	ec eb       	ldi	r30, 0xBC	; 188
     7e2:	f0 e0       	ldi	r31, 0x00	; 0
     7e4:	80 81       	ld	r24, Z
     7e6:	88 23       	and	r24, r24
     7e8:	ec f7       	brge	.-6      	; 0x7e4 <i2c_readAck+0xa>
    return TWDR;
     7ea:	80 91 bb 00 	lds	r24, 0x00BB
}/* i2c_readAck */
     7ee:	08 95       	ret

000007f0 <i2c_readNak>:
 
 Return:  byte read from I2C device
*************************************************************************/
unsigned char i2c_readNak(void)
{
	TWCR = (1<<TWINT) | (1<<TWEN);
     7f0:	84 e8       	ldi	r24, 0x84	; 132
     7f2:	80 93 bc 00 	sts	0x00BC, r24
	while(!(TWCR & (1<<TWINT)));
     7f6:	ec eb       	ldi	r30, 0xBC	; 188
     7f8:	f0 e0       	ldi	r31, 0x00	; 0
     7fa:	80 81       	ld	r24, Z
     7fc:	88 23       	and	r24, r24
     7fe:	ec f7       	brge	.-6      	; 0x7fa <i2c_readNak+0xa>
    return TWDR;
     800:	80 91 bb 00 	lds	r24, 0x00BB
}/* i2c_readNak */
     804:	08 95       	ret

00000806 <_ZN5USART4initEi>:
USART Serial; //Initialize new instance of the serial class
//Setup Baud rate in header file
//set to 8 bits, no stop bit, no parity

/*********************************************************************/
void USART::init(int BAUDRATE){
     806:	0f 93       	push	r16
     808:	1f 93       	push	r17
	UBRR0H = (uint8_t)(BAUD_PRESCALLER>>8);
     80a:	8b 01       	movw	r16, r22
     80c:	77 0f       	add	r23, r23
     80e:	22 0b       	sbc	r18, r18
     810:	33 0b       	sbc	r19, r19
     812:	d9 01       	movw	r26, r18
     814:	c8 01       	movw	r24, r16
     816:	80 58       	subi	r24, 0x80	; 128
     818:	9b 47       	sbci	r25, 0x7B	; 123
     81a:	a1 4e       	sbci	r26, 0xE1	; 225
     81c:	bf 4f       	sbci	r27, 0xFF	; 255
     81e:	88 0f       	add	r24, r24
     820:	99 1f       	adc	r25, r25
     822:	aa 1f       	adc	r26, r26
     824:	bb 1f       	adc	r27, r27
     826:	88 0f       	add	r24, r24
     828:	99 1f       	adc	r25, r25
     82a:	aa 1f       	adc	r26, r26
     82c:	bb 1f       	adc	r27, r27
     82e:	bc 01       	movw	r22, r24
     830:	cd 01       	movw	r24, r26
     832:	66 0f       	add	r22, r22
     834:	77 1f       	adc	r23, r23
     836:	88 1f       	adc	r24, r24
     838:	99 1f       	adc	r25, r25
     83a:	00 0f       	add	r16, r16
     83c:	11 1f       	adc	r17, r17
     83e:	22 1f       	adc	r18, r18
     840:	33 1f       	adc	r19, r19
     842:	00 0f       	add	r16, r16
     844:	11 1f       	adc	r17, r17
     846:	22 1f       	adc	r18, r18
     848:	33 1f       	adc	r19, r19
     84a:	a9 01       	movw	r20, r18
     84c:	98 01       	movw	r18, r16
     84e:	22 0f       	add	r18, r18
     850:	33 1f       	adc	r19, r19
     852:	44 1f       	adc	r20, r20
     854:	55 1f       	adc	r21, r21
     856:	22 0f       	add	r18, r18
     858:	33 1f       	adc	r19, r19
     85a:	44 1f       	adc	r20, r20
     85c:	55 1f       	adc	r21, r21
     85e:	0e 94 65 0a 	call	0x14ca	; 0x14ca <__udivmodsi4>
     862:	da 01       	movw	r26, r20
     864:	c9 01       	movw	r24, r18
     866:	01 97       	sbiw	r24, 0x01	; 1
     868:	a1 09       	sbc	r26, r1
     86a:	b1 09       	sbc	r27, r1
     86c:	89 2f       	mov	r24, r25
     86e:	9a 2f       	mov	r25, r26
     870:	ab 2f       	mov	r26, r27
     872:	bb 27       	eor	r27, r27
     874:	80 93 c5 00 	sts	0x00C5, r24
	UBRR0L = (uint8_t)(BAUD_PRESCALLER);
     878:	21 50       	subi	r18, 0x01	; 1
     87a:	20 93 c4 00 	sts	0x00C4, r18
	UCSR0B = (1<<RXEN0)|(1<<TXEN0);
     87e:	e1 ec       	ldi	r30, 0xC1	; 193
     880:	f0 e0       	ldi	r31, 0x00	; 0
     882:	88 e1       	ldi	r24, 0x18	; 24
     884:	80 83       	st	Z, r24
	UCSR0C = (1<<UCSZ00)|(1<<UCSZ01);
     886:	86 e0       	ldi	r24, 0x06	; 6
     888:	80 93 c2 00 	sts	0x00C2, r24

	UCSR0B |= (1 << RXCIE0); // Enable the USART Receive Complete interrupt (USART_RXC)
     88c:	80 81       	ld	r24, Z
     88e:	80 68       	ori	r24, 0x80	; 128
     890:	80 83       	st	Z, r24
	sei();
     892:	78 94       	sei
}
     894:	1f 91       	pop	r17
     896:	0f 91       	pop	r16
     898:	08 95       	ret

0000089a <_ZN5USART4sendEh>:
 return UDR0;// read buffer
}
/*********************************************************************/
void USART::send(uint8_t data){

	while(!(UCSR0A & (1<<UDRE0))); //wait until buffer is empty
     89a:	e0 ec       	ldi	r30, 0xC0	; 192
     89c:	f0 e0       	ldi	r31, 0x00	; 0
     89e:	80 81       	ld	r24, Z
     8a0:	85 ff       	sbrs	r24, 5
     8a2:	fd cf       	rjmp	.-6      	; 0x89e <_ZN5USART4sendEh+0x4>
	UDR0 = data; //Load data into buffer
     8a4:	60 93 c6 00 	sts	0x00C6, r22
     8a8:	08 95       	ret

000008aa <_ZN5USART4sendEPKc>:
}
/*********************************************************************/
//send one char at a time
void USART::send(const char* StringPtr)
{
     8aa:	0f 93       	push	r16
     8ac:	1f 93       	push	r17
     8ae:	cf 93       	push	r28
     8b0:	df 93       	push	r29
     8b2:	eb 01       	movw	r28, r22
	//st = millis();
	while(*StringPtr != 0x00)
     8b4:	68 81       	ld	r22, Y
     8b6:	66 23       	and	r22, r22
     8b8:	41 f0       	breq	.+16     	; 0x8ca <_ZN5USART4sendEPKc+0x20>
     8ba:	8c 01       	movw	r16, r24
     8bc:	21 96       	adiw	r28, 0x01	; 1
		void init(int BAUDRATE = 9600); 
		bool available(void);
		unsigned char read(void);
		bool flush(void);
		void send(uint8_t data);
		void send(char data) {send((uint8_t)data); };
     8be:	c8 01       	movw	r24, r16
     8c0:	0e 94 4d 04 	call	0x89a	; 0x89a <_ZN5USART4sendEh>
     8c4:	69 91       	ld	r22, Y+
     8c6:	61 11       	cpse	r22, r1
     8c8:	fa cf       	rjmp	.-12     	; 0x8be <_ZN5USART4sendEPKc+0x14>
	{
		send(*StringPtr++);
	}
	//ft = millis();
}
     8ca:	df 91       	pop	r29
     8cc:	cf 91       	pop	r28
     8ce:	1f 91       	pop	r17
     8d0:	0f 91       	pop	r16
     8d2:	08 95       	ret

000008d4 <_ZN5USART4sendEhi>:
	send(str);
}
/*********************************************************************/
//convert int to ASCII number, display in decimal or hex
void USART::send(uint8_t data, int base)
{
     8d4:	0f 93       	push	r16
     8d6:	1f 93       	push	r17
     8d8:	cf 93       	push	r28
     8da:	df 93       	push	r29
     8dc:	00 d0       	rcall	.+0      	; 0x8de <_ZN5USART4sendEhi+0xa>
     8de:	1f 92       	push	r1
     8e0:	cd b7       	in	r28, 0x3d	; 61
     8e2:	de b7       	in	r29, 0x3e	; 62
     8e4:	8c 01       	movw	r16, r24
	char str[3];
	if (base == DEC){
     8e6:	4a 30       	cpi	r20, 0x0A	; 10
     8e8:	51 05       	cpc	r21, r1
     8ea:	99 f4       	brne	.+38     	; 0x912 <__stack+0x13>
		sprintf(str,"%d",data);
     8ec:	1f 92       	push	r1
     8ee:	6f 93       	push	r22
     8f0:	88 e8       	ldi	r24, 0x88	; 136
     8f2:	91 e0       	ldi	r25, 0x01	; 1
     8f4:	9f 93       	push	r25
     8f6:	8f 93       	push	r24
     8f8:	ce 01       	movw	r24, r28
     8fa:	01 96       	adiw	r24, 0x01	; 1
     8fc:	9f 93       	push	r25
     8fe:	8f 93       	push	r24
     900:	0e 94 ea 0b 	call	0x17d4	; 0x17d4 <sprintf>
     904:	0f 90       	pop	r0
     906:	0f 90       	pop	r0
     908:	0f 90       	pop	r0
     90a:	0f 90       	pop	r0
     90c:	0f 90       	pop	r0
     90e:	0f 90       	pop	r0
     910:	12 c0       	rjmp	.+36     	; 0x936 <__stack+0x37>
	}else{
		sprintf(str,"%x",data);	
     912:	1f 92       	push	r1
     914:	6f 93       	push	r22
     916:	2b e8       	ldi	r18, 0x8B	; 139
     918:	31 e0       	ldi	r19, 0x01	; 1
     91a:	3f 93       	push	r19
     91c:	2f 93       	push	r18
     91e:	ce 01       	movw	r24, r28
     920:	01 96       	adiw	r24, 0x01	; 1
     922:	9f 93       	push	r25
     924:	8f 93       	push	r24
     926:	0e 94 ea 0b 	call	0x17d4	; 0x17d4 <sprintf>
     92a:	0f 90       	pop	r0
     92c:	0f 90       	pop	r0
     92e:	0f 90       	pop	r0
     930:	0f 90       	pop	r0
     932:	0f 90       	pop	r0
     934:	0f 90       	pop	r0
	}
	send(str);
     936:	be 01       	movw	r22, r28
     938:	6f 5f       	subi	r22, 0xFF	; 255
     93a:	7f 4f       	sbci	r23, 0xFF	; 255
     93c:	c8 01       	movw	r24, r16
     93e:	0e 94 55 04 	call	0x8aa	; 0x8aa <_ZN5USART4sendEPKc>
		else
		{
			send(Output_unit+48);
		}
	}*/
}
     942:	0f 90       	pop	r0
     944:	0f 90       	pop	r0
     946:	0f 90       	pop	r0
     948:	df 91       	pop	r29
     94a:	cf 91       	pop	r28
     94c:	1f 91       	pop	r17
     94e:	0f 91       	pop	r16
     950:	08 95       	ret

00000952 <_GLOBAL__sub_I_Wire>:
	  }
 class I2c
 {
 public:
    I2c()
    {
     952:	e8 eb       	ldi	r30, 0xB8	; 184
     954:	f1 e0       	ldi	r31, 0x01	; 1
     956:	10 86       	std	Z+8, r1	; 0x08
     958:	11 86       	std	Z+9, r1	; 0x09
	    i2c_init();
     95a:	0e 94 a7 03 	call	0x74e	; 0x74e <i2c_init>
     95e:	08 95       	ret

00000960 <__subsf3>:
     960:	50 58       	subi	r21, 0x80	; 128

00000962 <__addsf3>:
     962:	bb 27       	eor	r27, r27
     964:	aa 27       	eor	r26, r26
     966:	0e 94 c8 04 	call	0x990	; 0x990 <__addsf3x>
     96a:	0c 94 3d 06 	jmp	0xc7a	; 0xc7a <__fp_round>
     96e:	0e 94 2f 06 	call	0xc5e	; 0xc5e <__fp_pscA>
     972:	38 f0       	brcs	.+14     	; 0x982 <__addsf3+0x20>
     974:	0e 94 36 06 	call	0xc6c	; 0xc6c <__fp_pscB>
     978:	20 f0       	brcs	.+8      	; 0x982 <__addsf3+0x20>
     97a:	39 f4       	brne	.+14     	; 0x98a <__addsf3+0x28>
     97c:	9f 3f       	cpi	r25, 0xFF	; 255
     97e:	19 f4       	brne	.+6      	; 0x986 <__addsf3+0x24>
     980:	26 f4       	brtc	.+8      	; 0x98a <__addsf3+0x28>
     982:	0c 94 2c 06 	jmp	0xc58	; 0xc58 <__fp_nan>
     986:	0e f4       	brtc	.+2      	; 0x98a <__addsf3+0x28>
     988:	e0 95       	com	r30
     98a:	e7 fb       	bst	r30, 7
     98c:	0c 94 26 06 	jmp	0xc4c	; 0xc4c <__fp_inf>

00000990 <__addsf3x>:
     990:	e9 2f       	mov	r30, r25
     992:	0e 94 4e 06 	call	0xc9c	; 0xc9c <__fp_split3>
     996:	58 f3       	brcs	.-42     	; 0x96e <__addsf3+0xc>
     998:	ba 17       	cp	r27, r26
     99a:	62 07       	cpc	r22, r18
     99c:	73 07       	cpc	r23, r19
     99e:	84 07       	cpc	r24, r20
     9a0:	95 07       	cpc	r25, r21
     9a2:	20 f0       	brcs	.+8      	; 0x9ac <__addsf3x+0x1c>
     9a4:	79 f4       	brne	.+30     	; 0x9c4 <__addsf3x+0x34>
     9a6:	a6 f5       	brtc	.+104    	; 0xa10 <__addsf3x+0x80>
     9a8:	0c 94 70 06 	jmp	0xce0	; 0xce0 <__fp_zero>
     9ac:	0e f4       	brtc	.+2      	; 0x9b0 <__addsf3x+0x20>
     9ae:	e0 95       	com	r30
     9b0:	0b 2e       	mov	r0, r27
     9b2:	ba 2f       	mov	r27, r26
     9b4:	a0 2d       	mov	r26, r0
     9b6:	0b 01       	movw	r0, r22
     9b8:	b9 01       	movw	r22, r18
     9ba:	90 01       	movw	r18, r0
     9bc:	0c 01       	movw	r0, r24
     9be:	ca 01       	movw	r24, r20
     9c0:	a0 01       	movw	r20, r0
     9c2:	11 24       	eor	r1, r1
     9c4:	ff 27       	eor	r31, r31
     9c6:	59 1b       	sub	r21, r25
     9c8:	99 f0       	breq	.+38     	; 0x9f0 <__addsf3x+0x60>
     9ca:	59 3f       	cpi	r21, 0xF9	; 249
     9cc:	50 f4       	brcc	.+20     	; 0x9e2 <__addsf3x+0x52>
     9ce:	50 3e       	cpi	r21, 0xE0	; 224
     9d0:	68 f1       	brcs	.+90     	; 0xa2c <__addsf3x+0x9c>
     9d2:	1a 16       	cp	r1, r26
     9d4:	f0 40       	sbci	r31, 0x00	; 0
     9d6:	a2 2f       	mov	r26, r18
     9d8:	23 2f       	mov	r18, r19
     9da:	34 2f       	mov	r19, r20
     9dc:	44 27       	eor	r20, r20
     9de:	58 5f       	subi	r21, 0xF8	; 248
     9e0:	f3 cf       	rjmp	.-26     	; 0x9c8 <__addsf3x+0x38>
     9e2:	46 95       	lsr	r20
     9e4:	37 95       	ror	r19
     9e6:	27 95       	ror	r18
     9e8:	a7 95       	ror	r26
     9ea:	f0 40       	sbci	r31, 0x00	; 0
     9ec:	53 95       	inc	r21
     9ee:	c9 f7       	brne	.-14     	; 0x9e2 <__addsf3x+0x52>
     9f0:	7e f4       	brtc	.+30     	; 0xa10 <__addsf3x+0x80>
     9f2:	1f 16       	cp	r1, r31
     9f4:	ba 0b       	sbc	r27, r26
     9f6:	62 0b       	sbc	r22, r18
     9f8:	73 0b       	sbc	r23, r19
     9fa:	84 0b       	sbc	r24, r20
     9fc:	ba f0       	brmi	.+46     	; 0xa2c <__addsf3x+0x9c>
     9fe:	91 50       	subi	r25, 0x01	; 1
     a00:	a1 f0       	breq	.+40     	; 0xa2a <__addsf3x+0x9a>
     a02:	ff 0f       	add	r31, r31
     a04:	bb 1f       	adc	r27, r27
     a06:	66 1f       	adc	r22, r22
     a08:	77 1f       	adc	r23, r23
     a0a:	88 1f       	adc	r24, r24
     a0c:	c2 f7       	brpl	.-16     	; 0x9fe <__addsf3x+0x6e>
     a0e:	0e c0       	rjmp	.+28     	; 0xa2c <__addsf3x+0x9c>
     a10:	ba 0f       	add	r27, r26
     a12:	62 1f       	adc	r22, r18
     a14:	73 1f       	adc	r23, r19
     a16:	84 1f       	adc	r24, r20
     a18:	48 f4       	brcc	.+18     	; 0xa2c <__addsf3x+0x9c>
     a1a:	87 95       	ror	r24
     a1c:	77 95       	ror	r23
     a1e:	67 95       	ror	r22
     a20:	b7 95       	ror	r27
     a22:	f7 95       	ror	r31
     a24:	9e 3f       	cpi	r25, 0xFE	; 254
     a26:	08 f0       	brcs	.+2      	; 0xa2a <__addsf3x+0x9a>
     a28:	b0 cf       	rjmp	.-160    	; 0x98a <__addsf3+0x28>
     a2a:	93 95       	inc	r25
     a2c:	88 0f       	add	r24, r24
     a2e:	08 f0       	brcs	.+2      	; 0xa32 <__addsf3x+0xa2>
     a30:	99 27       	eor	r25, r25
     a32:	ee 0f       	add	r30, r30
     a34:	97 95       	ror	r25
     a36:	87 95       	ror	r24
     a38:	08 95       	ret

00000a3a <__divsf3>:
     a3a:	0e 94 31 05 	call	0xa62	; 0xa62 <__divsf3x>
     a3e:	0c 94 3d 06 	jmp	0xc7a	; 0xc7a <__fp_round>
     a42:	0e 94 36 06 	call	0xc6c	; 0xc6c <__fp_pscB>
     a46:	58 f0       	brcs	.+22     	; 0xa5e <__divsf3+0x24>
     a48:	0e 94 2f 06 	call	0xc5e	; 0xc5e <__fp_pscA>
     a4c:	40 f0       	brcs	.+16     	; 0xa5e <__divsf3+0x24>
     a4e:	29 f4       	brne	.+10     	; 0xa5a <__divsf3+0x20>
     a50:	5f 3f       	cpi	r21, 0xFF	; 255
     a52:	29 f0       	breq	.+10     	; 0xa5e <__divsf3+0x24>
     a54:	0c 94 26 06 	jmp	0xc4c	; 0xc4c <__fp_inf>
     a58:	51 11       	cpse	r21, r1
     a5a:	0c 94 71 06 	jmp	0xce2	; 0xce2 <__fp_szero>
     a5e:	0c 94 2c 06 	jmp	0xc58	; 0xc58 <__fp_nan>

00000a62 <__divsf3x>:
     a62:	0e 94 4e 06 	call	0xc9c	; 0xc9c <__fp_split3>
     a66:	68 f3       	brcs	.-38     	; 0xa42 <__divsf3+0x8>

00000a68 <__divsf3_pse>:
     a68:	99 23       	and	r25, r25
     a6a:	b1 f3       	breq	.-20     	; 0xa58 <__divsf3+0x1e>
     a6c:	55 23       	and	r21, r21
     a6e:	91 f3       	breq	.-28     	; 0xa54 <__divsf3+0x1a>
     a70:	95 1b       	sub	r25, r21
     a72:	55 0b       	sbc	r21, r21
     a74:	bb 27       	eor	r27, r27
     a76:	aa 27       	eor	r26, r26
     a78:	62 17       	cp	r22, r18
     a7a:	73 07       	cpc	r23, r19
     a7c:	84 07       	cpc	r24, r20
     a7e:	38 f0       	brcs	.+14     	; 0xa8e <__divsf3_pse+0x26>
     a80:	9f 5f       	subi	r25, 0xFF	; 255
     a82:	5f 4f       	sbci	r21, 0xFF	; 255
     a84:	22 0f       	add	r18, r18
     a86:	33 1f       	adc	r19, r19
     a88:	44 1f       	adc	r20, r20
     a8a:	aa 1f       	adc	r26, r26
     a8c:	a9 f3       	breq	.-22     	; 0xa78 <__divsf3_pse+0x10>
     a8e:	35 d0       	rcall	.+106    	; 0xafa <__divsf3_pse+0x92>
     a90:	0e 2e       	mov	r0, r30
     a92:	3a f0       	brmi	.+14     	; 0xaa2 <__divsf3_pse+0x3a>
     a94:	e0 e8       	ldi	r30, 0x80	; 128
     a96:	32 d0       	rcall	.+100    	; 0xafc <__divsf3_pse+0x94>
     a98:	91 50       	subi	r25, 0x01	; 1
     a9a:	50 40       	sbci	r21, 0x00	; 0
     a9c:	e6 95       	lsr	r30
     a9e:	00 1c       	adc	r0, r0
     aa0:	ca f7       	brpl	.-14     	; 0xa94 <__divsf3_pse+0x2c>
     aa2:	2b d0       	rcall	.+86     	; 0xafa <__divsf3_pse+0x92>
     aa4:	fe 2f       	mov	r31, r30
     aa6:	29 d0       	rcall	.+82     	; 0xafa <__divsf3_pse+0x92>
     aa8:	66 0f       	add	r22, r22
     aaa:	77 1f       	adc	r23, r23
     aac:	88 1f       	adc	r24, r24
     aae:	bb 1f       	adc	r27, r27
     ab0:	26 17       	cp	r18, r22
     ab2:	37 07       	cpc	r19, r23
     ab4:	48 07       	cpc	r20, r24
     ab6:	ab 07       	cpc	r26, r27
     ab8:	b0 e8       	ldi	r27, 0x80	; 128
     aba:	09 f0       	breq	.+2      	; 0xabe <__divsf3_pse+0x56>
     abc:	bb 0b       	sbc	r27, r27
     abe:	80 2d       	mov	r24, r0
     ac0:	bf 01       	movw	r22, r30
     ac2:	ff 27       	eor	r31, r31
     ac4:	93 58       	subi	r25, 0x83	; 131
     ac6:	5f 4f       	sbci	r21, 0xFF	; 255
     ac8:	3a f0       	brmi	.+14     	; 0xad8 <__divsf3_pse+0x70>
     aca:	9e 3f       	cpi	r25, 0xFE	; 254
     acc:	51 05       	cpc	r21, r1
     ace:	78 f0       	brcs	.+30     	; 0xaee <__divsf3_pse+0x86>
     ad0:	0c 94 26 06 	jmp	0xc4c	; 0xc4c <__fp_inf>
     ad4:	0c 94 71 06 	jmp	0xce2	; 0xce2 <__fp_szero>
     ad8:	5f 3f       	cpi	r21, 0xFF	; 255
     ada:	e4 f3       	brlt	.-8      	; 0xad4 <__divsf3_pse+0x6c>
     adc:	98 3e       	cpi	r25, 0xE8	; 232
     ade:	d4 f3       	brlt	.-12     	; 0xad4 <__divsf3_pse+0x6c>
     ae0:	86 95       	lsr	r24
     ae2:	77 95       	ror	r23
     ae4:	67 95       	ror	r22
     ae6:	b7 95       	ror	r27
     ae8:	f7 95       	ror	r31
     aea:	9f 5f       	subi	r25, 0xFF	; 255
     aec:	c9 f7       	brne	.-14     	; 0xae0 <__divsf3_pse+0x78>
     aee:	88 0f       	add	r24, r24
     af0:	91 1d       	adc	r25, r1
     af2:	96 95       	lsr	r25
     af4:	87 95       	ror	r24
     af6:	97 f9       	bld	r25, 7
     af8:	08 95       	ret
     afa:	e1 e0       	ldi	r30, 0x01	; 1
     afc:	66 0f       	add	r22, r22
     afe:	77 1f       	adc	r23, r23
     b00:	88 1f       	adc	r24, r24
     b02:	bb 1f       	adc	r27, r27
     b04:	62 17       	cp	r22, r18
     b06:	73 07       	cpc	r23, r19
     b08:	84 07       	cpc	r24, r20
     b0a:	ba 07       	cpc	r27, r26
     b0c:	20 f0       	brcs	.+8      	; 0xb16 <__divsf3_pse+0xae>
     b0e:	62 1b       	sub	r22, r18
     b10:	73 0b       	sbc	r23, r19
     b12:	84 0b       	sbc	r24, r20
     b14:	ba 0b       	sbc	r27, r26
     b16:	ee 1f       	adc	r30, r30
     b18:	88 f7       	brcc	.-30     	; 0xafc <__divsf3_pse+0x94>
     b1a:	e0 95       	com	r30
     b1c:	08 95       	ret

00000b1e <__fixsfsi>:
     b1e:	0e 94 96 05 	call	0xb2c	; 0xb2c <__fixunssfsi>
     b22:	68 94       	set
     b24:	b1 11       	cpse	r27, r1
     b26:	0c 94 71 06 	jmp	0xce2	; 0xce2 <__fp_szero>
     b2a:	08 95       	ret

00000b2c <__fixunssfsi>:
     b2c:	0e 94 56 06 	call	0xcac	; 0xcac <__fp_splitA>
     b30:	88 f0       	brcs	.+34     	; 0xb54 <__fixunssfsi+0x28>
     b32:	9f 57       	subi	r25, 0x7F	; 127
     b34:	98 f0       	brcs	.+38     	; 0xb5c <__fixunssfsi+0x30>
     b36:	b9 2f       	mov	r27, r25
     b38:	99 27       	eor	r25, r25
     b3a:	b7 51       	subi	r27, 0x17	; 23
     b3c:	b0 f0       	brcs	.+44     	; 0xb6a <__fixunssfsi+0x3e>
     b3e:	e1 f0       	breq	.+56     	; 0xb78 <__fixunssfsi+0x4c>
     b40:	66 0f       	add	r22, r22
     b42:	77 1f       	adc	r23, r23
     b44:	88 1f       	adc	r24, r24
     b46:	99 1f       	adc	r25, r25
     b48:	1a f0       	brmi	.+6      	; 0xb50 <__fixunssfsi+0x24>
     b4a:	ba 95       	dec	r27
     b4c:	c9 f7       	brne	.-14     	; 0xb40 <__fixunssfsi+0x14>
     b4e:	14 c0       	rjmp	.+40     	; 0xb78 <__fixunssfsi+0x4c>
     b50:	b1 30       	cpi	r27, 0x01	; 1
     b52:	91 f0       	breq	.+36     	; 0xb78 <__fixunssfsi+0x4c>
     b54:	0e 94 70 06 	call	0xce0	; 0xce0 <__fp_zero>
     b58:	b1 e0       	ldi	r27, 0x01	; 1
     b5a:	08 95       	ret
     b5c:	0c 94 70 06 	jmp	0xce0	; 0xce0 <__fp_zero>
     b60:	67 2f       	mov	r22, r23
     b62:	78 2f       	mov	r23, r24
     b64:	88 27       	eor	r24, r24
     b66:	b8 5f       	subi	r27, 0xF8	; 248
     b68:	39 f0       	breq	.+14     	; 0xb78 <__fixunssfsi+0x4c>
     b6a:	b9 3f       	cpi	r27, 0xF9	; 249
     b6c:	cc f3       	brlt	.-14     	; 0xb60 <__fixunssfsi+0x34>
     b6e:	86 95       	lsr	r24
     b70:	77 95       	ror	r23
     b72:	67 95       	ror	r22
     b74:	b3 95       	inc	r27
     b76:	d9 f7       	brne	.-10     	; 0xb6e <__fixunssfsi+0x42>
     b78:	3e f4       	brtc	.+14     	; 0xb88 <__fixunssfsi+0x5c>
     b7a:	90 95       	com	r25
     b7c:	80 95       	com	r24
     b7e:	70 95       	com	r23
     b80:	61 95       	neg	r22
     b82:	7f 4f       	sbci	r23, 0xFF	; 255
     b84:	8f 4f       	sbci	r24, 0xFF	; 255
     b86:	9f 4f       	sbci	r25, 0xFF	; 255
     b88:	08 95       	ret

00000b8a <__floatunsisf>:
     b8a:	e8 94       	clt
     b8c:	09 c0       	rjmp	.+18     	; 0xba0 <__floatsisf+0x12>

00000b8e <__floatsisf>:
     b8e:	97 fb       	bst	r25, 7
     b90:	3e f4       	brtc	.+14     	; 0xba0 <__floatsisf+0x12>
     b92:	90 95       	com	r25
     b94:	80 95       	com	r24
     b96:	70 95       	com	r23
     b98:	61 95       	neg	r22
     b9a:	7f 4f       	sbci	r23, 0xFF	; 255
     b9c:	8f 4f       	sbci	r24, 0xFF	; 255
     b9e:	9f 4f       	sbci	r25, 0xFF	; 255
     ba0:	99 23       	and	r25, r25
     ba2:	a9 f0       	breq	.+42     	; 0xbce <__floatsisf+0x40>
     ba4:	f9 2f       	mov	r31, r25
     ba6:	96 e9       	ldi	r25, 0x96	; 150
     ba8:	bb 27       	eor	r27, r27
     baa:	93 95       	inc	r25
     bac:	f6 95       	lsr	r31
     bae:	87 95       	ror	r24
     bb0:	77 95       	ror	r23
     bb2:	67 95       	ror	r22
     bb4:	b7 95       	ror	r27
     bb6:	f1 11       	cpse	r31, r1
     bb8:	f8 cf       	rjmp	.-16     	; 0xbaa <__floatsisf+0x1c>
     bba:	fa f4       	brpl	.+62     	; 0xbfa <__floatsisf+0x6c>
     bbc:	bb 0f       	add	r27, r27
     bbe:	11 f4       	brne	.+4      	; 0xbc4 <__floatsisf+0x36>
     bc0:	60 ff       	sbrs	r22, 0
     bc2:	1b c0       	rjmp	.+54     	; 0xbfa <__floatsisf+0x6c>
     bc4:	6f 5f       	subi	r22, 0xFF	; 255
     bc6:	7f 4f       	sbci	r23, 0xFF	; 255
     bc8:	8f 4f       	sbci	r24, 0xFF	; 255
     bca:	9f 4f       	sbci	r25, 0xFF	; 255
     bcc:	16 c0       	rjmp	.+44     	; 0xbfa <__floatsisf+0x6c>
     bce:	88 23       	and	r24, r24
     bd0:	11 f0       	breq	.+4      	; 0xbd6 <__floatsisf+0x48>
     bd2:	96 e9       	ldi	r25, 0x96	; 150
     bd4:	11 c0       	rjmp	.+34     	; 0xbf8 <__floatsisf+0x6a>
     bd6:	77 23       	and	r23, r23
     bd8:	21 f0       	breq	.+8      	; 0xbe2 <__floatsisf+0x54>
     bda:	9e e8       	ldi	r25, 0x8E	; 142
     bdc:	87 2f       	mov	r24, r23
     bde:	76 2f       	mov	r23, r22
     be0:	05 c0       	rjmp	.+10     	; 0xbec <__floatsisf+0x5e>
     be2:	66 23       	and	r22, r22
     be4:	71 f0       	breq	.+28     	; 0xc02 <__floatsisf+0x74>
     be6:	96 e8       	ldi	r25, 0x86	; 134
     be8:	86 2f       	mov	r24, r22
     bea:	70 e0       	ldi	r23, 0x00	; 0
     bec:	60 e0       	ldi	r22, 0x00	; 0
     bee:	2a f0       	brmi	.+10     	; 0xbfa <__floatsisf+0x6c>
     bf0:	9a 95       	dec	r25
     bf2:	66 0f       	add	r22, r22
     bf4:	77 1f       	adc	r23, r23
     bf6:	88 1f       	adc	r24, r24
     bf8:	da f7       	brpl	.-10     	; 0xbf0 <__floatsisf+0x62>
     bfa:	88 0f       	add	r24, r24
     bfc:	96 95       	lsr	r25
     bfe:	87 95       	ror	r24
     c00:	97 f9       	bld	r25, 7
     c02:	08 95       	ret

00000c04 <__fp_cmp>:
     c04:	99 0f       	add	r25, r25
     c06:	00 08       	sbc	r0, r0
     c08:	55 0f       	add	r21, r21
     c0a:	aa 0b       	sbc	r26, r26
     c0c:	e0 e8       	ldi	r30, 0x80	; 128
     c0e:	fe ef       	ldi	r31, 0xFE	; 254
     c10:	16 16       	cp	r1, r22
     c12:	17 06       	cpc	r1, r23
     c14:	e8 07       	cpc	r30, r24
     c16:	f9 07       	cpc	r31, r25
     c18:	c0 f0       	brcs	.+48     	; 0xc4a <__fp_cmp+0x46>
     c1a:	12 16       	cp	r1, r18
     c1c:	13 06       	cpc	r1, r19
     c1e:	e4 07       	cpc	r30, r20
     c20:	f5 07       	cpc	r31, r21
     c22:	98 f0       	brcs	.+38     	; 0xc4a <__fp_cmp+0x46>
     c24:	62 1b       	sub	r22, r18
     c26:	73 0b       	sbc	r23, r19
     c28:	84 0b       	sbc	r24, r20
     c2a:	95 0b       	sbc	r25, r21
     c2c:	39 f4       	brne	.+14     	; 0xc3c <__fp_cmp+0x38>
     c2e:	0a 26       	eor	r0, r26
     c30:	61 f0       	breq	.+24     	; 0xc4a <__fp_cmp+0x46>
     c32:	23 2b       	or	r18, r19
     c34:	24 2b       	or	r18, r20
     c36:	25 2b       	or	r18, r21
     c38:	21 f4       	brne	.+8      	; 0xc42 <__fp_cmp+0x3e>
     c3a:	08 95       	ret
     c3c:	0a 26       	eor	r0, r26
     c3e:	09 f4       	brne	.+2      	; 0xc42 <__fp_cmp+0x3e>
     c40:	a1 40       	sbci	r26, 0x01	; 1
     c42:	a6 95       	lsr	r26
     c44:	8f ef       	ldi	r24, 0xFF	; 255
     c46:	81 1d       	adc	r24, r1
     c48:	81 1d       	adc	r24, r1
     c4a:	08 95       	ret

00000c4c <__fp_inf>:
     c4c:	97 f9       	bld	r25, 7
     c4e:	9f 67       	ori	r25, 0x7F	; 127
     c50:	80 e8       	ldi	r24, 0x80	; 128
     c52:	70 e0       	ldi	r23, 0x00	; 0
     c54:	60 e0       	ldi	r22, 0x00	; 0
     c56:	08 95       	ret

00000c58 <__fp_nan>:
     c58:	9f ef       	ldi	r25, 0xFF	; 255
     c5a:	80 ec       	ldi	r24, 0xC0	; 192
     c5c:	08 95       	ret

00000c5e <__fp_pscA>:
     c5e:	00 24       	eor	r0, r0
     c60:	0a 94       	dec	r0
     c62:	16 16       	cp	r1, r22
     c64:	17 06       	cpc	r1, r23
     c66:	18 06       	cpc	r1, r24
     c68:	09 06       	cpc	r0, r25
     c6a:	08 95       	ret

00000c6c <__fp_pscB>:
     c6c:	00 24       	eor	r0, r0
     c6e:	0a 94       	dec	r0
     c70:	12 16       	cp	r1, r18
     c72:	13 06       	cpc	r1, r19
     c74:	14 06       	cpc	r1, r20
     c76:	05 06       	cpc	r0, r21
     c78:	08 95       	ret

00000c7a <__fp_round>:
     c7a:	09 2e       	mov	r0, r25
     c7c:	03 94       	inc	r0
     c7e:	00 0c       	add	r0, r0
     c80:	11 f4       	brne	.+4      	; 0xc86 <__fp_round+0xc>
     c82:	88 23       	and	r24, r24
     c84:	52 f0       	brmi	.+20     	; 0xc9a <__fp_round+0x20>
     c86:	bb 0f       	add	r27, r27
     c88:	40 f4       	brcc	.+16     	; 0xc9a <__fp_round+0x20>
     c8a:	bf 2b       	or	r27, r31
     c8c:	11 f4       	brne	.+4      	; 0xc92 <__fp_round+0x18>
     c8e:	60 ff       	sbrs	r22, 0
     c90:	04 c0       	rjmp	.+8      	; 0xc9a <__fp_round+0x20>
     c92:	6f 5f       	subi	r22, 0xFF	; 255
     c94:	7f 4f       	sbci	r23, 0xFF	; 255
     c96:	8f 4f       	sbci	r24, 0xFF	; 255
     c98:	9f 4f       	sbci	r25, 0xFF	; 255
     c9a:	08 95       	ret

00000c9c <__fp_split3>:
     c9c:	57 fd       	sbrc	r21, 7
     c9e:	90 58       	subi	r25, 0x80	; 128
     ca0:	44 0f       	add	r20, r20
     ca2:	55 1f       	adc	r21, r21
     ca4:	59 f0       	breq	.+22     	; 0xcbc <__fp_splitA+0x10>
     ca6:	5f 3f       	cpi	r21, 0xFF	; 255
     ca8:	71 f0       	breq	.+28     	; 0xcc6 <__fp_splitA+0x1a>
     caa:	47 95       	ror	r20

00000cac <__fp_splitA>:
     cac:	88 0f       	add	r24, r24
     cae:	97 fb       	bst	r25, 7
     cb0:	99 1f       	adc	r25, r25
     cb2:	61 f0       	breq	.+24     	; 0xccc <__fp_splitA+0x20>
     cb4:	9f 3f       	cpi	r25, 0xFF	; 255
     cb6:	79 f0       	breq	.+30     	; 0xcd6 <__fp_splitA+0x2a>
     cb8:	87 95       	ror	r24
     cba:	08 95       	ret
     cbc:	12 16       	cp	r1, r18
     cbe:	13 06       	cpc	r1, r19
     cc0:	14 06       	cpc	r1, r20
     cc2:	55 1f       	adc	r21, r21
     cc4:	f2 cf       	rjmp	.-28     	; 0xcaa <__fp_split3+0xe>
     cc6:	46 95       	lsr	r20
     cc8:	f1 df       	rcall	.-30     	; 0xcac <__fp_splitA>
     cca:	08 c0       	rjmp	.+16     	; 0xcdc <__fp_splitA+0x30>
     ccc:	16 16       	cp	r1, r22
     cce:	17 06       	cpc	r1, r23
     cd0:	18 06       	cpc	r1, r24
     cd2:	99 1f       	adc	r25, r25
     cd4:	f1 cf       	rjmp	.-30     	; 0xcb8 <__fp_splitA+0xc>
     cd6:	86 95       	lsr	r24
     cd8:	71 05       	cpc	r23, r1
     cda:	61 05       	cpc	r22, r1
     cdc:	08 94       	sec
     cde:	08 95       	ret

00000ce0 <__fp_zero>:
     ce0:	e8 94       	clt

00000ce2 <__fp_szero>:
     ce2:	bb 27       	eor	r27, r27
     ce4:	66 27       	eor	r22, r22
     ce6:	77 27       	eor	r23, r23
     ce8:	cb 01       	movw	r24, r22
     cea:	97 f9       	bld	r25, 7
     cec:	08 95       	ret

00000cee <__gesf2>:
     cee:	0e 94 02 06 	call	0xc04	; 0xc04 <__fp_cmp>
     cf2:	08 f4       	brcc	.+2      	; 0xcf6 <__gesf2+0x8>
     cf4:	8f ef       	ldi	r24, 0xFF	; 255
     cf6:	08 95       	ret

00000cf8 <__mulsf3>:
     cf8:	0e 94 8f 06 	call	0xd1e	; 0xd1e <__mulsf3x>
     cfc:	0c 94 3d 06 	jmp	0xc7a	; 0xc7a <__fp_round>
     d00:	0e 94 2f 06 	call	0xc5e	; 0xc5e <__fp_pscA>
     d04:	38 f0       	brcs	.+14     	; 0xd14 <__mulsf3+0x1c>
     d06:	0e 94 36 06 	call	0xc6c	; 0xc6c <__fp_pscB>
     d0a:	20 f0       	brcs	.+8      	; 0xd14 <__mulsf3+0x1c>
     d0c:	95 23       	and	r25, r21
     d0e:	11 f0       	breq	.+4      	; 0xd14 <__mulsf3+0x1c>
     d10:	0c 94 26 06 	jmp	0xc4c	; 0xc4c <__fp_inf>
     d14:	0c 94 2c 06 	jmp	0xc58	; 0xc58 <__fp_nan>
     d18:	11 24       	eor	r1, r1
     d1a:	0c 94 71 06 	jmp	0xce2	; 0xce2 <__fp_szero>

00000d1e <__mulsf3x>:
     d1e:	0e 94 4e 06 	call	0xc9c	; 0xc9c <__fp_split3>
     d22:	70 f3       	brcs	.-36     	; 0xd00 <__mulsf3+0x8>

00000d24 <__mulsf3_pse>:
     d24:	95 9f       	mul	r25, r21
     d26:	c1 f3       	breq	.-16     	; 0xd18 <__mulsf3+0x20>
     d28:	95 0f       	add	r25, r21
     d2a:	50 e0       	ldi	r21, 0x00	; 0
     d2c:	55 1f       	adc	r21, r21
     d2e:	62 9f       	mul	r22, r18
     d30:	f0 01       	movw	r30, r0
     d32:	72 9f       	mul	r23, r18
     d34:	bb 27       	eor	r27, r27
     d36:	f0 0d       	add	r31, r0
     d38:	b1 1d       	adc	r27, r1
     d3a:	63 9f       	mul	r22, r19
     d3c:	aa 27       	eor	r26, r26
     d3e:	f0 0d       	add	r31, r0
     d40:	b1 1d       	adc	r27, r1
     d42:	aa 1f       	adc	r26, r26
     d44:	64 9f       	mul	r22, r20
     d46:	66 27       	eor	r22, r22
     d48:	b0 0d       	add	r27, r0
     d4a:	a1 1d       	adc	r26, r1
     d4c:	66 1f       	adc	r22, r22
     d4e:	82 9f       	mul	r24, r18
     d50:	22 27       	eor	r18, r18
     d52:	b0 0d       	add	r27, r0
     d54:	a1 1d       	adc	r26, r1
     d56:	62 1f       	adc	r22, r18
     d58:	73 9f       	mul	r23, r19
     d5a:	b0 0d       	add	r27, r0
     d5c:	a1 1d       	adc	r26, r1
     d5e:	62 1f       	adc	r22, r18
     d60:	83 9f       	mul	r24, r19
     d62:	a0 0d       	add	r26, r0
     d64:	61 1d       	adc	r22, r1
     d66:	22 1f       	adc	r18, r18
     d68:	74 9f       	mul	r23, r20
     d6a:	33 27       	eor	r19, r19
     d6c:	a0 0d       	add	r26, r0
     d6e:	61 1d       	adc	r22, r1
     d70:	23 1f       	adc	r18, r19
     d72:	84 9f       	mul	r24, r20
     d74:	60 0d       	add	r22, r0
     d76:	21 1d       	adc	r18, r1
     d78:	82 2f       	mov	r24, r18
     d7a:	76 2f       	mov	r23, r22
     d7c:	6a 2f       	mov	r22, r26
     d7e:	11 24       	eor	r1, r1
     d80:	9f 57       	subi	r25, 0x7F	; 127
     d82:	50 40       	sbci	r21, 0x00	; 0
     d84:	9a f0       	brmi	.+38     	; 0xdac <__mulsf3_pse+0x88>
     d86:	f1 f0       	breq	.+60     	; 0xdc4 <__mulsf3_pse+0xa0>
     d88:	88 23       	and	r24, r24
     d8a:	4a f0       	brmi	.+18     	; 0xd9e <__mulsf3_pse+0x7a>
     d8c:	ee 0f       	add	r30, r30
     d8e:	ff 1f       	adc	r31, r31
     d90:	bb 1f       	adc	r27, r27
     d92:	66 1f       	adc	r22, r22
     d94:	77 1f       	adc	r23, r23
     d96:	88 1f       	adc	r24, r24
     d98:	91 50       	subi	r25, 0x01	; 1
     d9a:	50 40       	sbci	r21, 0x00	; 0
     d9c:	a9 f7       	brne	.-22     	; 0xd88 <__mulsf3_pse+0x64>
     d9e:	9e 3f       	cpi	r25, 0xFE	; 254
     da0:	51 05       	cpc	r21, r1
     da2:	80 f0       	brcs	.+32     	; 0xdc4 <__mulsf3_pse+0xa0>
     da4:	0c 94 26 06 	jmp	0xc4c	; 0xc4c <__fp_inf>
     da8:	0c 94 71 06 	jmp	0xce2	; 0xce2 <__fp_szero>
     dac:	5f 3f       	cpi	r21, 0xFF	; 255
     dae:	e4 f3       	brlt	.-8      	; 0xda8 <__mulsf3_pse+0x84>
     db0:	98 3e       	cpi	r25, 0xE8	; 232
     db2:	d4 f3       	brlt	.-12     	; 0xda8 <__mulsf3_pse+0x84>
     db4:	86 95       	lsr	r24
     db6:	77 95       	ror	r23
     db8:	67 95       	ror	r22
     dba:	b7 95       	ror	r27
     dbc:	f7 95       	ror	r31
     dbe:	e7 95       	ror	r30
     dc0:	9f 5f       	subi	r25, 0xFF	; 255
     dc2:	c1 f7       	brne	.-16     	; 0xdb4 <__mulsf3_pse+0x90>
     dc4:	fe 2b       	or	r31, r30
     dc6:	88 0f       	add	r24, r24
     dc8:	91 1d       	adc	r25, r1
     dca:	96 95       	lsr	r25
     dcc:	87 95       	ror	r24
     dce:	97 f9       	bld	r25, 7
     dd0:	08 95       	ret

00000dd2 <vfprintf>:
     dd2:	a3 e1       	ldi	r26, 0x13	; 19
     dd4:	b0 e0       	ldi	r27, 0x00	; 0
     dd6:	ef ee       	ldi	r30, 0xEF	; 239
     dd8:	f6 e0       	ldi	r31, 0x06	; 6
     dda:	0c 94 87 0a 	jmp	0x150e	; 0x150e <__prologue_saves__>
     dde:	6c 01       	movw	r12, r24
     de0:	4b 01       	movw	r8, r22
     de2:	2a 01       	movw	r4, r20
     de4:	fc 01       	movw	r30, r24
     de6:	17 82       	std	Z+7, r1	; 0x07
     de8:	16 82       	std	Z+6, r1	; 0x06
     dea:	83 81       	ldd	r24, Z+3	; 0x03
     dec:	81 ff       	sbrs	r24, 1
     dee:	43 c3       	rjmp	.+1670   	; 0x1476 <vfprintf+0x6a4>
     df0:	ae 01       	movw	r20, r28
     df2:	4f 5f       	subi	r20, 0xFF	; 255
     df4:	5f 4f       	sbci	r21, 0xFF	; 255
     df6:	3a 01       	movw	r6, r20
     df8:	f6 01       	movw	r30, r12
     dfa:	93 81       	ldd	r25, Z+3	; 0x03
     dfc:	f4 01       	movw	r30, r8
     dfe:	93 fd       	sbrc	r25, 3
     e00:	85 91       	lpm	r24, Z+
     e02:	93 ff       	sbrs	r25, 3
     e04:	81 91       	ld	r24, Z+
     e06:	4f 01       	movw	r8, r30
     e08:	88 23       	and	r24, r24
     e0a:	09 f4       	brne	.+2      	; 0xe0e <vfprintf+0x3c>
     e0c:	30 c3       	rjmp	.+1632   	; 0x146e <vfprintf+0x69c>
     e0e:	85 32       	cpi	r24, 0x25	; 37
     e10:	39 f4       	brne	.+14     	; 0xe20 <vfprintf+0x4e>
     e12:	93 fd       	sbrc	r25, 3
     e14:	85 91       	lpm	r24, Z+
     e16:	93 ff       	sbrs	r25, 3
     e18:	81 91       	ld	r24, Z+
     e1a:	4f 01       	movw	r8, r30
     e1c:	85 32       	cpi	r24, 0x25	; 37
     e1e:	39 f4       	brne	.+14     	; 0xe2e <vfprintf+0x5c>
     e20:	b6 01       	movw	r22, r12
     e22:	90 e0       	ldi	r25, 0x00	; 0
     e24:	0e 94 b2 0b 	call	0x1764	; 0x1764 <fputc>
     e28:	52 01       	movw	r10, r4
     e2a:	25 01       	movw	r4, r10
     e2c:	e5 cf       	rjmp	.-54     	; 0xdf8 <vfprintf+0x26>
     e2e:	10 e0       	ldi	r17, 0x00	; 0
     e30:	f1 2c       	mov	r15, r1
     e32:	20 e0       	ldi	r18, 0x00	; 0
     e34:	20 32       	cpi	r18, 0x20	; 32
     e36:	a0 f4       	brcc	.+40     	; 0xe60 <vfprintf+0x8e>
     e38:	8b 32       	cpi	r24, 0x2B	; 43
     e3a:	69 f0       	breq	.+26     	; 0xe56 <vfprintf+0x84>
     e3c:	30 f4       	brcc	.+12     	; 0xe4a <vfprintf+0x78>
     e3e:	80 32       	cpi	r24, 0x20	; 32
     e40:	59 f0       	breq	.+22     	; 0xe58 <vfprintf+0x86>
     e42:	83 32       	cpi	r24, 0x23	; 35
     e44:	69 f4       	brne	.+26     	; 0xe60 <vfprintf+0x8e>
     e46:	20 61       	ori	r18, 0x10	; 16
     e48:	2c c0       	rjmp	.+88     	; 0xea2 <vfprintf+0xd0>
     e4a:	8d 32       	cpi	r24, 0x2D	; 45
     e4c:	39 f0       	breq	.+14     	; 0xe5c <vfprintf+0x8a>
     e4e:	80 33       	cpi	r24, 0x30	; 48
     e50:	39 f4       	brne	.+14     	; 0xe60 <vfprintf+0x8e>
     e52:	21 60       	ori	r18, 0x01	; 1
     e54:	26 c0       	rjmp	.+76     	; 0xea2 <vfprintf+0xd0>
     e56:	22 60       	ori	r18, 0x02	; 2
     e58:	24 60       	ori	r18, 0x04	; 4
     e5a:	23 c0       	rjmp	.+70     	; 0xea2 <vfprintf+0xd0>
     e5c:	28 60       	ori	r18, 0x08	; 8
     e5e:	21 c0       	rjmp	.+66     	; 0xea2 <vfprintf+0xd0>
     e60:	27 fd       	sbrc	r18, 7
     e62:	27 c0       	rjmp	.+78     	; 0xeb2 <vfprintf+0xe0>
     e64:	30 ed       	ldi	r19, 0xD0	; 208
     e66:	38 0f       	add	r19, r24
     e68:	3a 30       	cpi	r19, 0x0A	; 10
     e6a:	78 f4       	brcc	.+30     	; 0xe8a <vfprintf+0xb8>
     e6c:	26 ff       	sbrs	r18, 6
     e6e:	06 c0       	rjmp	.+12     	; 0xe7c <vfprintf+0xaa>
     e70:	fa e0       	ldi	r31, 0x0A	; 10
     e72:	1f 9f       	mul	r17, r31
     e74:	30 0d       	add	r19, r0
     e76:	11 24       	eor	r1, r1
     e78:	13 2f       	mov	r17, r19
     e7a:	13 c0       	rjmp	.+38     	; 0xea2 <vfprintf+0xd0>
     e7c:	4a e0       	ldi	r20, 0x0A	; 10
     e7e:	f4 9e       	mul	r15, r20
     e80:	30 0d       	add	r19, r0
     e82:	11 24       	eor	r1, r1
     e84:	f3 2e       	mov	r15, r19
     e86:	20 62       	ori	r18, 0x20	; 32
     e88:	0c c0       	rjmp	.+24     	; 0xea2 <vfprintf+0xd0>
     e8a:	8e 32       	cpi	r24, 0x2E	; 46
     e8c:	21 f4       	brne	.+8      	; 0xe96 <vfprintf+0xc4>
     e8e:	26 fd       	sbrc	r18, 6
     e90:	ee c2       	rjmp	.+1500   	; 0x146e <vfprintf+0x69c>
     e92:	20 64       	ori	r18, 0x40	; 64
     e94:	06 c0       	rjmp	.+12     	; 0xea2 <vfprintf+0xd0>
     e96:	8c 36       	cpi	r24, 0x6C	; 108
     e98:	11 f4       	brne	.+4      	; 0xe9e <vfprintf+0xcc>
     e9a:	20 68       	ori	r18, 0x80	; 128
     e9c:	02 c0       	rjmp	.+4      	; 0xea2 <vfprintf+0xd0>
     e9e:	88 36       	cpi	r24, 0x68	; 104
     ea0:	41 f4       	brne	.+16     	; 0xeb2 <vfprintf+0xe0>
     ea2:	f4 01       	movw	r30, r8
     ea4:	93 fd       	sbrc	r25, 3
     ea6:	85 91       	lpm	r24, Z+
     ea8:	93 ff       	sbrs	r25, 3
     eaa:	81 91       	ld	r24, Z+
     eac:	4f 01       	movw	r8, r30
     eae:	81 11       	cpse	r24, r1
     eb0:	c1 cf       	rjmp	.-126    	; 0xe34 <vfprintf+0x62>
     eb2:	9b eb       	ldi	r25, 0xBB	; 187
     eb4:	98 0f       	add	r25, r24
     eb6:	93 30       	cpi	r25, 0x03	; 3
     eb8:	18 f4       	brcc	.+6      	; 0xec0 <vfprintf+0xee>
     eba:	20 61       	ori	r18, 0x10	; 16
     ebc:	80 5e       	subi	r24, 0xE0	; 224
     ebe:	06 c0       	rjmp	.+12     	; 0xecc <vfprintf+0xfa>
     ec0:	9b e9       	ldi	r25, 0x9B	; 155
     ec2:	98 0f       	add	r25, r24
     ec4:	93 30       	cpi	r25, 0x03	; 3
     ec6:	08 f0       	brcs	.+2      	; 0xeca <vfprintf+0xf8>
     ec8:	71 c1       	rjmp	.+738    	; 0x11ac <vfprintf+0x3da>
     eca:	2f 7e       	andi	r18, 0xEF	; 239
     ecc:	26 ff       	sbrs	r18, 6
     ece:	16 e0       	ldi	r17, 0x06	; 6
     ed0:	2f 73       	andi	r18, 0x3F	; 63
     ed2:	32 2e       	mov	r3, r18
     ed4:	85 36       	cpi	r24, 0x65	; 101
     ed6:	19 f4       	brne	.+6      	; 0xede <vfprintf+0x10c>
     ed8:	20 64       	ori	r18, 0x40	; 64
     eda:	32 2e       	mov	r3, r18
     edc:	08 c0       	rjmp	.+16     	; 0xeee <vfprintf+0x11c>
     ede:	86 36       	cpi	r24, 0x66	; 102
     ee0:	21 f4       	brne	.+8      	; 0xeea <vfprintf+0x118>
     ee2:	f2 2f       	mov	r31, r18
     ee4:	f0 68       	ori	r31, 0x80	; 128
     ee6:	3f 2e       	mov	r3, r31
     ee8:	02 c0       	rjmp	.+4      	; 0xeee <vfprintf+0x11c>
     eea:	11 11       	cpse	r17, r1
     eec:	11 50       	subi	r17, 0x01	; 1
     eee:	37 fe       	sbrs	r3, 7
     ef0:	07 c0       	rjmp	.+14     	; 0xf00 <vfprintf+0x12e>
     ef2:	1c 33       	cpi	r17, 0x3C	; 60
     ef4:	50 f4       	brcc	.+20     	; 0xf0a <vfprintf+0x138>
     ef6:	ee 24       	eor	r14, r14
     ef8:	e3 94       	inc	r14
     efa:	e1 0e       	add	r14, r17
     efc:	27 e0       	ldi	r18, 0x07	; 7
     efe:	0b c0       	rjmp	.+22     	; 0xf16 <vfprintf+0x144>
     f00:	18 30       	cpi	r17, 0x08	; 8
     f02:	38 f0       	brcs	.+14     	; 0xf12 <vfprintf+0x140>
     f04:	27 e0       	ldi	r18, 0x07	; 7
     f06:	17 e0       	ldi	r17, 0x07	; 7
     f08:	05 c0       	rjmp	.+10     	; 0xf14 <vfprintf+0x142>
     f0a:	27 e0       	ldi	r18, 0x07	; 7
     f0c:	4c e3       	ldi	r20, 0x3C	; 60
     f0e:	e4 2e       	mov	r14, r20
     f10:	02 c0       	rjmp	.+4      	; 0xf16 <vfprintf+0x144>
     f12:	21 2f       	mov	r18, r17
     f14:	e1 2c       	mov	r14, r1
     f16:	52 01       	movw	r10, r4
     f18:	44 e0       	ldi	r20, 0x04	; 4
     f1a:	a4 0e       	add	r10, r20
     f1c:	b1 1c       	adc	r11, r1
     f1e:	f2 01       	movw	r30, r4
     f20:	60 81       	ld	r22, Z
     f22:	71 81       	ldd	r23, Z+1	; 0x01
     f24:	82 81       	ldd	r24, Z+2	; 0x02
     f26:	93 81       	ldd	r25, Z+3	; 0x03
     f28:	0e 2d       	mov	r16, r14
     f2a:	a3 01       	movw	r20, r6
     f2c:	0e 94 c4 0a 	call	0x1588	; 0x1588 <__ftoa_engine>
     f30:	2c 01       	movw	r4, r24
     f32:	09 81       	ldd	r16, Y+1	; 0x01
     f34:	00 ff       	sbrs	r16, 0
     f36:	02 c0       	rjmp	.+4      	; 0xf3c <vfprintf+0x16a>
     f38:	03 ff       	sbrs	r16, 3
     f3a:	07 c0       	rjmp	.+14     	; 0xf4a <vfprintf+0x178>
     f3c:	31 fc       	sbrc	r3, 1
     f3e:	08 c0       	rjmp	.+16     	; 0xf50 <vfprintf+0x17e>
     f40:	32 fe       	sbrs	r3, 2
     f42:	09 c0       	rjmp	.+18     	; 0xf56 <vfprintf+0x184>
     f44:	30 e2       	ldi	r19, 0x20	; 32
     f46:	23 2e       	mov	r2, r19
     f48:	07 c0       	rjmp	.+14     	; 0xf58 <vfprintf+0x186>
     f4a:	2d e2       	ldi	r18, 0x2D	; 45
     f4c:	22 2e       	mov	r2, r18
     f4e:	04 c0       	rjmp	.+8      	; 0xf58 <vfprintf+0x186>
     f50:	9b e2       	ldi	r25, 0x2B	; 43
     f52:	29 2e       	mov	r2, r25
     f54:	01 c0       	rjmp	.+2      	; 0xf58 <vfprintf+0x186>
     f56:	21 2c       	mov	r2, r1
     f58:	80 2f       	mov	r24, r16
     f5a:	8c 70       	andi	r24, 0x0C	; 12
     f5c:	19 f0       	breq	.+6      	; 0xf64 <vfprintf+0x192>
     f5e:	21 10       	cpse	r2, r1
     f60:	68 c2       	rjmp	.+1232   	; 0x1432 <vfprintf+0x660>
     f62:	a8 c2       	rjmp	.+1360   	; 0x14b4 <vfprintf+0x6e2>
     f64:	37 fe       	sbrs	r3, 7
     f66:	0f c0       	rjmp	.+30     	; 0xf86 <vfprintf+0x1b4>
     f68:	e4 0c       	add	r14, r4
     f6a:	04 ff       	sbrs	r16, 4
     f6c:	04 c0       	rjmp	.+8      	; 0xf76 <vfprintf+0x1a4>
     f6e:	8a 81       	ldd	r24, Y+2	; 0x02
     f70:	81 33       	cpi	r24, 0x31	; 49
     f72:	09 f4       	brne	.+2      	; 0xf76 <vfprintf+0x1a4>
     f74:	ea 94       	dec	r14
     f76:	1e 14       	cp	r1, r14
     f78:	74 f5       	brge	.+92     	; 0xfd6 <vfprintf+0x204>
     f7a:	f8 e0       	ldi	r31, 0x08	; 8
     f7c:	fe 15       	cp	r31, r14
     f7e:	78 f5       	brcc	.+94     	; 0xfde <vfprintf+0x20c>
     f80:	88 e0       	ldi	r24, 0x08	; 8
     f82:	e8 2e       	mov	r14, r24
     f84:	2c c0       	rjmp	.+88     	; 0xfde <vfprintf+0x20c>
     f86:	36 fc       	sbrc	r3, 6
     f88:	2a c0       	rjmp	.+84     	; 0xfde <vfprintf+0x20c>
     f8a:	81 2f       	mov	r24, r17
     f8c:	90 e0       	ldi	r25, 0x00	; 0
     f8e:	84 15       	cp	r24, r4
     f90:	95 05       	cpc	r25, r5
     f92:	9c f0       	brlt	.+38     	; 0xfba <vfprintf+0x1e8>
     f94:	2c ef       	ldi	r18, 0xFC	; 252
     f96:	42 16       	cp	r4, r18
     f98:	2f ef       	ldi	r18, 0xFF	; 255
     f9a:	52 06       	cpc	r5, r18
     f9c:	74 f0       	brlt	.+28     	; 0xfba <vfprintf+0x1e8>
     f9e:	43 2d       	mov	r20, r3
     fa0:	40 68       	ori	r20, 0x80	; 128
     fa2:	34 2e       	mov	r3, r20
     fa4:	0a c0       	rjmp	.+20     	; 0xfba <vfprintf+0x1e8>
     fa6:	e2 e0       	ldi	r30, 0x02	; 2
     fa8:	f0 e0       	ldi	r31, 0x00	; 0
     faa:	ec 0f       	add	r30, r28
     fac:	fd 1f       	adc	r31, r29
     fae:	e1 0f       	add	r30, r17
     fb0:	f1 1d       	adc	r31, r1
     fb2:	80 81       	ld	r24, Z
     fb4:	80 33       	cpi	r24, 0x30	; 48
     fb6:	19 f4       	brne	.+6      	; 0xfbe <vfprintf+0x1ec>
     fb8:	11 50       	subi	r17, 0x01	; 1
     fba:	11 11       	cpse	r17, r1
     fbc:	f4 cf       	rjmp	.-24     	; 0xfa6 <vfprintf+0x1d4>
     fbe:	37 fe       	sbrs	r3, 7
     fc0:	0e c0       	rjmp	.+28     	; 0xfde <vfprintf+0x20c>
     fc2:	ee 24       	eor	r14, r14
     fc4:	e3 94       	inc	r14
     fc6:	e1 0e       	add	r14, r17
     fc8:	81 2f       	mov	r24, r17
     fca:	90 e0       	ldi	r25, 0x00	; 0
     fcc:	48 16       	cp	r4, r24
     fce:	59 06       	cpc	r5, r25
     fd0:	2c f4       	brge	.+10     	; 0xfdc <vfprintf+0x20a>
     fd2:	14 19       	sub	r17, r4
     fd4:	04 c0       	rjmp	.+8      	; 0xfde <vfprintf+0x20c>
     fd6:	ee 24       	eor	r14, r14
     fd8:	e3 94       	inc	r14
     fda:	01 c0       	rjmp	.+2      	; 0xfde <vfprintf+0x20c>
     fdc:	10 e0       	ldi	r17, 0x00	; 0
     fde:	37 fe       	sbrs	r3, 7
     fe0:	06 c0       	rjmp	.+12     	; 0xfee <vfprintf+0x21c>
     fe2:	14 14       	cp	r1, r4
     fe4:	15 04       	cpc	r1, r5
     fe6:	34 f4       	brge	.+12     	; 0xff4 <vfprintf+0x222>
     fe8:	c2 01       	movw	r24, r4
     fea:	01 96       	adiw	r24, 0x01	; 1
     fec:	05 c0       	rjmp	.+10     	; 0xff8 <vfprintf+0x226>
     fee:	85 e0       	ldi	r24, 0x05	; 5
     ff0:	90 e0       	ldi	r25, 0x00	; 0
     ff2:	02 c0       	rjmp	.+4      	; 0xff8 <vfprintf+0x226>
     ff4:	81 e0       	ldi	r24, 0x01	; 1
     ff6:	90 e0       	ldi	r25, 0x00	; 0
     ff8:	21 10       	cpse	r2, r1
     ffa:	01 96       	adiw	r24, 0x01	; 1
     ffc:	11 23       	and	r17, r17
     ffe:	31 f0       	breq	.+12     	; 0x100c <vfprintf+0x23a>
    1000:	21 2f       	mov	r18, r17
    1002:	30 e0       	ldi	r19, 0x00	; 0
    1004:	2f 5f       	subi	r18, 0xFF	; 255
    1006:	3f 4f       	sbci	r19, 0xFF	; 255
    1008:	82 0f       	add	r24, r18
    100a:	93 1f       	adc	r25, r19
    100c:	2f 2d       	mov	r18, r15
    100e:	30 e0       	ldi	r19, 0x00	; 0
    1010:	82 17       	cp	r24, r18
    1012:	93 07       	cpc	r25, r19
    1014:	14 f4       	brge	.+4      	; 0x101a <vfprintf+0x248>
    1016:	f8 1a       	sub	r15, r24
    1018:	01 c0       	rjmp	.+2      	; 0x101c <vfprintf+0x24a>
    101a:	f1 2c       	mov	r15, r1
    101c:	83 2d       	mov	r24, r3
    101e:	89 70       	andi	r24, 0x09	; 9
    1020:	49 f4       	brne	.+18     	; 0x1034 <vfprintf+0x262>
    1022:	ff 20       	and	r15, r15
    1024:	39 f0       	breq	.+14     	; 0x1034 <vfprintf+0x262>
    1026:	b6 01       	movw	r22, r12
    1028:	80 e2       	ldi	r24, 0x20	; 32
    102a:	90 e0       	ldi	r25, 0x00	; 0
    102c:	0e 94 b2 0b 	call	0x1764	; 0x1764 <fputc>
    1030:	fa 94       	dec	r15
    1032:	f7 cf       	rjmp	.-18     	; 0x1022 <vfprintf+0x250>
    1034:	22 20       	and	r2, r2
    1036:	29 f0       	breq	.+10     	; 0x1042 <vfprintf+0x270>
    1038:	b6 01       	movw	r22, r12
    103a:	82 2d       	mov	r24, r2
    103c:	90 e0       	ldi	r25, 0x00	; 0
    103e:	0e 94 b2 0b 	call	0x1764	; 0x1764 <fputc>
    1042:	33 fc       	sbrc	r3, 3
    1044:	09 c0       	rjmp	.+18     	; 0x1058 <vfprintf+0x286>
    1046:	ff 20       	and	r15, r15
    1048:	39 f0       	breq	.+14     	; 0x1058 <vfprintf+0x286>
    104a:	b6 01       	movw	r22, r12
    104c:	80 e3       	ldi	r24, 0x30	; 48
    104e:	90 e0       	ldi	r25, 0x00	; 0
    1050:	0e 94 b2 0b 	call	0x1764	; 0x1764 <fputc>
    1054:	fa 94       	dec	r15
    1056:	f7 cf       	rjmp	.-18     	; 0x1046 <vfprintf+0x274>
    1058:	37 fe       	sbrs	r3, 7
    105a:	5a c0       	rjmp	.+180    	; 0x1110 <vfprintf+0x33e>
    105c:	94 2d       	mov	r25, r4
    105e:	85 2d       	mov	r24, r5
    1060:	57 fe       	sbrs	r5, 7
    1062:	02 c0       	rjmp	.+4      	; 0x1068 <vfprintf+0x296>
    1064:	90 e0       	ldi	r25, 0x00	; 0
    1066:	80 e0       	ldi	r24, 0x00	; 0
    1068:	29 2e       	mov	r2, r25
    106a:	38 2e       	mov	r3, r24
    106c:	20 e0       	ldi	r18, 0x00	; 0
    106e:	30 e0       	ldi	r19, 0x00	; 0
    1070:	a2 01       	movw	r20, r4
    1072:	4e 19       	sub	r20, r14
    1074:	51 09       	sbc	r21, r1
    1076:	5d 87       	std	Y+13, r21	; 0x0d
    1078:	4c 87       	std	Y+12, r20	; 0x0c
    107a:	a2 01       	movw	r20, r4
    107c:	42 19       	sub	r20, r2
    107e:	53 09       	sbc	r21, r3
    1080:	5f 87       	std	Y+15, r21	; 0x0f
    1082:	4e 87       	std	Y+14, r20	; 0x0e
    1084:	61 2f       	mov	r22, r17
    1086:	70 e0       	ldi	r23, 0x00	; 0
    1088:	44 27       	eor	r20, r20
    108a:	55 27       	eor	r21, r21
    108c:	46 1b       	sub	r20, r22
    108e:	57 0b       	sbc	r21, r23
    1090:	59 8b       	std	Y+17, r21	; 0x11
    1092:	48 8b       	std	Y+16, r20	; 0x10
    1094:	5f ef       	ldi	r21, 0xFF	; 255
    1096:	25 16       	cp	r2, r21
    1098:	35 06       	cpc	r3, r21
    109a:	49 f4       	brne	.+18     	; 0x10ae <vfprintf+0x2dc>
    109c:	b6 01       	movw	r22, r12
    109e:	8e e2       	ldi	r24, 0x2E	; 46
    10a0:	90 e0       	ldi	r25, 0x00	; 0
    10a2:	2a 8b       	std	Y+18, r18	; 0x12
    10a4:	3b 8b       	std	Y+19, r19	; 0x13
    10a6:	0e 94 b2 0b 	call	0x1764	; 0x1764 <fputc>
    10aa:	3b 89       	ldd	r19, Y+19	; 0x13
    10ac:	2a 89       	ldd	r18, Y+18	; 0x12
    10ae:	42 14       	cp	r4, r2
    10b0:	53 04       	cpc	r5, r3
    10b2:	6c f0       	brlt	.+26     	; 0x10ce <vfprintf+0x2fc>
    10b4:	4c 85       	ldd	r20, Y+12	; 0x0c
    10b6:	5d 85       	ldd	r21, Y+13	; 0x0d
    10b8:	42 15       	cp	r20, r2
    10ba:	53 05       	cpc	r21, r3
    10bc:	44 f4       	brge	.+16     	; 0x10ce <vfprintf+0x2fc>
    10be:	ee 85       	ldd	r30, Y+14	; 0x0e
    10c0:	ff 85       	ldd	r31, Y+15	; 0x0f
    10c2:	e2 0f       	add	r30, r18
    10c4:	f3 1f       	adc	r31, r19
    10c6:	e6 0d       	add	r30, r6
    10c8:	f7 1d       	adc	r31, r7
    10ca:	81 81       	ldd	r24, Z+1	; 0x01
    10cc:	01 c0       	rjmp	.+2      	; 0x10d0 <vfprintf+0x2fe>
    10ce:	80 e3       	ldi	r24, 0x30	; 48
    10d0:	51 e0       	ldi	r21, 0x01	; 1
    10d2:	25 1a       	sub	r2, r21
    10d4:	31 08       	sbc	r3, r1
    10d6:	2f 5f       	subi	r18, 0xFF	; 255
    10d8:	3f 4f       	sbci	r19, 0xFF	; 255
    10da:	48 89       	ldd	r20, Y+16	; 0x10
    10dc:	59 89       	ldd	r21, Y+17	; 0x11
    10de:	24 16       	cp	r2, r20
    10e0:	35 06       	cpc	r3, r21
    10e2:	4c f0       	brlt	.+18     	; 0x10f6 <vfprintf+0x324>
    10e4:	b6 01       	movw	r22, r12
    10e6:	90 e0       	ldi	r25, 0x00	; 0
    10e8:	2a 8b       	std	Y+18, r18	; 0x12
    10ea:	3b 8b       	std	Y+19, r19	; 0x13
    10ec:	0e 94 b2 0b 	call	0x1764	; 0x1764 <fputc>
    10f0:	2a 89       	ldd	r18, Y+18	; 0x12
    10f2:	3b 89       	ldd	r19, Y+19	; 0x13
    10f4:	cf cf       	rjmp	.-98     	; 0x1094 <vfprintf+0x2c2>
    10f6:	24 14       	cp	r2, r4
    10f8:	35 04       	cpc	r3, r5
    10fa:	39 f4       	brne	.+14     	; 0x110a <vfprintf+0x338>
    10fc:	9a 81       	ldd	r25, Y+2	; 0x02
    10fe:	96 33       	cpi	r25, 0x36	; 54
    1100:	18 f4       	brcc	.+6      	; 0x1108 <vfprintf+0x336>
    1102:	95 33       	cpi	r25, 0x35	; 53
    1104:	11 f4       	brne	.+4      	; 0x110a <vfprintf+0x338>
    1106:	04 ff       	sbrs	r16, 4
    1108:	81 e3       	ldi	r24, 0x31	; 49
    110a:	b6 01       	movw	r22, r12
    110c:	90 e0       	ldi	r25, 0x00	; 0
    110e:	4b c0       	rjmp	.+150    	; 0x11a6 <vfprintf+0x3d4>
    1110:	8a 81       	ldd	r24, Y+2	; 0x02
    1112:	81 33       	cpi	r24, 0x31	; 49
    1114:	09 f0       	breq	.+2      	; 0x1118 <vfprintf+0x346>
    1116:	0f 7e       	andi	r16, 0xEF	; 239
    1118:	b6 01       	movw	r22, r12
    111a:	90 e0       	ldi	r25, 0x00	; 0
    111c:	0e 94 b2 0b 	call	0x1764	; 0x1764 <fputc>
    1120:	11 11       	cpse	r17, r1
    1122:	05 c0       	rjmp	.+10     	; 0x112e <vfprintf+0x35c>
    1124:	34 fc       	sbrc	r3, 4
    1126:	18 c0       	rjmp	.+48     	; 0x1158 <vfprintf+0x386>
    1128:	85 e6       	ldi	r24, 0x65	; 101
    112a:	90 e0       	ldi	r25, 0x00	; 0
    112c:	17 c0       	rjmp	.+46     	; 0x115c <vfprintf+0x38a>
    112e:	b6 01       	movw	r22, r12
    1130:	8e e2       	ldi	r24, 0x2E	; 46
    1132:	90 e0       	ldi	r25, 0x00	; 0
    1134:	0e 94 b2 0b 	call	0x1764	; 0x1764 <fputc>
    1138:	82 e0       	ldi	r24, 0x02	; 2
    113a:	ee 24       	eor	r14, r14
    113c:	e3 94       	inc	r14
    113e:	e8 0e       	add	r14, r24
    1140:	f3 01       	movw	r30, r6
    1142:	e8 0f       	add	r30, r24
    1144:	f1 1d       	adc	r31, r1
    1146:	80 81       	ld	r24, Z
    1148:	b6 01       	movw	r22, r12
    114a:	90 e0       	ldi	r25, 0x00	; 0
    114c:	0e 94 b2 0b 	call	0x1764	; 0x1764 <fputc>
    1150:	11 50       	subi	r17, 0x01	; 1
    1152:	8e 2d       	mov	r24, r14
    1154:	91 f7       	brne	.-28     	; 0x113a <vfprintf+0x368>
    1156:	e6 cf       	rjmp	.-52     	; 0x1124 <vfprintf+0x352>
    1158:	85 e4       	ldi	r24, 0x45	; 69
    115a:	90 e0       	ldi	r25, 0x00	; 0
    115c:	b6 01       	movw	r22, r12
    115e:	0e 94 b2 0b 	call	0x1764	; 0x1764 <fputc>
    1162:	57 fc       	sbrc	r5, 7
    1164:	05 c0       	rjmp	.+10     	; 0x1170 <vfprintf+0x39e>
    1166:	41 14       	cp	r4, r1
    1168:	51 04       	cpc	r5, r1
    116a:	39 f4       	brne	.+14     	; 0x117a <vfprintf+0x3a8>
    116c:	04 ff       	sbrs	r16, 4
    116e:	05 c0       	rjmp	.+10     	; 0x117a <vfprintf+0x3a8>
    1170:	51 94       	neg	r5
    1172:	41 94       	neg	r4
    1174:	51 08       	sbc	r5, r1
    1176:	8d e2       	ldi	r24, 0x2D	; 45
    1178:	01 c0       	rjmp	.+2      	; 0x117c <vfprintf+0x3aa>
    117a:	8b e2       	ldi	r24, 0x2B	; 43
    117c:	b6 01       	movw	r22, r12
    117e:	90 e0       	ldi	r25, 0x00	; 0
    1180:	0e 94 b2 0b 	call	0x1764	; 0x1764 <fputc>
    1184:	80 e3       	ldi	r24, 0x30	; 48
    1186:	9a e0       	ldi	r25, 0x0A	; 10
    1188:	49 16       	cp	r4, r25
    118a:	51 04       	cpc	r5, r1
    118c:	2c f0       	brlt	.+10     	; 0x1198 <vfprintf+0x3c6>
    118e:	8f 5f       	subi	r24, 0xFF	; 255
    1190:	5a e0       	ldi	r21, 0x0A	; 10
    1192:	45 1a       	sub	r4, r21
    1194:	51 08       	sbc	r5, r1
    1196:	f7 cf       	rjmp	.-18     	; 0x1186 <vfprintf+0x3b4>
    1198:	b6 01       	movw	r22, r12
    119a:	90 e0       	ldi	r25, 0x00	; 0
    119c:	0e 94 b2 0b 	call	0x1764	; 0x1764 <fputc>
    11a0:	b6 01       	movw	r22, r12
    11a2:	c2 01       	movw	r24, r4
    11a4:	c0 96       	adiw	r24, 0x30	; 48
    11a6:	0e 94 b2 0b 	call	0x1764	; 0x1764 <fputc>
    11aa:	57 c1       	rjmp	.+686    	; 0x145a <vfprintf+0x688>
    11ac:	83 36       	cpi	r24, 0x63	; 99
    11ae:	31 f0       	breq	.+12     	; 0x11bc <vfprintf+0x3ea>
    11b0:	83 37       	cpi	r24, 0x73	; 115
    11b2:	79 f0       	breq	.+30     	; 0x11d2 <vfprintf+0x400>
    11b4:	83 35       	cpi	r24, 0x53	; 83
    11b6:	09 f0       	breq	.+2      	; 0x11ba <vfprintf+0x3e8>
    11b8:	58 c0       	rjmp	.+176    	; 0x126a <vfprintf+0x498>
    11ba:	21 c0       	rjmp	.+66     	; 0x11fe <vfprintf+0x42c>
    11bc:	52 01       	movw	r10, r4
    11be:	e2 e0       	ldi	r30, 0x02	; 2
    11c0:	ae 0e       	add	r10, r30
    11c2:	b1 1c       	adc	r11, r1
    11c4:	f2 01       	movw	r30, r4
    11c6:	80 81       	ld	r24, Z
    11c8:	89 83       	std	Y+1, r24	; 0x01
    11ca:	01 e0       	ldi	r16, 0x01	; 1
    11cc:	10 e0       	ldi	r17, 0x00	; 0
    11ce:	23 01       	movw	r4, r6
    11d0:	14 c0       	rjmp	.+40     	; 0x11fa <vfprintf+0x428>
    11d2:	52 01       	movw	r10, r4
    11d4:	f2 e0       	ldi	r31, 0x02	; 2
    11d6:	af 0e       	add	r10, r31
    11d8:	b1 1c       	adc	r11, r1
    11da:	f2 01       	movw	r30, r4
    11dc:	40 80       	ld	r4, Z
    11de:	51 80       	ldd	r5, Z+1	; 0x01
    11e0:	26 ff       	sbrs	r18, 6
    11e2:	03 c0       	rjmp	.+6      	; 0x11ea <vfprintf+0x418>
    11e4:	61 2f       	mov	r22, r17
    11e6:	70 e0       	ldi	r23, 0x00	; 0
    11e8:	02 c0       	rjmp	.+4      	; 0x11ee <vfprintf+0x41c>
    11ea:	6f ef       	ldi	r22, 0xFF	; 255
    11ec:	7f ef       	ldi	r23, 0xFF	; 255
    11ee:	c2 01       	movw	r24, r4
    11f0:	2a 8b       	std	Y+18, r18	; 0x12
    11f2:	0e 94 a7 0b 	call	0x174e	; 0x174e <strnlen>
    11f6:	8c 01       	movw	r16, r24
    11f8:	2a 89       	ldd	r18, Y+18	; 0x12
    11fa:	2f 77       	andi	r18, 0x7F	; 127
    11fc:	15 c0       	rjmp	.+42     	; 0x1228 <vfprintf+0x456>
    11fe:	52 01       	movw	r10, r4
    1200:	f2 e0       	ldi	r31, 0x02	; 2
    1202:	af 0e       	add	r10, r31
    1204:	b1 1c       	adc	r11, r1
    1206:	f2 01       	movw	r30, r4
    1208:	40 80       	ld	r4, Z
    120a:	51 80       	ldd	r5, Z+1	; 0x01
    120c:	26 ff       	sbrs	r18, 6
    120e:	03 c0       	rjmp	.+6      	; 0x1216 <vfprintf+0x444>
    1210:	61 2f       	mov	r22, r17
    1212:	70 e0       	ldi	r23, 0x00	; 0
    1214:	02 c0       	rjmp	.+4      	; 0x121a <vfprintf+0x448>
    1216:	6f ef       	ldi	r22, 0xFF	; 255
    1218:	7f ef       	ldi	r23, 0xFF	; 255
    121a:	c2 01       	movw	r24, r4
    121c:	2a 8b       	std	Y+18, r18	; 0x12
    121e:	0e 94 9c 0b 	call	0x1738	; 0x1738 <strnlen_P>
    1222:	8c 01       	movw	r16, r24
    1224:	2a 89       	ldd	r18, Y+18	; 0x12
    1226:	20 68       	ori	r18, 0x80	; 128
    1228:	32 2e       	mov	r3, r18
    122a:	23 fd       	sbrc	r18, 3
    122c:	1a c0       	rjmp	.+52     	; 0x1262 <vfprintf+0x490>
    122e:	8f 2d       	mov	r24, r15
    1230:	90 e0       	ldi	r25, 0x00	; 0
    1232:	08 17       	cp	r16, r24
    1234:	19 07       	cpc	r17, r25
    1236:	a8 f4       	brcc	.+42     	; 0x1262 <vfprintf+0x490>
    1238:	b6 01       	movw	r22, r12
    123a:	80 e2       	ldi	r24, 0x20	; 32
    123c:	90 e0       	ldi	r25, 0x00	; 0
    123e:	0e 94 b2 0b 	call	0x1764	; 0x1764 <fputc>
    1242:	fa 94       	dec	r15
    1244:	f4 cf       	rjmp	.-24     	; 0x122e <vfprintf+0x45c>
    1246:	f2 01       	movw	r30, r4
    1248:	37 fc       	sbrc	r3, 7
    124a:	85 91       	lpm	r24, Z+
    124c:	37 fe       	sbrs	r3, 7
    124e:	81 91       	ld	r24, Z+
    1250:	2f 01       	movw	r4, r30
    1252:	b6 01       	movw	r22, r12
    1254:	90 e0       	ldi	r25, 0x00	; 0
    1256:	0e 94 b2 0b 	call	0x1764	; 0x1764 <fputc>
    125a:	f1 10       	cpse	r15, r1
    125c:	fa 94       	dec	r15
    125e:	01 50       	subi	r16, 0x01	; 1
    1260:	11 09       	sbc	r17, r1
    1262:	01 15       	cp	r16, r1
    1264:	11 05       	cpc	r17, r1
    1266:	79 f7       	brne	.-34     	; 0x1246 <vfprintf+0x474>
    1268:	f8 c0       	rjmp	.+496    	; 0x145a <vfprintf+0x688>
    126a:	84 36       	cpi	r24, 0x64	; 100
    126c:	11 f0       	breq	.+4      	; 0x1272 <vfprintf+0x4a0>
    126e:	89 36       	cpi	r24, 0x69	; 105
    1270:	59 f5       	brne	.+86     	; 0x12c8 <vfprintf+0x4f6>
    1272:	52 01       	movw	r10, r4
    1274:	27 ff       	sbrs	r18, 7
    1276:	09 c0       	rjmp	.+18     	; 0x128a <vfprintf+0x4b8>
    1278:	f4 e0       	ldi	r31, 0x04	; 4
    127a:	af 0e       	add	r10, r31
    127c:	b1 1c       	adc	r11, r1
    127e:	f2 01       	movw	r30, r4
    1280:	60 81       	ld	r22, Z
    1282:	71 81       	ldd	r23, Z+1	; 0x01
    1284:	82 81       	ldd	r24, Z+2	; 0x02
    1286:	93 81       	ldd	r25, Z+3	; 0x03
    1288:	0a c0       	rjmp	.+20     	; 0x129e <vfprintf+0x4cc>
    128a:	f2 e0       	ldi	r31, 0x02	; 2
    128c:	af 0e       	add	r10, r31
    128e:	b1 1c       	adc	r11, r1
    1290:	f2 01       	movw	r30, r4
    1292:	60 81       	ld	r22, Z
    1294:	71 81       	ldd	r23, Z+1	; 0x01
    1296:	07 2e       	mov	r0, r23
    1298:	00 0c       	add	r0, r0
    129a:	88 0b       	sbc	r24, r24
    129c:	99 0b       	sbc	r25, r25
    129e:	2f 76       	andi	r18, 0x6F	; 111
    12a0:	32 2e       	mov	r3, r18
    12a2:	97 ff       	sbrs	r25, 7
    12a4:	09 c0       	rjmp	.+18     	; 0x12b8 <vfprintf+0x4e6>
    12a6:	90 95       	com	r25
    12a8:	80 95       	com	r24
    12aa:	70 95       	com	r23
    12ac:	61 95       	neg	r22
    12ae:	7f 4f       	sbci	r23, 0xFF	; 255
    12b0:	8f 4f       	sbci	r24, 0xFF	; 255
    12b2:	9f 4f       	sbci	r25, 0xFF	; 255
    12b4:	20 68       	ori	r18, 0x80	; 128
    12b6:	32 2e       	mov	r3, r18
    12b8:	2a e0       	ldi	r18, 0x0A	; 10
    12ba:	30 e0       	ldi	r19, 0x00	; 0
    12bc:	a3 01       	movw	r20, r6
    12be:	0e 94 0d 0c 	call	0x181a	; 0x181a <__ultoa_invert>
    12c2:	e8 2e       	mov	r14, r24
    12c4:	e6 18       	sub	r14, r6
    12c6:	3f c0       	rjmp	.+126    	; 0x1346 <vfprintf+0x574>
    12c8:	02 2f       	mov	r16, r18
    12ca:	85 37       	cpi	r24, 0x75	; 117
    12cc:	21 f4       	brne	.+8      	; 0x12d6 <vfprintf+0x504>
    12ce:	0f 7e       	andi	r16, 0xEF	; 239
    12d0:	2a e0       	ldi	r18, 0x0A	; 10
    12d2:	30 e0       	ldi	r19, 0x00	; 0
    12d4:	1d c0       	rjmp	.+58     	; 0x1310 <vfprintf+0x53e>
    12d6:	09 7f       	andi	r16, 0xF9	; 249
    12d8:	8f 36       	cpi	r24, 0x6F	; 111
    12da:	91 f0       	breq	.+36     	; 0x1300 <vfprintf+0x52e>
    12dc:	18 f4       	brcc	.+6      	; 0x12e4 <vfprintf+0x512>
    12de:	88 35       	cpi	r24, 0x58	; 88
    12e0:	59 f0       	breq	.+22     	; 0x12f8 <vfprintf+0x526>
    12e2:	c5 c0       	rjmp	.+394    	; 0x146e <vfprintf+0x69c>
    12e4:	80 37       	cpi	r24, 0x70	; 112
    12e6:	19 f0       	breq	.+6      	; 0x12ee <vfprintf+0x51c>
    12e8:	88 37       	cpi	r24, 0x78	; 120
    12ea:	11 f0       	breq	.+4      	; 0x12f0 <vfprintf+0x51e>
    12ec:	c0 c0       	rjmp	.+384    	; 0x146e <vfprintf+0x69c>
    12ee:	00 61       	ori	r16, 0x10	; 16
    12f0:	04 ff       	sbrs	r16, 4
    12f2:	09 c0       	rjmp	.+18     	; 0x1306 <vfprintf+0x534>
    12f4:	04 60       	ori	r16, 0x04	; 4
    12f6:	07 c0       	rjmp	.+14     	; 0x1306 <vfprintf+0x534>
    12f8:	24 ff       	sbrs	r18, 4
    12fa:	08 c0       	rjmp	.+16     	; 0x130c <vfprintf+0x53a>
    12fc:	06 60       	ori	r16, 0x06	; 6
    12fe:	06 c0       	rjmp	.+12     	; 0x130c <vfprintf+0x53a>
    1300:	28 e0       	ldi	r18, 0x08	; 8
    1302:	30 e0       	ldi	r19, 0x00	; 0
    1304:	05 c0       	rjmp	.+10     	; 0x1310 <vfprintf+0x53e>
    1306:	20 e1       	ldi	r18, 0x10	; 16
    1308:	30 e0       	ldi	r19, 0x00	; 0
    130a:	02 c0       	rjmp	.+4      	; 0x1310 <vfprintf+0x53e>
    130c:	20 e1       	ldi	r18, 0x10	; 16
    130e:	32 e0       	ldi	r19, 0x02	; 2
    1310:	52 01       	movw	r10, r4
    1312:	07 ff       	sbrs	r16, 7
    1314:	09 c0       	rjmp	.+18     	; 0x1328 <vfprintf+0x556>
    1316:	f4 e0       	ldi	r31, 0x04	; 4
    1318:	af 0e       	add	r10, r31
    131a:	b1 1c       	adc	r11, r1
    131c:	f2 01       	movw	r30, r4
    131e:	60 81       	ld	r22, Z
    1320:	71 81       	ldd	r23, Z+1	; 0x01
    1322:	82 81       	ldd	r24, Z+2	; 0x02
    1324:	93 81       	ldd	r25, Z+3	; 0x03
    1326:	08 c0       	rjmp	.+16     	; 0x1338 <vfprintf+0x566>
    1328:	f2 e0       	ldi	r31, 0x02	; 2
    132a:	af 0e       	add	r10, r31
    132c:	b1 1c       	adc	r11, r1
    132e:	f2 01       	movw	r30, r4
    1330:	60 81       	ld	r22, Z
    1332:	71 81       	ldd	r23, Z+1	; 0x01
    1334:	80 e0       	ldi	r24, 0x00	; 0
    1336:	90 e0       	ldi	r25, 0x00	; 0
    1338:	a3 01       	movw	r20, r6
    133a:	0e 94 0d 0c 	call	0x181a	; 0x181a <__ultoa_invert>
    133e:	e8 2e       	mov	r14, r24
    1340:	e6 18       	sub	r14, r6
    1342:	0f 77       	andi	r16, 0x7F	; 127
    1344:	30 2e       	mov	r3, r16
    1346:	36 fe       	sbrs	r3, 6
    1348:	0b c0       	rjmp	.+22     	; 0x1360 <vfprintf+0x58e>
    134a:	33 2d       	mov	r19, r3
    134c:	3e 7f       	andi	r19, 0xFE	; 254
    134e:	e1 16       	cp	r14, r17
    1350:	50 f4       	brcc	.+20     	; 0x1366 <vfprintf+0x594>
    1352:	34 fe       	sbrs	r3, 4
    1354:	0a c0       	rjmp	.+20     	; 0x136a <vfprintf+0x598>
    1356:	32 fc       	sbrc	r3, 2
    1358:	08 c0       	rjmp	.+16     	; 0x136a <vfprintf+0x598>
    135a:	33 2d       	mov	r19, r3
    135c:	3e 7e       	andi	r19, 0xEE	; 238
    135e:	05 c0       	rjmp	.+10     	; 0x136a <vfprintf+0x598>
    1360:	0e 2d       	mov	r16, r14
    1362:	33 2d       	mov	r19, r3
    1364:	03 c0       	rjmp	.+6      	; 0x136c <vfprintf+0x59a>
    1366:	0e 2d       	mov	r16, r14
    1368:	01 c0       	rjmp	.+2      	; 0x136c <vfprintf+0x59a>
    136a:	01 2f       	mov	r16, r17
    136c:	34 ff       	sbrs	r19, 4
    136e:	0c c0       	rjmp	.+24     	; 0x1388 <vfprintf+0x5b6>
    1370:	fe 01       	movw	r30, r28
    1372:	ee 0d       	add	r30, r14
    1374:	f1 1d       	adc	r31, r1
    1376:	80 81       	ld	r24, Z
    1378:	80 33       	cpi	r24, 0x30	; 48
    137a:	11 f4       	brne	.+4      	; 0x1380 <vfprintf+0x5ae>
    137c:	39 7e       	andi	r19, 0xE9	; 233
    137e:	08 c0       	rjmp	.+16     	; 0x1390 <vfprintf+0x5be>
    1380:	32 ff       	sbrs	r19, 2
    1382:	05 c0       	rjmp	.+10     	; 0x138e <vfprintf+0x5bc>
    1384:	0e 5f       	subi	r16, 0xFE	; 254
    1386:	04 c0       	rjmp	.+8      	; 0x1390 <vfprintf+0x5be>
    1388:	83 2f       	mov	r24, r19
    138a:	86 78       	andi	r24, 0x86	; 134
    138c:	09 f0       	breq	.+2      	; 0x1390 <vfprintf+0x5be>
    138e:	0f 5f       	subi	r16, 0xFF	; 255
    1390:	33 fd       	sbrc	r19, 3
    1392:	13 c0       	rjmp	.+38     	; 0x13ba <vfprintf+0x5e8>
    1394:	30 ff       	sbrs	r19, 0
    1396:	06 c0       	rjmp	.+12     	; 0x13a4 <vfprintf+0x5d2>
    1398:	1e 2d       	mov	r17, r14
    139a:	0f 15       	cp	r16, r15
    139c:	18 f4       	brcc	.+6      	; 0x13a4 <vfprintf+0x5d2>
    139e:	1f 0d       	add	r17, r15
    13a0:	10 1b       	sub	r17, r16
    13a2:	0f 2d       	mov	r16, r15
    13a4:	0f 15       	cp	r16, r15
    13a6:	68 f4       	brcc	.+26     	; 0x13c2 <vfprintf+0x5f0>
    13a8:	b6 01       	movw	r22, r12
    13aa:	80 e2       	ldi	r24, 0x20	; 32
    13ac:	90 e0       	ldi	r25, 0x00	; 0
    13ae:	3b 8b       	std	Y+19, r19	; 0x13
    13b0:	0e 94 b2 0b 	call	0x1764	; 0x1764 <fputc>
    13b4:	0f 5f       	subi	r16, 0xFF	; 255
    13b6:	3b 89       	ldd	r19, Y+19	; 0x13
    13b8:	f5 cf       	rjmp	.-22     	; 0x13a4 <vfprintf+0x5d2>
    13ba:	0f 15       	cp	r16, r15
    13bc:	10 f4       	brcc	.+4      	; 0x13c2 <vfprintf+0x5f0>
    13be:	f0 1a       	sub	r15, r16
    13c0:	01 c0       	rjmp	.+2      	; 0x13c4 <vfprintf+0x5f2>
    13c2:	f1 2c       	mov	r15, r1
    13c4:	34 ff       	sbrs	r19, 4
    13c6:	12 c0       	rjmp	.+36     	; 0x13ec <vfprintf+0x61a>
    13c8:	b6 01       	movw	r22, r12
    13ca:	80 e3       	ldi	r24, 0x30	; 48
    13cc:	90 e0       	ldi	r25, 0x00	; 0
    13ce:	3b 8b       	std	Y+19, r19	; 0x13
    13d0:	0e 94 b2 0b 	call	0x1764	; 0x1764 <fputc>
    13d4:	3b 89       	ldd	r19, Y+19	; 0x13
    13d6:	32 ff       	sbrs	r19, 2
    13d8:	17 c0       	rjmp	.+46     	; 0x1408 <vfprintf+0x636>
    13da:	31 fd       	sbrc	r19, 1
    13dc:	03 c0       	rjmp	.+6      	; 0x13e4 <vfprintf+0x612>
    13de:	88 e7       	ldi	r24, 0x78	; 120
    13e0:	90 e0       	ldi	r25, 0x00	; 0
    13e2:	02 c0       	rjmp	.+4      	; 0x13e8 <vfprintf+0x616>
    13e4:	88 e5       	ldi	r24, 0x58	; 88
    13e6:	90 e0       	ldi	r25, 0x00	; 0
    13e8:	b6 01       	movw	r22, r12
    13ea:	0c c0       	rjmp	.+24     	; 0x1404 <vfprintf+0x632>
    13ec:	83 2f       	mov	r24, r19
    13ee:	86 78       	andi	r24, 0x86	; 134
    13f0:	59 f0       	breq	.+22     	; 0x1408 <vfprintf+0x636>
    13f2:	31 ff       	sbrs	r19, 1
    13f4:	02 c0       	rjmp	.+4      	; 0x13fa <vfprintf+0x628>
    13f6:	8b e2       	ldi	r24, 0x2B	; 43
    13f8:	01 c0       	rjmp	.+2      	; 0x13fc <vfprintf+0x62a>
    13fa:	80 e2       	ldi	r24, 0x20	; 32
    13fc:	37 fd       	sbrc	r19, 7
    13fe:	8d e2       	ldi	r24, 0x2D	; 45
    1400:	b6 01       	movw	r22, r12
    1402:	90 e0       	ldi	r25, 0x00	; 0
    1404:	0e 94 b2 0b 	call	0x1764	; 0x1764 <fputc>
    1408:	e1 16       	cp	r14, r17
    140a:	38 f4       	brcc	.+14     	; 0x141a <vfprintf+0x648>
    140c:	b6 01       	movw	r22, r12
    140e:	80 e3       	ldi	r24, 0x30	; 48
    1410:	90 e0       	ldi	r25, 0x00	; 0
    1412:	0e 94 b2 0b 	call	0x1764	; 0x1764 <fputc>
    1416:	11 50       	subi	r17, 0x01	; 1
    1418:	f7 cf       	rjmp	.-18     	; 0x1408 <vfprintf+0x636>
    141a:	ea 94       	dec	r14
    141c:	f3 01       	movw	r30, r6
    141e:	ee 0d       	add	r30, r14
    1420:	f1 1d       	adc	r31, r1
    1422:	80 81       	ld	r24, Z
    1424:	b6 01       	movw	r22, r12
    1426:	90 e0       	ldi	r25, 0x00	; 0
    1428:	0e 94 b2 0b 	call	0x1764	; 0x1764 <fputc>
    142c:	e1 10       	cpse	r14, r1
    142e:	f5 cf       	rjmp	.-22     	; 0x141a <vfprintf+0x648>
    1430:	14 c0       	rjmp	.+40     	; 0x145a <vfprintf+0x688>
    1432:	f4 e0       	ldi	r31, 0x04	; 4
    1434:	ff 15       	cp	r31, r15
    1436:	58 f5       	brcc	.+86     	; 0x148e <vfprintf+0x6bc>
    1438:	84 e0       	ldi	r24, 0x04	; 4
    143a:	f8 1a       	sub	r15, r24
    143c:	33 fe       	sbrs	r3, 3
    143e:	1e c0       	rjmp	.+60     	; 0x147c <vfprintf+0x6aa>
    1440:	21 10       	cpse	r2, r1
    1442:	26 c0       	rjmp	.+76     	; 0x1490 <vfprintf+0x6be>
    1444:	03 ff       	sbrs	r16, 3
    1446:	2a c0       	rjmp	.+84     	; 0x149c <vfprintf+0x6ca>
    1448:	08 e6       	ldi	r16, 0x68	; 104
    144a:	10 e0       	ldi	r17, 0x00	; 0
    144c:	f3 2d       	mov	r31, r3
    144e:	f0 71       	andi	r31, 0x10	; 16
    1450:	3f 2e       	mov	r3, r31
    1452:	f8 01       	movw	r30, r16
    1454:	84 91       	lpm	r24, Z
    1456:	81 11       	cpse	r24, r1
    1458:	24 c0       	rjmp	.+72     	; 0x14a2 <vfprintf+0x6d0>
    145a:	ff 20       	and	r15, r15
    145c:	09 f4       	brne	.+2      	; 0x1460 <vfprintf+0x68e>
    145e:	e5 cc       	rjmp	.-1590   	; 0xe2a <vfprintf+0x58>
    1460:	b6 01       	movw	r22, r12
    1462:	80 e2       	ldi	r24, 0x20	; 32
    1464:	90 e0       	ldi	r25, 0x00	; 0
    1466:	0e 94 b2 0b 	call	0x1764	; 0x1764 <fputc>
    146a:	fa 94       	dec	r15
    146c:	f6 cf       	rjmp	.-20     	; 0x145a <vfprintf+0x688>
    146e:	f6 01       	movw	r30, r12
    1470:	86 81       	ldd	r24, Z+6	; 0x06
    1472:	97 81       	ldd	r25, Z+7	; 0x07
    1474:	26 c0       	rjmp	.+76     	; 0x14c2 <vfprintf+0x6f0>
    1476:	8f ef       	ldi	r24, 0xFF	; 255
    1478:	9f ef       	ldi	r25, 0xFF	; 255
    147a:	23 c0       	rjmp	.+70     	; 0x14c2 <vfprintf+0x6f0>
    147c:	b6 01       	movw	r22, r12
    147e:	80 e2       	ldi	r24, 0x20	; 32
    1480:	90 e0       	ldi	r25, 0x00	; 0
    1482:	0e 94 b2 0b 	call	0x1764	; 0x1764 <fputc>
    1486:	fa 94       	dec	r15
    1488:	f1 10       	cpse	r15, r1
    148a:	f8 cf       	rjmp	.-16     	; 0x147c <vfprintf+0x6aa>
    148c:	d9 cf       	rjmp	.-78     	; 0x1440 <vfprintf+0x66e>
    148e:	f1 2c       	mov	r15, r1
    1490:	b6 01       	movw	r22, r12
    1492:	82 2d       	mov	r24, r2
    1494:	90 e0       	ldi	r25, 0x00	; 0
    1496:	0e 94 b2 0b 	call	0x1764	; 0x1764 <fputc>
    149a:	d4 cf       	rjmp	.-88     	; 0x1444 <vfprintf+0x672>
    149c:	0c e6       	ldi	r16, 0x6C	; 108
    149e:	10 e0       	ldi	r17, 0x00	; 0
    14a0:	d5 cf       	rjmp	.-86     	; 0x144c <vfprintf+0x67a>
    14a2:	31 10       	cpse	r3, r1
    14a4:	80 52       	subi	r24, 0x20	; 32
    14a6:	b6 01       	movw	r22, r12
    14a8:	90 e0       	ldi	r25, 0x00	; 0
    14aa:	0e 94 b2 0b 	call	0x1764	; 0x1764 <fputc>
    14ae:	0f 5f       	subi	r16, 0xFF	; 255
    14b0:	1f 4f       	sbci	r17, 0xFF	; 255
    14b2:	cf cf       	rjmp	.-98     	; 0x1452 <vfprintf+0x680>
    14b4:	23 e0       	ldi	r18, 0x03	; 3
    14b6:	2f 15       	cp	r18, r15
    14b8:	10 f4       	brcc	.+4      	; 0x14be <vfprintf+0x6ec>
    14ba:	83 e0       	ldi	r24, 0x03	; 3
    14bc:	be cf       	rjmp	.-132    	; 0x143a <vfprintf+0x668>
    14be:	f1 2c       	mov	r15, r1
    14c0:	c1 cf       	rjmp	.-126    	; 0x1444 <vfprintf+0x672>
    14c2:	63 96       	adiw	r28, 0x13	; 19
    14c4:	e2 e1       	ldi	r30, 0x12	; 18
    14c6:	0c 94 a3 0a 	jmp	0x1546	; 0x1546 <__epilogue_restores__>

000014ca <__udivmodsi4>:
    14ca:	a1 e2       	ldi	r26, 0x21	; 33
    14cc:	1a 2e       	mov	r1, r26
    14ce:	aa 1b       	sub	r26, r26
    14d0:	bb 1b       	sub	r27, r27
    14d2:	fd 01       	movw	r30, r26
    14d4:	0d c0       	rjmp	.+26     	; 0x14f0 <__udivmodsi4_ep>

000014d6 <__udivmodsi4_loop>:
    14d6:	aa 1f       	adc	r26, r26
    14d8:	bb 1f       	adc	r27, r27
    14da:	ee 1f       	adc	r30, r30
    14dc:	ff 1f       	adc	r31, r31
    14de:	a2 17       	cp	r26, r18
    14e0:	b3 07       	cpc	r27, r19
    14e2:	e4 07       	cpc	r30, r20
    14e4:	f5 07       	cpc	r31, r21
    14e6:	20 f0       	brcs	.+8      	; 0x14f0 <__udivmodsi4_ep>
    14e8:	a2 1b       	sub	r26, r18
    14ea:	b3 0b       	sbc	r27, r19
    14ec:	e4 0b       	sbc	r30, r20
    14ee:	f5 0b       	sbc	r31, r21

000014f0 <__udivmodsi4_ep>:
    14f0:	66 1f       	adc	r22, r22
    14f2:	77 1f       	adc	r23, r23
    14f4:	88 1f       	adc	r24, r24
    14f6:	99 1f       	adc	r25, r25
    14f8:	1a 94       	dec	r1
    14fa:	69 f7       	brne	.-38     	; 0x14d6 <__udivmodsi4_loop>
    14fc:	60 95       	com	r22
    14fe:	70 95       	com	r23
    1500:	80 95       	com	r24
    1502:	90 95       	com	r25
    1504:	9b 01       	movw	r18, r22
    1506:	ac 01       	movw	r20, r24
    1508:	bd 01       	movw	r22, r26
    150a:	cf 01       	movw	r24, r30
    150c:	08 95       	ret

0000150e <__prologue_saves__>:
    150e:	2f 92       	push	r2
    1510:	3f 92       	push	r3
    1512:	4f 92       	push	r4
    1514:	5f 92       	push	r5
    1516:	6f 92       	push	r6
    1518:	7f 92       	push	r7
    151a:	8f 92       	push	r8
    151c:	9f 92       	push	r9
    151e:	af 92       	push	r10
    1520:	bf 92       	push	r11
    1522:	cf 92       	push	r12
    1524:	df 92       	push	r13
    1526:	ef 92       	push	r14
    1528:	ff 92       	push	r15
    152a:	0f 93       	push	r16
    152c:	1f 93       	push	r17
    152e:	cf 93       	push	r28
    1530:	df 93       	push	r29
    1532:	cd b7       	in	r28, 0x3d	; 61
    1534:	de b7       	in	r29, 0x3e	; 62
    1536:	ca 1b       	sub	r28, r26
    1538:	db 0b       	sbc	r29, r27
    153a:	0f b6       	in	r0, 0x3f	; 63
    153c:	f8 94       	cli
    153e:	de bf       	out	0x3e, r29	; 62
    1540:	0f be       	out	0x3f, r0	; 63
    1542:	cd bf       	out	0x3d, r28	; 61
    1544:	09 94       	ijmp

00001546 <__epilogue_restores__>:
    1546:	2a 88       	ldd	r2, Y+18	; 0x12
    1548:	39 88       	ldd	r3, Y+17	; 0x11
    154a:	48 88       	ldd	r4, Y+16	; 0x10
    154c:	5f 84       	ldd	r5, Y+15	; 0x0f
    154e:	6e 84       	ldd	r6, Y+14	; 0x0e
    1550:	7d 84       	ldd	r7, Y+13	; 0x0d
    1552:	8c 84       	ldd	r8, Y+12	; 0x0c
    1554:	9b 84       	ldd	r9, Y+11	; 0x0b
    1556:	aa 84       	ldd	r10, Y+10	; 0x0a
    1558:	b9 84       	ldd	r11, Y+9	; 0x09
    155a:	c8 84       	ldd	r12, Y+8	; 0x08
    155c:	df 80       	ldd	r13, Y+7	; 0x07
    155e:	ee 80       	ldd	r14, Y+6	; 0x06
    1560:	fd 80       	ldd	r15, Y+5	; 0x05
    1562:	0c 81       	ldd	r16, Y+4	; 0x04
    1564:	1b 81       	ldd	r17, Y+3	; 0x03
    1566:	aa 81       	ldd	r26, Y+2	; 0x02
    1568:	b9 81       	ldd	r27, Y+1	; 0x01
    156a:	ce 0f       	add	r28, r30
    156c:	d1 1d       	adc	r29, r1
    156e:	0f b6       	in	r0, 0x3f	; 63
    1570:	f8 94       	cli
    1572:	de bf       	out	0x3e, r29	; 62
    1574:	0f be       	out	0x3f, r0	; 63
    1576:	cd bf       	out	0x3d, r28	; 61
    1578:	ed 01       	movw	r28, r26
    157a:	08 95       	ret

0000157c <__tablejump2__>:
    157c:	ee 0f       	add	r30, r30
    157e:	ff 1f       	adc	r31, r31
    1580:	05 90       	lpm	r0, Z+
    1582:	f4 91       	lpm	r31, Z
    1584:	e0 2d       	mov	r30, r0
    1586:	09 94       	ijmp

00001588 <__ftoa_engine>:
    1588:	28 30       	cpi	r18, 0x08	; 8
    158a:	08 f0       	brcs	.+2      	; 0x158e <__ftoa_engine+0x6>
    158c:	27 e0       	ldi	r18, 0x07	; 7
    158e:	33 27       	eor	r19, r19
    1590:	da 01       	movw	r26, r20
    1592:	99 0f       	add	r25, r25
    1594:	31 1d       	adc	r19, r1
    1596:	87 fd       	sbrc	r24, 7
    1598:	91 60       	ori	r25, 0x01	; 1
    159a:	00 96       	adiw	r24, 0x00	; 0
    159c:	61 05       	cpc	r22, r1
    159e:	71 05       	cpc	r23, r1
    15a0:	39 f4       	brne	.+14     	; 0x15b0 <__ftoa_engine+0x28>
    15a2:	32 60       	ori	r19, 0x02	; 2
    15a4:	2e 5f       	subi	r18, 0xFE	; 254
    15a6:	3d 93       	st	X+, r19
    15a8:	30 e3       	ldi	r19, 0x30	; 48
    15aa:	2a 95       	dec	r18
    15ac:	e1 f7       	brne	.-8      	; 0x15a6 <__ftoa_engine+0x1e>
    15ae:	08 95       	ret
    15b0:	9f 3f       	cpi	r25, 0xFF	; 255
    15b2:	30 f0       	brcs	.+12     	; 0x15c0 <__ftoa_engine+0x38>
    15b4:	80 38       	cpi	r24, 0x80	; 128
    15b6:	71 05       	cpc	r23, r1
    15b8:	61 05       	cpc	r22, r1
    15ba:	09 f0       	breq	.+2      	; 0x15be <__ftoa_engine+0x36>
    15bc:	3c 5f       	subi	r19, 0xFC	; 252
    15be:	3c 5f       	subi	r19, 0xFC	; 252
    15c0:	3d 93       	st	X+, r19
    15c2:	91 30       	cpi	r25, 0x01	; 1
    15c4:	08 f0       	brcs	.+2      	; 0x15c8 <__ftoa_engine+0x40>
    15c6:	80 68       	ori	r24, 0x80	; 128
    15c8:	91 1d       	adc	r25, r1
    15ca:	df 93       	push	r29
    15cc:	cf 93       	push	r28
    15ce:	1f 93       	push	r17
    15d0:	0f 93       	push	r16
    15d2:	ff 92       	push	r15
    15d4:	ef 92       	push	r14
    15d6:	19 2f       	mov	r17, r25
    15d8:	98 7f       	andi	r25, 0xF8	; 248
    15da:	96 95       	lsr	r25
    15dc:	e9 2f       	mov	r30, r25
    15de:	96 95       	lsr	r25
    15e0:	96 95       	lsr	r25
    15e2:	e9 0f       	add	r30, r25
    15e4:	ff 27       	eor	r31, r31
    15e6:	e6 53       	subi	r30, 0x36	; 54
    15e8:	ff 4f       	sbci	r31, 0xFF	; 255
    15ea:	99 27       	eor	r25, r25
    15ec:	33 27       	eor	r19, r19
    15ee:	ee 24       	eor	r14, r14
    15f0:	ff 24       	eor	r15, r15
    15f2:	a7 01       	movw	r20, r14
    15f4:	e7 01       	movw	r28, r14
    15f6:	05 90       	lpm	r0, Z+
    15f8:	08 94       	sec
    15fa:	07 94       	ror	r0
    15fc:	28 f4       	brcc	.+10     	; 0x1608 <__ftoa_engine+0x80>
    15fe:	36 0f       	add	r19, r22
    1600:	e7 1e       	adc	r14, r23
    1602:	f8 1e       	adc	r15, r24
    1604:	49 1f       	adc	r20, r25
    1606:	51 1d       	adc	r21, r1
    1608:	66 0f       	add	r22, r22
    160a:	77 1f       	adc	r23, r23
    160c:	88 1f       	adc	r24, r24
    160e:	99 1f       	adc	r25, r25
    1610:	06 94       	lsr	r0
    1612:	a1 f7       	brne	.-24     	; 0x15fc <__ftoa_engine+0x74>
    1614:	05 90       	lpm	r0, Z+
    1616:	07 94       	ror	r0
    1618:	28 f4       	brcc	.+10     	; 0x1624 <__ftoa_engine+0x9c>
    161a:	e7 0e       	add	r14, r23
    161c:	f8 1e       	adc	r15, r24
    161e:	49 1f       	adc	r20, r25
    1620:	56 1f       	adc	r21, r22
    1622:	c1 1d       	adc	r28, r1
    1624:	77 0f       	add	r23, r23
    1626:	88 1f       	adc	r24, r24
    1628:	99 1f       	adc	r25, r25
    162a:	66 1f       	adc	r22, r22
    162c:	06 94       	lsr	r0
    162e:	a1 f7       	brne	.-24     	; 0x1618 <__ftoa_engine+0x90>
    1630:	05 90       	lpm	r0, Z+
    1632:	07 94       	ror	r0
    1634:	28 f4       	brcc	.+10     	; 0x1640 <__ftoa_engine+0xb8>
    1636:	f8 0e       	add	r15, r24
    1638:	49 1f       	adc	r20, r25
    163a:	56 1f       	adc	r21, r22
    163c:	c7 1f       	adc	r28, r23
    163e:	d1 1d       	adc	r29, r1
    1640:	88 0f       	add	r24, r24
    1642:	99 1f       	adc	r25, r25
    1644:	66 1f       	adc	r22, r22
    1646:	77 1f       	adc	r23, r23
    1648:	06 94       	lsr	r0
    164a:	a1 f7       	brne	.-24     	; 0x1634 <__ftoa_engine+0xac>
    164c:	05 90       	lpm	r0, Z+
    164e:	07 94       	ror	r0
    1650:	20 f4       	brcc	.+8      	; 0x165a <__ftoa_engine+0xd2>
    1652:	49 0f       	add	r20, r25
    1654:	56 1f       	adc	r21, r22
    1656:	c7 1f       	adc	r28, r23
    1658:	d8 1f       	adc	r29, r24
    165a:	99 0f       	add	r25, r25
    165c:	66 1f       	adc	r22, r22
    165e:	77 1f       	adc	r23, r23
    1660:	88 1f       	adc	r24, r24
    1662:	06 94       	lsr	r0
    1664:	a9 f7       	brne	.-22     	; 0x1650 <__ftoa_engine+0xc8>
    1666:	84 91       	lpm	r24, Z
    1668:	10 95       	com	r17
    166a:	17 70       	andi	r17, 0x07	; 7
    166c:	41 f0       	breq	.+16     	; 0x167e <__ftoa_engine+0xf6>
    166e:	d6 95       	lsr	r29
    1670:	c7 95       	ror	r28
    1672:	57 95       	ror	r21
    1674:	47 95       	ror	r20
    1676:	f7 94       	ror	r15
    1678:	e7 94       	ror	r14
    167a:	1a 95       	dec	r17
    167c:	c1 f7       	brne	.-16     	; 0x166e <__ftoa_engine+0xe6>
    167e:	e0 e7       	ldi	r30, 0x70	; 112
    1680:	f0 e0       	ldi	r31, 0x00	; 0
    1682:	68 94       	set
    1684:	15 90       	lpm	r1, Z+
    1686:	15 91       	lpm	r17, Z+
    1688:	35 91       	lpm	r19, Z+
    168a:	65 91       	lpm	r22, Z+
    168c:	95 91       	lpm	r25, Z+
    168e:	05 90       	lpm	r0, Z+
    1690:	7f e2       	ldi	r23, 0x2F	; 47
    1692:	73 95       	inc	r23
    1694:	e1 18       	sub	r14, r1
    1696:	f1 0a       	sbc	r15, r17
    1698:	43 0b       	sbc	r20, r19
    169a:	56 0b       	sbc	r21, r22
    169c:	c9 0b       	sbc	r28, r25
    169e:	d0 09       	sbc	r29, r0
    16a0:	c0 f7       	brcc	.-16     	; 0x1692 <__ftoa_engine+0x10a>
    16a2:	e1 0c       	add	r14, r1
    16a4:	f1 1e       	adc	r15, r17
    16a6:	43 1f       	adc	r20, r19
    16a8:	56 1f       	adc	r21, r22
    16aa:	c9 1f       	adc	r28, r25
    16ac:	d0 1d       	adc	r29, r0
    16ae:	7e f4       	brtc	.+30     	; 0x16ce <__ftoa_engine+0x146>
    16b0:	70 33       	cpi	r23, 0x30	; 48
    16b2:	11 f4       	brne	.+4      	; 0x16b8 <__ftoa_engine+0x130>
    16b4:	8a 95       	dec	r24
    16b6:	e6 cf       	rjmp	.-52     	; 0x1684 <__ftoa_engine+0xfc>
    16b8:	e8 94       	clt
    16ba:	01 50       	subi	r16, 0x01	; 1
    16bc:	30 f0       	brcs	.+12     	; 0x16ca <__ftoa_engine+0x142>
    16be:	08 0f       	add	r16, r24
    16c0:	0a f4       	brpl	.+2      	; 0x16c4 <__ftoa_engine+0x13c>
    16c2:	00 27       	eor	r16, r16
    16c4:	02 17       	cp	r16, r18
    16c6:	08 f4       	brcc	.+2      	; 0x16ca <__ftoa_engine+0x142>
    16c8:	20 2f       	mov	r18, r16
    16ca:	23 95       	inc	r18
    16cc:	02 2f       	mov	r16, r18
    16ce:	7a 33       	cpi	r23, 0x3A	; 58
    16d0:	28 f0       	brcs	.+10     	; 0x16dc <__ftoa_engine+0x154>
    16d2:	79 e3       	ldi	r23, 0x39	; 57
    16d4:	7d 93       	st	X+, r23
    16d6:	2a 95       	dec	r18
    16d8:	e9 f7       	brne	.-6      	; 0x16d4 <__ftoa_engine+0x14c>
    16da:	10 c0       	rjmp	.+32     	; 0x16fc <__ftoa_engine+0x174>
    16dc:	7d 93       	st	X+, r23
    16de:	2a 95       	dec	r18
    16e0:	89 f6       	brne	.-94     	; 0x1684 <__ftoa_engine+0xfc>
    16e2:	06 94       	lsr	r0
    16e4:	97 95       	ror	r25
    16e6:	67 95       	ror	r22
    16e8:	37 95       	ror	r19
    16ea:	17 95       	ror	r17
    16ec:	17 94       	ror	r1
    16ee:	e1 18       	sub	r14, r1
    16f0:	f1 0a       	sbc	r15, r17
    16f2:	43 0b       	sbc	r20, r19
    16f4:	56 0b       	sbc	r21, r22
    16f6:	c9 0b       	sbc	r28, r25
    16f8:	d0 09       	sbc	r29, r0
    16fa:	98 f0       	brcs	.+38     	; 0x1722 <__ftoa_engine+0x19a>
    16fc:	23 95       	inc	r18
    16fe:	7e 91       	ld	r23, -X
    1700:	73 95       	inc	r23
    1702:	7a 33       	cpi	r23, 0x3A	; 58
    1704:	08 f0       	brcs	.+2      	; 0x1708 <__ftoa_engine+0x180>
    1706:	70 e3       	ldi	r23, 0x30	; 48
    1708:	7c 93       	st	X, r23
    170a:	20 13       	cpse	r18, r16
    170c:	b8 f7       	brcc	.-18     	; 0x16fc <__ftoa_engine+0x174>
    170e:	7e 91       	ld	r23, -X
    1710:	70 61       	ori	r23, 0x10	; 16
    1712:	7d 93       	st	X+, r23
    1714:	30 f0       	brcs	.+12     	; 0x1722 <__ftoa_engine+0x19a>
    1716:	83 95       	inc	r24
    1718:	71 e3       	ldi	r23, 0x31	; 49
    171a:	7d 93       	st	X+, r23
    171c:	70 e3       	ldi	r23, 0x30	; 48
    171e:	2a 95       	dec	r18
    1720:	e1 f7       	brne	.-8      	; 0x171a <__ftoa_engine+0x192>
    1722:	11 24       	eor	r1, r1
    1724:	ef 90       	pop	r14
    1726:	ff 90       	pop	r15
    1728:	0f 91       	pop	r16
    172a:	1f 91       	pop	r17
    172c:	cf 91       	pop	r28
    172e:	df 91       	pop	r29
    1730:	99 27       	eor	r25, r25
    1732:	87 fd       	sbrc	r24, 7
    1734:	90 95       	com	r25
    1736:	08 95       	ret

00001738 <strnlen_P>:
    1738:	fc 01       	movw	r30, r24
    173a:	05 90       	lpm	r0, Z+
    173c:	61 50       	subi	r22, 0x01	; 1
    173e:	70 40       	sbci	r23, 0x00	; 0
    1740:	01 10       	cpse	r0, r1
    1742:	d8 f7       	brcc	.-10     	; 0x173a <strnlen_P+0x2>
    1744:	80 95       	com	r24
    1746:	90 95       	com	r25
    1748:	8e 0f       	add	r24, r30
    174a:	9f 1f       	adc	r25, r31
    174c:	08 95       	ret

0000174e <strnlen>:
    174e:	fc 01       	movw	r30, r24
    1750:	61 50       	subi	r22, 0x01	; 1
    1752:	70 40       	sbci	r23, 0x00	; 0
    1754:	01 90       	ld	r0, Z+
    1756:	01 10       	cpse	r0, r1
    1758:	d8 f7       	brcc	.-10     	; 0x1750 <strnlen+0x2>
    175a:	80 95       	com	r24
    175c:	90 95       	com	r25
    175e:	8e 0f       	add	r24, r30
    1760:	9f 1f       	adc	r25, r31
    1762:	08 95       	ret

00001764 <fputc>:
    1764:	0f 93       	push	r16
    1766:	1f 93       	push	r17
    1768:	cf 93       	push	r28
    176a:	df 93       	push	r29
    176c:	fb 01       	movw	r30, r22
    176e:	23 81       	ldd	r18, Z+3	; 0x03
    1770:	21 fd       	sbrc	r18, 1
    1772:	03 c0       	rjmp	.+6      	; 0x177a <fputc+0x16>
    1774:	8f ef       	ldi	r24, 0xFF	; 255
    1776:	9f ef       	ldi	r25, 0xFF	; 255
    1778:	28 c0       	rjmp	.+80     	; 0x17ca <fputc+0x66>
    177a:	22 ff       	sbrs	r18, 2
    177c:	16 c0       	rjmp	.+44     	; 0x17aa <fputc+0x46>
    177e:	46 81       	ldd	r20, Z+6	; 0x06
    1780:	57 81       	ldd	r21, Z+7	; 0x07
    1782:	24 81       	ldd	r18, Z+4	; 0x04
    1784:	35 81       	ldd	r19, Z+5	; 0x05
    1786:	42 17       	cp	r20, r18
    1788:	53 07       	cpc	r21, r19
    178a:	44 f4       	brge	.+16     	; 0x179c <fputc+0x38>
    178c:	a0 81       	ld	r26, Z
    178e:	b1 81       	ldd	r27, Z+1	; 0x01
    1790:	9d 01       	movw	r18, r26
    1792:	2f 5f       	subi	r18, 0xFF	; 255
    1794:	3f 4f       	sbci	r19, 0xFF	; 255
    1796:	31 83       	std	Z+1, r19	; 0x01
    1798:	20 83       	st	Z, r18
    179a:	8c 93       	st	X, r24
    179c:	26 81       	ldd	r18, Z+6	; 0x06
    179e:	37 81       	ldd	r19, Z+7	; 0x07
    17a0:	2f 5f       	subi	r18, 0xFF	; 255
    17a2:	3f 4f       	sbci	r19, 0xFF	; 255
    17a4:	37 83       	std	Z+7, r19	; 0x07
    17a6:	26 83       	std	Z+6, r18	; 0x06
    17a8:	10 c0       	rjmp	.+32     	; 0x17ca <fputc+0x66>
    17aa:	eb 01       	movw	r28, r22
    17ac:	09 2f       	mov	r16, r25
    17ae:	18 2f       	mov	r17, r24
    17b0:	00 84       	ldd	r0, Z+8	; 0x08
    17b2:	f1 85       	ldd	r31, Z+9	; 0x09
    17b4:	e0 2d       	mov	r30, r0
    17b6:	09 95       	icall
    17b8:	89 2b       	or	r24, r25
    17ba:	e1 f6       	brne	.-72     	; 0x1774 <fputc+0x10>
    17bc:	8e 81       	ldd	r24, Y+6	; 0x06
    17be:	9f 81       	ldd	r25, Y+7	; 0x07
    17c0:	01 96       	adiw	r24, 0x01	; 1
    17c2:	9f 83       	std	Y+7, r25	; 0x07
    17c4:	8e 83       	std	Y+6, r24	; 0x06
    17c6:	81 2f       	mov	r24, r17
    17c8:	90 2f       	mov	r25, r16
    17ca:	df 91       	pop	r29
    17cc:	cf 91       	pop	r28
    17ce:	1f 91       	pop	r17
    17d0:	0f 91       	pop	r16
    17d2:	08 95       	ret

000017d4 <sprintf>:
    17d4:	ae e0       	ldi	r26, 0x0E	; 14
    17d6:	b0 e0       	ldi	r27, 0x00	; 0
    17d8:	e0 ef       	ldi	r30, 0xF0	; 240
    17da:	fb e0       	ldi	r31, 0x0B	; 11
    17dc:	0c 94 95 0a 	jmp	0x152a	; 0x152a <__prologue_saves__+0x1c>
    17e0:	0d 89       	ldd	r16, Y+21	; 0x15
    17e2:	1e 89       	ldd	r17, Y+22	; 0x16
    17e4:	86 e0       	ldi	r24, 0x06	; 6
    17e6:	8c 83       	std	Y+4, r24	; 0x04
    17e8:	1a 83       	std	Y+2, r17	; 0x02
    17ea:	09 83       	std	Y+1, r16	; 0x01
    17ec:	8f ef       	ldi	r24, 0xFF	; 255
    17ee:	9f e7       	ldi	r25, 0x7F	; 127
    17f0:	9e 83       	std	Y+6, r25	; 0x06
    17f2:	8d 83       	std	Y+5, r24	; 0x05
    17f4:	ae 01       	movw	r20, r28
    17f6:	47 5e       	subi	r20, 0xE7	; 231
    17f8:	5f 4f       	sbci	r21, 0xFF	; 255
    17fa:	6f 89       	ldd	r22, Y+23	; 0x17
    17fc:	78 8d       	ldd	r23, Y+24	; 0x18
    17fe:	ce 01       	movw	r24, r28
    1800:	01 96       	adiw	r24, 0x01	; 1
    1802:	0e 94 e9 06 	call	0xdd2	; 0xdd2 <vfprintf>
    1806:	2f 81       	ldd	r18, Y+7	; 0x07
    1808:	38 85       	ldd	r19, Y+8	; 0x08
    180a:	f8 01       	movw	r30, r16
    180c:	e2 0f       	add	r30, r18
    180e:	f3 1f       	adc	r31, r19
    1810:	10 82       	st	Z, r1
    1812:	2e 96       	adiw	r28, 0x0e	; 14
    1814:	e4 e0       	ldi	r30, 0x04	; 4
    1816:	0c 94 b1 0a 	jmp	0x1562	; 0x1562 <__epilogue_restores__+0x1c>

0000181a <__ultoa_invert>:
    181a:	fa 01       	movw	r30, r20
    181c:	aa 27       	eor	r26, r26
    181e:	28 30       	cpi	r18, 0x08	; 8
    1820:	51 f1       	breq	.+84     	; 0x1876 <__ultoa_invert+0x5c>
    1822:	20 31       	cpi	r18, 0x10	; 16
    1824:	81 f1       	breq	.+96     	; 0x1886 <__ultoa_invert+0x6c>
    1826:	e8 94       	clt
    1828:	6f 93       	push	r22
    182a:	6e 7f       	andi	r22, 0xFE	; 254
    182c:	6e 5f       	subi	r22, 0xFE	; 254
    182e:	7f 4f       	sbci	r23, 0xFF	; 255
    1830:	8f 4f       	sbci	r24, 0xFF	; 255
    1832:	9f 4f       	sbci	r25, 0xFF	; 255
    1834:	af 4f       	sbci	r26, 0xFF	; 255
    1836:	b1 e0       	ldi	r27, 0x01	; 1
    1838:	3e d0       	rcall	.+124    	; 0x18b6 <__ultoa_invert+0x9c>
    183a:	b4 e0       	ldi	r27, 0x04	; 4
    183c:	3c d0       	rcall	.+120    	; 0x18b6 <__ultoa_invert+0x9c>
    183e:	67 0f       	add	r22, r23
    1840:	78 1f       	adc	r23, r24
    1842:	89 1f       	adc	r24, r25
    1844:	9a 1f       	adc	r25, r26
    1846:	a1 1d       	adc	r26, r1
    1848:	68 0f       	add	r22, r24
    184a:	79 1f       	adc	r23, r25
    184c:	8a 1f       	adc	r24, r26
    184e:	91 1d       	adc	r25, r1
    1850:	a1 1d       	adc	r26, r1
    1852:	6a 0f       	add	r22, r26
    1854:	71 1d       	adc	r23, r1
    1856:	81 1d       	adc	r24, r1
    1858:	91 1d       	adc	r25, r1
    185a:	a1 1d       	adc	r26, r1
    185c:	20 d0       	rcall	.+64     	; 0x189e <__ultoa_invert+0x84>
    185e:	09 f4       	brne	.+2      	; 0x1862 <__ultoa_invert+0x48>
    1860:	68 94       	set
    1862:	3f 91       	pop	r19
    1864:	2a e0       	ldi	r18, 0x0A	; 10
    1866:	26 9f       	mul	r18, r22
    1868:	11 24       	eor	r1, r1
    186a:	30 19       	sub	r19, r0
    186c:	30 5d       	subi	r19, 0xD0	; 208
    186e:	31 93       	st	Z+, r19
    1870:	de f6       	brtc	.-74     	; 0x1828 <__ultoa_invert+0xe>
    1872:	cf 01       	movw	r24, r30
    1874:	08 95       	ret
    1876:	46 2f       	mov	r20, r22
    1878:	47 70       	andi	r20, 0x07	; 7
    187a:	40 5d       	subi	r20, 0xD0	; 208
    187c:	41 93       	st	Z+, r20
    187e:	b3 e0       	ldi	r27, 0x03	; 3
    1880:	0f d0       	rcall	.+30     	; 0x18a0 <__ultoa_invert+0x86>
    1882:	c9 f7       	brne	.-14     	; 0x1876 <__ultoa_invert+0x5c>
    1884:	f6 cf       	rjmp	.-20     	; 0x1872 <__ultoa_invert+0x58>
    1886:	46 2f       	mov	r20, r22
    1888:	4f 70       	andi	r20, 0x0F	; 15
    188a:	40 5d       	subi	r20, 0xD0	; 208
    188c:	4a 33       	cpi	r20, 0x3A	; 58
    188e:	18 f0       	brcs	.+6      	; 0x1896 <__ultoa_invert+0x7c>
    1890:	49 5d       	subi	r20, 0xD9	; 217
    1892:	31 fd       	sbrc	r19, 1
    1894:	40 52       	subi	r20, 0x20	; 32
    1896:	41 93       	st	Z+, r20
    1898:	02 d0       	rcall	.+4      	; 0x189e <__ultoa_invert+0x84>
    189a:	a9 f7       	brne	.-22     	; 0x1886 <__ultoa_invert+0x6c>
    189c:	ea cf       	rjmp	.-44     	; 0x1872 <__ultoa_invert+0x58>
    189e:	b4 e0       	ldi	r27, 0x04	; 4
    18a0:	a6 95       	lsr	r26
    18a2:	97 95       	ror	r25
    18a4:	87 95       	ror	r24
    18a6:	77 95       	ror	r23
    18a8:	67 95       	ror	r22
    18aa:	ba 95       	dec	r27
    18ac:	c9 f7       	brne	.-14     	; 0x18a0 <__ultoa_invert+0x86>
    18ae:	00 97       	sbiw	r24, 0x00	; 0
    18b0:	61 05       	cpc	r22, r1
    18b2:	71 05       	cpc	r23, r1
    18b4:	08 95       	ret
    18b6:	9b 01       	movw	r18, r22
    18b8:	ac 01       	movw	r20, r24
    18ba:	0a 2e       	mov	r0, r26
    18bc:	06 94       	lsr	r0
    18be:	57 95       	ror	r21
    18c0:	47 95       	ror	r20
    18c2:	37 95       	ror	r19
    18c4:	27 95       	ror	r18
    18c6:	ba 95       	dec	r27
    18c8:	c9 f7       	brne	.-14     	; 0x18bc <__ultoa_invert+0xa2>
    18ca:	62 0f       	add	r22, r18
    18cc:	73 1f       	adc	r23, r19
    18ce:	84 1f       	adc	r24, r20
    18d0:	95 1f       	adc	r25, r21
    18d2:	a0 1d       	adc	r26, r0
    18d4:	08 95       	ret

000018d6 <_exit>:
    18d6:	f8 94       	cli

000018d8 <__stop_program>:
    18d8:	ff cf       	rjmp	.-2      	; 0x18d8 <__stop_program>

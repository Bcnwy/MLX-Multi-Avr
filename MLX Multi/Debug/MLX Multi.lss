
MLX Multi.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000094  00800100  0000180a  0000189e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000180a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000034  00800194  00800194  00001932  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001932  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001990  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000298  00000000  00000000  000019d0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00005c1a  00000000  00000000  00001c68  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000102a  00000000  00000000  00007882  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000e45  00000000  00000000  000088ac  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000958  00000000  00000000  000096f4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000195e  00000000  00000000  0000a04c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00002e74  00000000  00000000  0000b9aa  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000510  00000000  00000000  0000e81e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 b7 00 	jmp	0x16e	; 0x16e <__ctors_end>
       4:	0c 94 df 00 	jmp	0x1be	; 0x1be <__bad_interrupt>
       8:	0c 94 df 00 	jmp	0x1be	; 0x1be <__bad_interrupt>
       c:	0c 94 df 00 	jmp	0x1be	; 0x1be <__bad_interrupt>
      10:	0c 94 df 00 	jmp	0x1be	; 0x1be <__bad_interrupt>
      14:	0c 94 df 00 	jmp	0x1be	; 0x1be <__bad_interrupt>
      18:	0c 94 df 00 	jmp	0x1be	; 0x1be <__bad_interrupt>
      1c:	0c 94 df 00 	jmp	0x1be	; 0x1be <__bad_interrupt>
      20:	0c 94 df 00 	jmp	0x1be	; 0x1be <__bad_interrupt>
      24:	0c 94 df 00 	jmp	0x1be	; 0x1be <__bad_interrupt>
      28:	0c 94 df 00 	jmp	0x1be	; 0x1be <__bad_interrupt>
      2c:	0c 94 df 00 	jmp	0x1be	; 0x1be <__bad_interrupt>
      30:	0c 94 df 00 	jmp	0x1be	; 0x1be <__bad_interrupt>
      34:	0c 94 08 02 	jmp	0x410	; 0x410 <__vector_13>
      38:	0c 94 e3 01 	jmp	0x3c6	; 0x3c6 <__vector_14>
      3c:	0c 94 df 00 	jmp	0x1be	; 0x1be <__bad_interrupt>
      40:	0c 94 df 00 	jmp	0x1be	; 0x1be <__bad_interrupt>
      44:	0c 94 df 00 	jmp	0x1be	; 0x1be <__bad_interrupt>
      48:	0c 94 df 00 	jmp	0x1be	; 0x1be <__bad_interrupt>
      4c:	0c 94 df 00 	jmp	0x1be	; 0x1be <__bad_interrupt>
      50:	0c 94 df 00 	jmp	0x1be	; 0x1be <__bad_interrupt>
      54:	0c 94 df 00 	jmp	0x1be	; 0x1be <__bad_interrupt>
      58:	0c 94 df 00 	jmp	0x1be	; 0x1be <__bad_interrupt>
      5c:	0c 94 df 00 	jmp	0x1be	; 0x1be <__bad_interrupt>
      60:	0c 94 df 00 	jmp	0x1be	; 0x1be <__bad_interrupt>
      64:	0c 94 df 00 	jmp	0x1be	; 0x1be <__bad_interrupt>

00000068 <__trampolines_end>:
      68:	6e 61       	ori	r22, 0x1E	; 30
      6a:	6e 00       	.word	0x006e	; ????

0000006c <__c.2177>:
      6c:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      7c:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
      8c:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
      9c:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
      ac:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
      bc:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
      cc:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
      dc:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
      ec:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
      fc:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     10c:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     11c:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     12c:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     13c:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     14c:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     15c:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

0000016a <__ctors_start>:
     16a:	68 03       	fmul	r22, r16
     16c:	36 04       	cpc	r3, r6

0000016e <__ctors_end>:
     16e:	11 24       	eor	r1, r1
     170:	1f be       	out	0x3f, r1	; 63
     172:	cf ef       	ldi	r28, 0xFF	; 255
     174:	d8 e0       	ldi	r29, 0x08	; 8
     176:	de bf       	out	0x3e, r29	; 62
     178:	cd bf       	out	0x3d, r28	; 61

0000017a <__do_copy_data>:
     17a:	11 e0       	ldi	r17, 0x01	; 1
     17c:	a0 e0       	ldi	r26, 0x00	; 0
     17e:	b1 e0       	ldi	r27, 0x01	; 1
     180:	ea e0       	ldi	r30, 0x0A	; 10
     182:	f8 e1       	ldi	r31, 0x18	; 24
     184:	02 c0       	rjmp	.+4      	; 0x18a <__do_copy_data+0x10>
     186:	05 90       	lpm	r0, Z+
     188:	0d 92       	st	X+, r0
     18a:	a4 39       	cpi	r26, 0x94	; 148
     18c:	b1 07       	cpc	r27, r17
     18e:	d9 f7       	brne	.-10     	; 0x186 <__do_copy_data+0xc>

00000190 <__do_clear_bss>:
     190:	21 e0       	ldi	r18, 0x01	; 1
     192:	a4 e9       	ldi	r26, 0x94	; 148
     194:	b1 e0       	ldi	r27, 0x01	; 1
     196:	01 c0       	rjmp	.+2      	; 0x19a <.do_clear_bss_start>

00000198 <.do_clear_bss_loop>:
     198:	1d 92       	st	X+, r1

0000019a <.do_clear_bss_start>:
     19a:	a8 3c       	cpi	r26, 0xC8	; 200
     19c:	b2 07       	cpc	r27, r18
     19e:	e1 f7       	brne	.-8      	; 0x198 <.do_clear_bss_loop>

000001a0 <__do_global_ctors>:
     1a0:	10 e0       	ldi	r17, 0x00	; 0
     1a2:	c7 eb       	ldi	r28, 0xB7	; 183
     1a4:	d0 e0       	ldi	r29, 0x00	; 0
     1a6:	04 c0       	rjmp	.+8      	; 0x1b0 <__do_global_ctors+0x10>
     1a8:	21 97       	sbiw	r28, 0x01	; 1
     1aa:	fe 01       	movw	r30, r28
     1ac:	0e 94 4b 0a 	call	0x1496	; 0x1496 <__tablejump2__>
     1b0:	c5 3b       	cpi	r28, 0xB5	; 181
     1b2:	d1 07       	cpc	r29, r17
     1b4:	c9 f7       	brne	.-14     	; 0x1a8 <__do_global_ctors+0x8>
     1b6:	0e 94 4a 03 	call	0x694	; 0x694 <main>
     1ba:	0c 94 03 0c 	jmp	0x1806	; 0x1806 <_exit>

000001be <__bad_interrupt>:
     1be:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001c2 <_ZN17Adafruit_MLX90614C1Eh>:
 ****************************************************/

#include "Adafruit_MLX90614.h"
#include "uart.h"
  
Adafruit_MLX90614::Adafruit_MLX90614(uint8_t i2caddr) {
     1c2:	1f 93       	push	r17
     1c4:	cf 93       	push	r28
     1c6:	df 93       	push	r29
     1c8:	ec 01       	movw	r28, r24
     1ca:	16 2f       	mov	r17, r22
	  }
 class I2c
 {
 public:
    I2c()
    {
     1cc:	18 86       	std	Y+8, r1	; 0x08
     1ce:	19 86       	std	Y+9, r1	; 0x09
	    i2c_init();
     1d0:	0e 94 73 03 	call	0x6e6	; 0x6e6 <i2c_init>
  _addr = i2caddr;
     1d4:	1a 87       	std	Y+10, r17	; 0x0a
}
     1d6:	df 91       	pop	r29
     1d8:	cf 91       	pop	r28
     1da:	1f 91       	pop	r17
     1dc:	08 95       	ret

000001de <_ZN17Adafruit_MLX906146read16Eh>:
  return temp;
}

/*********************************************************************/

uint16_t Adafruit_MLX90614::read16(uint8_t a) {
     1de:	0f 93       	push	r16
     1e0:	1f 93       	push	r17
     1e2:	cf 93       	push	r28
     1e4:	8c 01       	movw	r16, r24
     1e6:	c6 2f       	mov	r28, r22
  uint16_t ret;
  Wire.beginTransmission(_addr); // start transmission to device 
     1e8:	fc 01       	movw	r30, r24
     1ea:	82 85       	ldd	r24, Z+10	; 0x0a
    }
     void beginTransmission(uint8_t address)
     {
         m_bufferIndex = 0;
     1ec:	10 86       	std	Z+8, r1	; 0x08

         i2c_start((address << 1) | I2C_WRITE);
     1ee:	88 0f       	add	r24, r24
     1f0:	0e 94 7c 03 	call	0x6f8	; 0x6f8 <i2c_start>
     }

     void write(uint8_t byte)
     {
         if (m_bufferIndex == c_bufferSize)
     1f4:	f8 01       	movw	r30, r16
     1f6:	80 85       	ldd	r24, Z+8	; 0x08
     1f8:	88 30       	cpi	r24, 0x08	; 8
     1fa:	59 f0       	breq	.+22     	; 0x212 <_ZN17Adafruit_MLX906146read16Eh+0x34>
             return;

         m_buffer[m_bufferIndex++] = byte;
     1fc:	91 e0       	ldi	r25, 0x01	; 1
     1fe:	98 0f       	add	r25, r24
     200:	90 87       	std	Z+8, r25	; 0x08
     202:	e8 0f       	add	r30, r24
     204:	f1 1d       	adc	r31, r1
     206:	c0 83       	st	Z, r28
    }

    uint8_t endTransmission(bool stop = true)
    {
         for (uint8_t index = 0; index < m_bufferIndex; ++index) {
     208:	f8 01       	movw	r30, r16
     20a:	80 85       	ldd	r24, Z+8	; 0x08
     20c:	88 23       	and	r24, r24
     20e:	09 f4       	brne	.+2      	; 0x212 <_ZN17Adafruit_MLX906146read16Eh+0x34>
     210:	4e c0       	rjmp	.+156    	; 0x2ae <_ZN17Adafruit_MLX906146read16Eh+0xd0>
  return temp;
}

/*********************************************************************/

uint16_t Adafruit_MLX90614::read16(uint8_t a) {
     212:	c0 e0       	ldi	r28, 0x00	; 0
             if (i2c_write(m_buffer[index]) != 0)
     214:	f8 01       	movw	r30, r16
     216:	ec 0f       	add	r30, r28
     218:	f1 1d       	adc	r31, r1
     21a:	80 81       	ld	r24, Z
     21c:	0e 94 a7 03 	call	0x74e	; 0x74e <i2c_write>
     220:	81 11       	cpse	r24, r1
     222:	45 c0       	rjmp	.+138    	; 0x2ae <_ZN17Adafruit_MLX906146read16Eh+0xd0>
         m_buffer[m_bufferIndex++] = byte;
    }

    uint8_t endTransmission(bool stop = true)
    {
         for (uint8_t index = 0; index < m_bufferIndex; ++index) {
     224:	cf 5f       	subi	r28, 0xFF	; 255
     226:	f8 01       	movw	r30, r16
     228:	80 85       	ldd	r24, Z+8	; 0x08
     22a:	c8 17       	cp	r28, r24
     22c:	98 f3       	brcs	.-26     	; 0x214 <_ZN17Adafruit_MLX906146read16Eh+0x36>
     22e:	3f c0       	rjmp	.+126    	; 0x2ae <_ZN17Adafruit_MLX906146read16Eh+0xd0>
         return m_bufferIndex;
     }

     uint8_t read()
     {
         if (m_bufferReadIndex == m_bufferIndex)
     230:	f8 01       	movw	r30, r16
     232:	91 85       	ldd	r25, Z+9	; 0x09
     234:	80 85       	ldd	r24, Z+8	; 0x08
     236:	98 17       	cp	r25, r24
     238:	b1 f0       	breq	.+44     	; 0x266 <_ZN17Adafruit_MLX906146read16Eh+0x88>
             return 0;
        return m_buffer[m_bufferReadIndex++];
     23a:	41 e0       	ldi	r20, 0x01	; 1
     23c:	49 0f       	add	r20, r25
     23e:	41 87       	std	Z+9, r20	; 0x09
     240:	e9 0f       	add	r30, r25
     242:	f1 1d       	adc	r31, r1
  Wire.beginTransmission(_addr); // start transmission to device 
  Wire.write(a); // sends register address to read from
  Wire.endTransmission(false); // end transmission
  
  Wire.requestFrom(_addr, (uint8_t)3);// send data n-bytes read
  ret = Wire.read(); // receive DATA
     244:	20 81       	ld	r18, Z
     246:	30 e0       	ldi	r19, 0x00	; 0
         return m_bufferIndex;
     }

     uint8_t read()
     {
         if (m_bufferReadIndex == m_bufferIndex)
     248:	84 17       	cp	r24, r20
     24a:	d1 f1       	breq	.+116    	; 0x2c0 <_ZN17Adafruit_MLX906146read16Eh+0xe2>
             return 0;
        return m_buffer[m_bufferReadIndex++];
     24c:	9e 5f       	subi	r25, 0xFE	; 254
     24e:	f8 01       	movw	r30, r16
     250:	91 87       	std	Z+9, r25	; 0x09
     252:	e4 0f       	add	r30, r20
     254:	f1 1d       	adc	r31, r1
  ret |= Wire.read() << 8; // receive DATA
     256:	40 81       	ld	r20, Z
     258:	34 2b       	or	r19, r20
         return m_bufferIndex;
     }

     uint8_t read()
     {
         if (m_bufferReadIndex == m_bufferIndex)
     25a:	98 17       	cp	r25, r24
     25c:	89 f1       	breq	.+98     	; 0x2c0 <_ZN17Adafruit_MLX906146read16Eh+0xe2>
             return 0;
        return m_buffer[m_bufferReadIndex++];
     25e:	9f 5f       	subi	r25, 0xFF	; 255
     260:	f8 01       	movw	r30, r16
     262:	91 87       	std	Z+9, r25	; 0x09
     264:	2d c0       	rjmp	.+90     	; 0x2c0 <_ZN17Adafruit_MLX906146read16Eh+0xe2>
     266:	20 e0       	ldi	r18, 0x00	; 0
     268:	30 e0       	ldi	r19, 0x00	; 0
     26a:	2a c0       	rjmp	.+84     	; 0x2c0 <_ZN17Adafruit_MLX906146read16Eh+0xe2>
         if (i2c_start((address << 1) | I2C_READ) != 0)
             return 0;

        m_bufferIndex = 0;
         while (--quantity > 0) {
             m_buffer[m_bufferIndex++] = i2c_readAck();
     26c:	81 e0       	ldi	r24, 0x01	; 1
     26e:	f8 01       	movw	r30, r16
     270:	80 87       	std	Z+8, r24	; 0x08
     272:	0e 94 b9 03 	call	0x772	; 0x772 <i2c_readAck>
     276:	f8 01       	movw	r30, r16
     278:	80 83       	st	Z, r24
     27a:	c0 85       	ldd	r28, Z+8	; 0x08
     27c:	81 e0       	ldi	r24, 0x01	; 1
     27e:	8c 0f       	add	r24, r28
     280:	80 87       	std	Z+8, r24	; 0x08
     282:	0e 94 b9 03 	call	0x772	; 0x772 <i2c_readAck>
     286:	f8 01       	movw	r30, r16
     288:	ec 0f       	add	r30, r28
     28a:	f1 1d       	adc	r31, r1
     28c:	80 83       	st	Z, r24
         }
         m_buffer[m_bufferIndex++] = i2c_readNak();
     28e:	f8 01       	movw	r30, r16
     290:	c0 85       	ldd	r28, Z+8	; 0x08
     292:	81 e0       	ldi	r24, 0x01	; 1
     294:	8c 0f       	add	r24, r28
     296:	80 87       	std	Z+8, r24	; 0x08
     298:	0e 94 c4 03 	call	0x788	; 0x788 <i2c_readNak>
     29c:	f8 01       	movw	r30, r16
     29e:	ec 0f       	add	r30, r28
     2a0:	f1 1d       	adc	r31, r1
     2a2:	80 83       	st	Z, r24
         m_bufferReadIndex = 0;
     2a4:	f8 01       	movw	r30, r16
     2a6:	11 86       	std	Z+9, r1	; 0x09

         if (stop)
             i2c_stop();
     2a8:	0e 94 a3 03 	call	0x746	; 0x746 <i2c_stop>
     2ac:	c1 cf       	rjmp	.-126    	; 0x230 <_ZN17Adafruit_MLX906146read16Eh+0x52>
     {
        // quantity = Sensors::min(quantity, c_bufferSize);
         if (quantity == 0)
             return 0;

         if (i2c_start((address << 1) | I2C_READ) != 0)
     2ae:	f8 01       	movw	r30, r16
     2b0:	82 85       	ldd	r24, Z+10	; 0x0a
     2b2:	88 0f       	add	r24, r24
     2b4:	81 60       	ori	r24, 0x01	; 1
     2b6:	0e 94 7c 03 	call	0x6f8	; 0x6f8 <i2c_start>
     2ba:	88 23       	and	r24, r24
     2bc:	b9 f2       	breq	.-82     	; 0x26c <_ZN17Adafruit_MLX906146read16Eh+0x8e>
     2be:	b8 cf       	rjmp	.-144    	; 0x230 <_ZN17Adafruit_MLX906146read16Eh+0x52>

  uint8_t pec = Wire.read();

  return ret;
}
     2c0:	c9 01       	movw	r24, r18
     2c2:	cf 91       	pop	r28
     2c4:	1f 91       	pop	r17
     2c6:	0f 91       	pop	r16
     2c8:	08 95       	ret

000002ca <_ZN17Adafruit_MLX906148readTempEh>:
  return readTemp(MLX90614_TA);
}

float Adafruit_MLX90614::readTemp(uint8_t reg) {
  float temp;
  temp = read16(reg);
     2ca:	0e 94 ef 00 	call	0x1de	; 0x1de <_ZN17Adafruit_MLX906146read16Eh>
     2ce:	bc 01       	movw	r22, r24
     2d0:	80 e0       	ldi	r24, 0x00	; 0
     2d2:	90 e0       	ldi	r25, 0x00	; 0
     2d4:	0e 94 52 05 	call	0xaa4	; 0xaa4 <__floatunsisf>
  temp *= .02;
     2d8:	2a e0       	ldi	r18, 0x0A	; 10
     2da:	37 ed       	ldi	r19, 0xD7	; 215
     2dc:	43 ea       	ldi	r20, 0xA3	; 163
     2de:	5c e3       	ldi	r21, 0x3C	; 60
     2e0:	0e 94 09 06 	call	0xc12	; 0xc12 <__mulsf3>
  temp  -= 273.15;
     2e4:	23 e3       	ldi	r18, 0x33	; 51
     2e6:	33 e9       	ldi	r19, 0x93	; 147
     2e8:	48 e8       	ldi	r20, 0x88	; 136
     2ea:	53 e4       	ldi	r21, 0x43	; 67
     2ec:	0e 94 3d 04 	call	0x87a	; 0x87a <__subsf3>
  return temp;
}
     2f0:	08 95       	ret

000002f2 <_ZN17Adafruit_MLX9061415readObjectTempCEv>:
  _addr = i2caddr;
}
//////////////////////////////////////////////////////

double Adafruit_MLX90614::readObjectTempC(void) {
  return readTemp(MLX90614_TOBJ1);
     2f2:	67 e0       	ldi	r22, 0x07	; 7
     2f4:	0e 94 65 01 	call	0x2ca	; 0x2ca <_ZN17Adafruit_MLX906148readTempEh>
}
     2f8:	08 95       	ret

000002fa <_ZN17Adafruit_MLX9061416readAmbientTempCEv>:


double Adafruit_MLX90614::readAmbientTempC(void) {
  return readTemp(MLX90614_TA);
     2fa:	66 e0       	ldi	r22, 0x06	; 6
     2fc:	0e 94 65 01 	call	0x2ca	; 0x2ca <_ZN17Adafruit_MLX906148readTempEh>
}
     300:	08 95       	ret

00000302 <_ZN7HC_SR044initEv>:
// Anything over 400/500 cm (23200/29410 us pulse) is "out of range"
const unsigned long MAX_DIST = 23200;
  
void HC_SR04::init() {
  // The Trigger pin will tell the sensor to range find
  DDRD = 0x20;
     302:	80 e2       	ldi	r24, 0x20	; 32
     304:	8a b9       	out	0x0a, r24	; 10
  PORTD = 0x00;
     306:	1b b8       	out	0x0b, r1	; 11
  clr_pin(PORTD, TRIG_PIN);  
     308:	5d 98       	cbi	0x0b, 5	; 11
     30a:	08 95       	ret

0000030c <_ZN7HC_SR044readEv>:
}
uint8_t HC_SR04::read(){
     30c:	cf 92       	push	r12
     30e:	df 92       	push	r13
     310:	ef 92       	push	r14
     312:	ff 92       	push	r15
     314:	0f 93       	push	r16
     316:	1f 93       	push	r17
     318:	cf 93       	push	r28
     31a:	8c 01       	movw	r16, r24
	float t1;
	float t2;
	float pulse_width;
	
	//set_micro(0);
	clr_pin(PORTD, TRIG_PIN);
     31c:	5d 98       	cbi	0x0b, 5	; 11
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     31e:	8a e0       	ldi	r24, 0x0A	; 10
     320:	8a 95       	dec	r24
     322:	f1 f7       	brne	.-4      	; 0x320 <_ZN7HC_SR044readEv+0x14>
     324:	00 c0       	rjmp	.+0      	; 0x326 <_ZN7HC_SR044readEv+0x1a>
	_delay_us(2);
	// Hold the trigger pin high for at least 10 us
	set_pin(PORTD, TRIG_PIN);
     326:	5d 9a       	sbi	0x0b, 5	; 11
     328:	ea e6       	ldi	r30, 0x6A	; 106
     32a:	ea 95       	dec	r30
     32c:	f1 f7       	brne	.-4      	; 0x32a <_ZN7HC_SR044readEv+0x1e>
     32e:	00 c0       	rjmp	.+0      	; 0x330 <_ZN7HC_SR044readEv+0x24>
	_delay_us(20);
	clr_pin(PORTD, TRIG_PIN);
     330:	5d 98       	cbi	0x0b, 5	; 11
	
	// Wait for pulse on echo pin
	while ((PIND & _BV(ECHO_PIN)) == 0 );
     332:	4e 9b       	sbis	0x09, 6	; 9
     334:	fe cf       	rjmp	.-4      	; 0x332 <_ZN7HC_SR044readEv+0x26>
	// Measure how long the echo pin was held high (pulse width)
	// Note: the micros() counter will overflow after ~70 min
	TCNT1 = 0;
     336:	e4 e8       	ldi	r30, 0x84	; 132
     338:	f0 e0       	ldi	r31, 0x00	; 0
     33a:	11 82       	std	Z+1, r1	; 0x01
     33c:	10 82       	st	Z, r1
	t1 = TCNT1 ;
     33e:	60 81       	ld	r22, Z
     340:	71 81       	ldd	r23, Z+1	; 0x01
     342:	80 e0       	ldi	r24, 0x00	; 0
     344:	90 e0       	ldi	r25, 0x00	; 0
     346:	0e 94 52 05 	call	0xaa4	; 0xaa4 <__floatunsisf>
     34a:	6b 01       	movw	r12, r22
     34c:	7c 01       	movw	r14, r24
	cli();
     34e:	f8 94       	cli

	while ((PIND & _BV(ECHO_PIN)) != 0);
     350:	99 b1       	in	r25, 0x09	; 9
     352:	c9 2f       	mov	r28, r25
     354:	c0 74       	andi	r28, 0x40	; 64
     356:	96 fd       	sbrc	r25, 6
     358:	fb cf       	rjmp	.-10     	; 0x350 <_ZN7HC_SR044readEv+0x44>
	sei();
     35a:	78 94       	sei
	t2 = TCNT1 ;
     35c:	40 91 84 00 	lds	r20, 0x0084
     360:	50 91 85 00 	lds	r21, 0x0085
     364:	ba 01       	movw	r22, r20
     366:	80 e0       	ldi	r24, 0x00	; 0
     368:	90 e0       	ldi	r25, 0x00	; 0
     36a:	0e 94 52 05 	call	0xaa4	; 0xaa4 <__floatunsisf>
	
	pulse_width = (t2 - t1)* 0.5;
     36e:	a7 01       	movw	r20, r14
     370:	96 01       	movw	r18, r12
     372:	0e 94 3d 04 	call	0x87a	; 0x87a <__subsf3>
     376:	20 e0       	ldi	r18, 0x00	; 0
     378:	30 e0       	ldi	r19, 0x00	; 0
     37a:	40 e0       	ldi	r20, 0x00	; 0
     37c:	5f e3       	ldi	r21, 0x3F	; 63
     37e:	0e 94 09 06 	call	0xc12	; 0xc12 <__mulsf3>
     382:	6b 01       	movw	r12, r22
     384:	7c 01       	movw	r14, r24
	
	if ( pulse_width > MAX_DIST ) {
     386:	20 e0       	ldi	r18, 0x00	; 0
     388:	30 e4       	ldi	r19, 0x40	; 64
     38a:	45 eb       	ldi	r20, 0xB5	; 181
     38c:	56 e4       	ldi	r21, 0x46	; 70
     38e:	0e 94 04 06 	call	0xc08	; 0xc08 <__gesf2>
     392:	18 16       	cp	r1, r24
     394:	74 f0       	brlt	.+28     	; 0x3b2 <_ZN7HC_SR044readEv+0xa6>
			return 1;
	}
	// Calculate distance in centimeters and inches. The constants
	// are found in the data-sheet, and calculated from the assumed speed 
	//of sound in air at sea level (~340 m/s).
	cm = pulse_width/ 58;
     396:	20 e0       	ldi	r18, 0x00	; 0
     398:	30 e0       	ldi	r19, 0x00	; 0
     39a:	48 e6       	ldi	r20, 0x68	; 104
     39c:	52 e4       	ldi	r21, 0x42	; 66
     39e:	c7 01       	movw	r24, r14
     3a0:	b6 01       	movw	r22, r12
     3a2:	0e 94 aa 04 	call	0x954	; 0x954 <__divsf3>
	Distance = cm;
     3a6:	f8 01       	movw	r30, r16
     3a8:	60 83       	st	Z, r22
     3aa:	71 83       	std	Z+1, r23	; 0x01
     3ac:	82 83       	std	Z+2, r24	; 0x02
     3ae:	93 83       	std	Z+3, r25	; 0x03
	return 0;
     3b0:	01 c0       	rjmp	.+2      	; 0x3b4 <_ZN7HC_SR044readEv+0xa8>
	pulse_width = (t2 - t1)* 0.5;
	
	if ( pulse_width > MAX_DIST ) {
		
			pulse_width =8888;
			return 1;
     3b2:	c1 e0       	ldi	r28, 0x01	; 1
	// are found in the data-sheet, and calculated from the assumed speed 
	//of sound in air at sea level (~340 m/s).
	cm = pulse_width/ 58;
	Distance = cm;
	return 0;
}
     3b4:	8c 2f       	mov	r24, r28
     3b6:	cf 91       	pop	r28
     3b8:	1f 91       	pop	r17
     3ba:	0f 91       	pop	r16
     3bc:	ff 90       	pop	r15
     3be:	ef 90       	pop	r14
     3c0:	df 90       	pop	r13
     3c2:	cf 90       	pop	r12
     3c4:	08 95       	ret

000003c6 <__vector_14>:

HC_SR04 Sonic;
//VL53L0X TOF;
volatile unsigned long int count = 0; 
ISR(TIMER0_COMPA_vect)
{
     3c6:	1f 92       	push	r1
     3c8:	0f 92       	push	r0
     3ca:	0f b6       	in	r0, 0x3f	; 63
     3cc:	0f 92       	push	r0
     3ce:	11 24       	eor	r1, r1
     3d0:	8f 93       	push	r24
     3d2:	9f 93       	push	r25
     3d4:	af 93       	push	r26
     3d6:	bf 93       	push	r27
	count++;
     3d8:	80 91 94 01 	lds	r24, 0x0194
     3dc:	90 91 95 01 	lds	r25, 0x0195
     3e0:	a0 91 96 01 	lds	r26, 0x0196
     3e4:	b0 91 97 01 	lds	r27, 0x0197
     3e8:	01 96       	adiw	r24, 0x01	; 1
     3ea:	a1 1d       	adc	r26, r1
     3ec:	b1 1d       	adc	r27, r1
     3ee:	80 93 94 01 	sts	0x0194, r24
     3f2:	90 93 95 01 	sts	0x0195, r25
     3f6:	a0 93 96 01 	sts	0x0196, r26
     3fa:	b0 93 97 01 	sts	0x0197, r27
}
     3fe:	bf 91       	pop	r27
     400:	af 91       	pop	r26
     402:	9f 91       	pop	r25
     404:	8f 91       	pop	r24
     406:	0f 90       	pop	r0
     408:	0f be       	out	0x3f, r0	; 63
     40a:	0f 90       	pop	r0
     40c:	1f 90       	pop	r1
     40e:	18 95       	reti

00000410 <__vector_13>:

ISR(TIMER1_OVF_vect){
     410:	1f 92       	push	r1
     412:	0f 92       	push	r0
     414:	0f b6       	in	r0, 0x3f	; 63
     416:	0f 92       	push	r0
     418:	11 24       	eor	r1, r1
	//PORTB ^= _BV(PORTB5);
	//TIFR1 = 0;
}
     41a:	0f 90       	pop	r0
     41c:	0f be       	out	0x3f, r0	; 63
     41e:	0f 90       	pop	r0
     420:	1f 90       	pop	r1
     422:	18 95       	reti

00000424 <_Z5setupv>:
	return count;
}
/*********************************************************************/
void setup(void)
{		
	cli();
     424:	f8 94       	cli
	#endif // _DEBUG
	
	//DDRB |= _BV(PORTB5);
	//PORTB &= ~_BV(PORTB5);
	
	TCNT0 = 0;
     426:	16 bc       	out	0x26, r1	; 38
	TCNT1 = 0;
     428:	10 92 85 00 	sts	0x0085, r1
     42c:	10 92 84 00 	sts	0x0084, r1
	TCCR0A |= (1<<WGM01);
     430:	84 b5       	in	r24, 0x24	; 36
     432:	82 60       	ori	r24, 0x02	; 2
     434:	84 bd       	out	0x24, r24	; 36
	OCR0A = 249;
     436:	89 ef       	ldi	r24, 0xF9	; 249
     438:	87 bd       	out	0x27, r24	; 39
	TIMSK0 |= (1 << OCIE0A);
     43a:	ee e6       	ldi	r30, 0x6E	; 110
     43c:	f0 e0       	ldi	r31, 0x00	; 0
     43e:	80 81       	ld	r24, Z
     440:	82 60       	ori	r24, 0x02	; 2
     442:	80 83       	st	Z, r24
	TIMSK1 |= _BV(TOIE1);
     444:	ef e6       	ldi	r30, 0x6F	; 111
     446:	f0 e0       	ldi	r31, 0x00	; 0
     448:	80 81       	ld	r24, Z
     44a:	81 60       	ori	r24, 0x01	; 1
     44c:	80 83       	st	Z, r24
	TCCR0B |= (1<<CS01) | (1<<CS00);
     44e:	85 b5       	in	r24, 0x25	; 37
     450:	83 60       	ori	r24, 0x03	; 3
     452:	85 bd       	out	0x25, r24	; 37
	TCCR1B |= (1<<CS11);
     454:	e1 e8       	ldi	r30, 0x81	; 129
     456:	f0 e0       	ldi	r31, 0x00	; 0
     458:	80 81       	ld	r24, Z
     45a:	82 60       	ori	r24, 0x02	; 2
     45c:	80 83       	st	Z, r24
	sei();
     45e:	78 94       	sei
	Serial.init(9600);
     460:	60 e8       	ldi	r22, 0x80	; 128
     462:	75 e2       	ldi	r23, 0x25	; 37
     464:	86 eb       	ldi	r24, 0xB6	; 182
     466:	91 e0       	ldi	r25, 0x01	; 1
     468:	0e 94 cf 03 	call	0x79e	; 0x79e <_ZN5USART4initEi>
	Sonic.init();
     46c:	88 e9       	ldi	r24, 0x98	; 152
     46e:	91 e0       	ldi	r25, 0x01	; 1
     470:	0e 94 81 01 	call	0x302	; 0x302 <_ZN7HC_SR044initEv>
     474:	08 95       	ret

00000476 <_Z13IR_sensorReadv>:
// 	TOF.setVcselPulsePeriod(VL53L0X::VcselPeriodPreRange, 16);
// 	TOF.setVcselPulsePeriod(VL53L0X::VcselPeriodFinalRange, 12);
}
/*********************************************************************/
void IR_sensorRead(void )
{
     476:	2f 92       	push	r2
     478:	3f 92       	push	r3
     47a:	4f 92       	push	r4
     47c:	5f 92       	push	r5
     47e:	6f 92       	push	r6
     480:	7f 92       	push	r7
     482:	8f 92       	push	r8
     484:	9f 92       	push	r9
     486:	af 92       	push	r10
     488:	bf 92       	push	r11
     48a:	cf 92       	push	r12
     48c:	df 92       	push	r13
     48e:	ef 92       	push	r14
     490:	ff 92       	push	r15
     492:	0f 93       	push	r16
     494:	1f 93       	push	r17
     496:	cf 93       	push	r28
     498:	df 93       	push	r29
     49a:	cd b7       	in	r28, 0x3d	; 61
     49c:	de b7       	in	r29, 0x3e	; 62
     49e:	ce 5c       	subi	r28, 0xCE	; 206
     4a0:	d1 09       	sbc	r29, r1
     4a2:	0f b6       	in	r0, 0x3f	; 63
     4a4:	f8 94       	cli
     4a6:	de bf       	out	0x3e, r29	; 62
     4a8:	0f be       	out	0x3f, r0	; 63
     4aa:	cd bf       	out	0x3d, r28	; 61
	char str[100], str_out[100] = {""};
     4ac:	19 82       	std	Y+1, r1	; 0x01
     4ae:	1a 82       	std	Y+2, r1	; 0x02
     4b0:	1b 82       	std	Y+3, r1	; 0x03
     4b2:	1c 82       	std	Y+4, r1	; 0x04
     4b4:	fe 01       	movw	r30, r28
     4b6:	35 96       	adiw	r30, 0x05	; 5
     4b8:	80 e6       	ldi	r24, 0x60	; 96
     4ba:	df 01       	movw	r26, r30
     4bc:	1d 92       	st	X+, r1
     4be:	8a 95       	dec	r24
     4c0:	e9 f7       	brne	.-6      	; 0x4bc <_Z13IR_sensorReadv+0x46>
	double obj_1,obj_2,obj_3,obj_4,amb_1,amb_2,amb_3,amb_4,mDistance = 0;
	unsigned long int m_read_time = 0;

 	Sonic.read();
     4c2:	88 e9       	ldi	r24, 0x98	; 152
     4c4:	91 e0       	ldi	r25, 0x01	; 1
     4c6:	0e 94 86 01 	call	0x30c	; 0x30c <_ZN7HC_SR044readEv>
	//TIFR1 = 0;
}
/*********************************************************************/
unsigned long int millis(void)
{
	return count;
     4ca:	c0 90 94 01 	lds	r12, 0x0194
     4ce:	d0 90 95 01 	lds	r13, 0x0195
     4d2:	e0 90 96 01 	lds	r14, 0x0196
     4d6:	f0 90 97 01 	lds	r15, 0x0197
// 	//Read 0x5A
 	m_read_time = millis();	
	#ifdef _DEBUG
		Serial.sendln("> Read 0x5A");
	#endif
	amb_1 = MLX_5a.readAmbientTempC();
     4da:	8b ea       	ldi	r24, 0xAB	; 171
     4dc:	91 e0       	ldi	r25, 0x01	; 1
     4de:	0e 94 7d 01 	call	0x2fa	; 0x2fa <_ZN17Adafruit_MLX9061416readAmbientTempCEv>
     4e2:	56 2e       	mov	r5, r22
     4e4:	47 2e       	mov	r4, r23
     4e6:	38 2e       	mov	r3, r24
     4e8:	29 2e       	mov	r2, r25
 	obj_1 = MLX_5a.readObjectTempC();
     4ea:	8b ea       	ldi	r24, 0xAB	; 171
     4ec:	91 e0       	ldi	r25, 0x01	; 1
     4ee:	0e 94 79 01 	call	0x2f2	; 0x2f2 <_ZN17Adafruit_MLX9061415readObjectTempCEv>
     4f2:	16 2f       	mov	r17, r22
     4f4:	07 2f       	mov	r16, r23
     4f6:	78 2e       	mov	r7, r24
     4f8:	69 2e       	mov	r6, r25

	#ifdef _DEBUG
		Serial.sendln("> Read 0x5B");
	#endif
// 	//Read 0x5B	
 	amb_2 = MLX_5b.readAmbientTempC();
     4fa:	80 ea       	ldi	r24, 0xA0	; 160
     4fc:	91 e0       	ldi	r25, 0x01	; 1
     4fe:	0e 94 7d 01 	call	0x2fa	; 0x2fa <_ZN17Adafruit_MLX9061416readAmbientTempCEv>
     502:	c7 53       	subi	r28, 0x37	; 55
     504:	df 4f       	sbci	r29, 0xFF	; 255
     506:	68 83       	st	Y, r22
     508:	c9 5c       	subi	r28, 0xC9	; 201
     50a:	d0 40       	sbci	r29, 0x00	; 0
     50c:	c6 53       	subi	r28, 0x36	; 54
     50e:	df 4f       	sbci	r29, 0xFF	; 255
     510:	78 83       	st	Y, r23
     512:	ca 5c       	subi	r28, 0xCA	; 202
     514:	d0 40       	sbci	r29, 0x00	; 0
     516:	98 2e       	mov	r9, r24
     518:	89 2e       	mov	r8, r25
	obj_2 = MLX_5b.readObjectTempC();
     51a:	80 ea       	ldi	r24, 0xA0	; 160
     51c:	91 e0       	ldi	r25, 0x01	; 1
     51e:	0e 94 79 01 	call	0x2f2	; 0x2f2 <_ZN17Adafruit_MLX9061415readObjectTempCEv>
     522:	c5 53       	subi	r28, 0x35	; 53
     524:	df 4f       	sbci	r29, 0xFF	; 255
     526:	68 83       	st	Y, r22
     528:	cb 5c       	subi	r28, 0xCB	; 203
     52a:	d0 40       	sbci	r29, 0x00	; 0
     52c:	c4 53       	subi	r28, 0x34	; 52
     52e:	df 4f       	sbci	r29, 0xFF	; 255
     530:	78 83       	st	Y, r23
     532:	cc 5c       	subi	r28, 0xCC	; 204
     534:	d0 40       	sbci	r29, 0x00	; 0
     536:	c3 53       	subi	r28, 0x33	; 51
     538:	df 4f       	sbci	r29, 0xFF	; 255
     53a:	88 83       	st	Y, r24
     53c:	cd 5c       	subi	r28, 0xCD	; 205
     53e:	d0 40       	sbci	r29, 0x00	; 0
     540:	c2 53       	subi	r28, 0x32	; 50
     542:	df 4f       	sbci	r29, 0xFF	; 255
     544:	98 83       	st	Y, r25
     546:	ce 5c       	subi	r28, 0xCE	; 206
     548:	d0 40       	sbci	r29, 0x00	; 0
//
// 	//Read 0x5D
// 	amb_4 = MLX_5d.readAmbientTempC();	
// 	obj_4 = MLX_5d.readObjectTempC();
// 	
 	sprintf(str, "[{\"Sensor\":%d,\"Obj\":%0.1f,\"Amb\":%0.1f,\"Distance\":[%i,%.2f],\"uTime\":%lu}", 1, obj_1, amb_1, (int)Sonic.Distance,mDistance,m_read_time);
     54a:	0f 2e       	mov	r0, r31
     54c:	f8 e9       	ldi	r31, 0x98	; 152
     54e:	af 2e       	mov	r10, r31
     550:	f1 e0       	ldi	r31, 0x01	; 1
     552:	bf 2e       	mov	r11, r31
     554:	f0 2d       	mov	r31, r0
     556:	f5 01       	movw	r30, r10
     558:	60 81       	ld	r22, Z
     55a:	71 81       	ldd	r23, Z+1	; 0x01
     55c:	82 81       	ldd	r24, Z+2	; 0x02
     55e:	93 81       	ldd	r25, Z+3	; 0x03
     560:	ff 92       	push	r15
     562:	ef 92       	push	r14
     564:	df 92       	push	r13
     566:	cf 92       	push	r12
     568:	1f 92       	push	r1
     56a:	1f 92       	push	r1
     56c:	1f 92       	push	r1
     56e:	1f 92       	push	r1
     570:	0e 94 1c 05 	call	0xa38	; 0xa38 <__fixsfsi>
     574:	7f 93       	push	r23
     576:	6f 93       	push	r22
     578:	2f 92       	push	r2
     57a:	3f 92       	push	r3
     57c:	4f 92       	push	r4
     57e:	5f 92       	push	r5
     580:	6f 92       	push	r6
     582:	7f 92       	push	r7
     584:	0f 93       	push	r16
     586:	1f 93       	push	r17
     588:	1f 92       	push	r1
     58a:	81 e0       	ldi	r24, 0x01	; 1
     58c:	8f 93       	push	r24
     58e:	80 e0       	ldi	r24, 0x00	; 0
     590:	91 e0       	ldi	r25, 0x01	; 1
     592:	9f 93       	push	r25
     594:	8f 93       	push	r24
     596:	8e 01       	movw	r16, r28
     598:	0b 59       	subi	r16, 0x9B	; 155
     59a:	1f 4f       	sbci	r17, 0xFF	; 255
     59c:	1f 93       	push	r17
     59e:	0f 93       	push	r16
     5a0:	0e 94 82 0b 	call	0x1704	; 0x1704 <sprintf>
   	strcat(str_out,str);
     5a4:	b8 01       	movw	r22, r16
     5a6:	ce 01       	movw	r24, r28
     5a8:	01 96       	adiw	r24, 0x01	; 1
     5aa:	0e 94 34 0b 	call	0x1668	; 0x1668 <strcat>
	//Serial.sendln(str);
	
	sprintf(str,"{\"Sensor\":%d,\"Obj\":%0.1f,\"Amb\":%0.1f,\"Distance\":[%i,%.2f],\"uTime\":%lu}]", 2, obj_2, amb_2, (int)Sonic.Distance,mDistance,m_read_time);
     5ae:	d5 01       	movw	r26, r10
     5b0:	6d 91       	ld	r22, X+
     5b2:	7d 91       	ld	r23, X+
     5b4:	8d 91       	ld	r24, X+
     5b6:	9c 91       	ld	r25, X
     5b8:	ff 92       	push	r15
     5ba:	ef 92       	push	r14
     5bc:	df 92       	push	r13
     5be:	cf 92       	push	r12
     5c0:	1f 92       	push	r1
     5c2:	1f 92       	push	r1
     5c4:	1f 92       	push	r1
     5c6:	1f 92       	push	r1
     5c8:	0e 94 1c 05 	call	0xa38	; 0xa38 <__fixsfsi>
     5cc:	7f 93       	push	r23
     5ce:	6f 93       	push	r22
     5d0:	8f 92       	push	r8
     5d2:	9f 92       	push	r9
     5d4:	c6 53       	subi	r28, 0x36	; 54
     5d6:	df 4f       	sbci	r29, 0xFF	; 255
     5d8:	b8 81       	ld	r27, Y
     5da:	ca 5c       	subi	r28, 0xCA	; 202
     5dc:	d0 40       	sbci	r29, 0x00	; 0
     5de:	bf 93       	push	r27
     5e0:	c7 53       	subi	r28, 0x37	; 55
     5e2:	df 4f       	sbci	r29, 0xFF	; 255
     5e4:	e8 81       	ld	r30, Y
     5e6:	c9 5c       	subi	r28, 0xC9	; 201
     5e8:	d0 40       	sbci	r29, 0x00	; 0
     5ea:	ef 93       	push	r30
     5ec:	c2 53       	subi	r28, 0x32	; 50
     5ee:	df 4f       	sbci	r29, 0xFF	; 255
     5f0:	f8 81       	ld	r31, Y
     5f2:	ce 5c       	subi	r28, 0xCE	; 206
     5f4:	d0 40       	sbci	r29, 0x00	; 0
     5f6:	ff 93       	push	r31
     5f8:	c3 53       	subi	r28, 0x33	; 51
     5fa:	df 4f       	sbci	r29, 0xFF	; 255
     5fc:	88 81       	ld	r24, Y
     5fe:	cd 5c       	subi	r28, 0xCD	; 205
     600:	d0 40       	sbci	r29, 0x00	; 0
     602:	8f 93       	push	r24
     604:	c4 53       	subi	r28, 0x34	; 52
     606:	df 4f       	sbci	r29, 0xFF	; 255
     608:	98 81       	ld	r25, Y
     60a:	cc 5c       	subi	r28, 0xCC	; 204
     60c:	d0 40       	sbci	r29, 0x00	; 0
     60e:	9f 93       	push	r25
     610:	c5 53       	subi	r28, 0x35	; 53
     612:	df 4f       	sbci	r29, 0xFF	; 255
     614:	a8 81       	ld	r26, Y
     616:	cb 5c       	subi	r28, 0xCB	; 203
     618:	d0 40       	sbci	r29, 0x00	; 0
     61a:	af 93       	push	r26
     61c:	1f 92       	push	r1
     61e:	82 e0       	ldi	r24, 0x02	; 2
     620:	8f 93       	push	r24
     622:	88 e4       	ldi	r24, 0x48	; 72
     624:	91 e0       	ldi	r25, 0x01	; 1
     626:	9f 93       	push	r25
     628:	8f 93       	push	r24
     62a:	1f 93       	push	r17
     62c:	0f 93       	push	r16
     62e:	0e 94 82 0b 	call	0x1704	; 0x1704 <sprintf>
	strcat(str_out,str);
     632:	0f b6       	in	r0, 0x3f	; 63
     634:	f8 94       	cli
     636:	de bf       	out	0x3e, r29	; 62
     638:	0f be       	out	0x3f, r0	; 63
     63a:	cd bf       	out	0x3d, r28	; 61
     63c:	b8 01       	movw	r22, r16
     63e:	ce 01       	movw	r24, r28
     640:	01 96       	adiw	r24, 0x01	; 1
     642:	0e 94 34 0b 	call	0x1668	; 0x1668 <strcat>
		//void send_int(int d);
		void send(double data, int base);
		//void send(uint32_t str);
			
		void sendln(void) {send("\r\n");};
		void sendln(const char* c) {send(c);send("\r\n");};
     646:	be 01       	movw	r22, r28
     648:	6f 5f       	subi	r22, 0xFF	; 255
     64a:	7f 4f       	sbci	r23, 0xFF	; 255
     64c:	86 eb       	ldi	r24, 0xB6	; 182
     64e:	91 e0       	ldi	r25, 0x01	; 1
     650:	0e 94 21 04 	call	0x842	; 0x842 <_ZN5USART4sendEPKc>
     654:	60 e9       	ldi	r22, 0x90	; 144
     656:	71 e0       	ldi	r23, 0x01	; 1
     658:	86 eb       	ldi	r24, 0xB6	; 182
     65a:	91 e0       	ldi	r25, 0x01	; 1
     65c:	0e 94 21 04 	call	0x842	; 0x842 <_ZN5USART4sendEPKc>
// 	
// 	sprintf(str, "{\"Sensor\":%d,\"Obj\":%0.1f,\"Amb\":%0.1f,\"Distance\":[%i,%.2f],\"uTime\":%lu}]", 4, obj_4, amb_4 , (int)Sonic.Distance,mDistance,m_read_time);
// 	strcat(str_out,str);
	 	
	Serial.sendln(str_out);
}
     660:	c2 53       	subi	r28, 0x32	; 50
     662:	df 4f       	sbci	r29, 0xFF	; 255
     664:	0f b6       	in	r0, 0x3f	; 63
     666:	f8 94       	cli
     668:	de bf       	out	0x3e, r29	; 62
     66a:	0f be       	out	0x3f, r0	; 63
     66c:	cd bf       	out	0x3d, r28	; 61
     66e:	df 91       	pop	r29
     670:	cf 91       	pop	r28
     672:	1f 91       	pop	r17
     674:	0f 91       	pop	r16
     676:	ff 90       	pop	r15
     678:	ef 90       	pop	r14
     67a:	df 90       	pop	r13
     67c:	cf 90       	pop	r12
     67e:	bf 90       	pop	r11
     680:	af 90       	pop	r10
     682:	9f 90       	pop	r9
     684:	8f 90       	pop	r8
     686:	7f 90       	pop	r7
     688:	6f 90       	pop	r6
     68a:	5f 90       	pop	r5
     68c:	4f 90       	pop	r4
     68e:	3f 90       	pop	r3
     690:	2f 90       	pop	r2
     692:	08 95       	ret

00000694 <main>:
/*********************************************************************/
int main(void)
{	
	setup();
     694:	0e 94 12 02 	call	0x424	; 0x424 <_Z5setupv>
	//TIFR1 = 0;
}
/*********************************************************************/
unsigned long int millis(void)
{
	return count;
     698:	c0 90 94 01 	lds	r12, 0x0194
     69c:	d0 90 95 01 	lds	r13, 0x0195
     6a0:	e0 90 96 01 	lds	r14, 0x0196
     6a4:	f0 90 97 01 	lds	r15, 0x0197
		unsigned long int start_time;
	    start_time = millis();	
		#ifdef _DEBUG
			Serial.sendln("> Read Sensors...");
		#endif
		IR_sensorRead();
     6a8:	0e 94 3b 02 	call	0x476	; 0x476 <_Z13IR_sensorReadv>
	//TIFR1 = 0;
}
/*********************************************************************/
unsigned long int millis(void)
{
	return count;
     6ac:	80 91 94 01 	lds	r24, 0x0194
     6b0:	90 91 95 01 	lds	r25, 0x0195
     6b4:	a0 91 96 01 	lds	r26, 0x0196
     6b8:	b0 91 97 01 	lds	r27, 0x0197
		#ifdef _DEBUG
			Serial.sendln("> Read Sensors...");
		#endif
		IR_sensorRead();
		//_delay_ms(250);
		while((millis()-start_time) <= 250);
     6bc:	8c 19       	sub	r24, r12
     6be:	9d 09       	sbc	r25, r13
     6c0:	ae 09       	sbc	r26, r14
     6c2:	bf 09       	sbc	r27, r15
     6c4:	8b 3f       	cpi	r24, 0xFB	; 251
     6c6:	91 05       	cpc	r25, r1
     6c8:	a1 05       	cpc	r26, r1
     6ca:	b1 05       	cpc	r27, r1
     6cc:	78 f3       	brcs	.-34     	; 0x6ac <main+0x18>
     6ce:	e4 cf       	rjmp	.-56     	; 0x698 <main+0x4>

000006d0 <_GLOBAL__sub_I_MLX_5a>:
#include "uart.h"
#include "Adafruit_MLX90614.h"
#include "HCSR04.h"
#include "VL53L0X.h"

Adafruit_MLX90614 MLX_5a(0x5A);
     6d0:	6a e5       	ldi	r22, 0x5A	; 90
     6d2:	8b ea       	ldi	r24, 0xAB	; 171
     6d4:	91 e0       	ldi	r25, 0x01	; 1
     6d6:	0e 94 e1 00 	call	0x1c2	; 0x1c2 <_ZN17Adafruit_MLX90614C1Eh>
Adafruit_MLX90614 MLX_5b(0x5B);
     6da:	6b e5       	ldi	r22, 0x5B	; 91
     6dc:	80 ea       	ldi	r24, 0xA0	; 160
     6de:	91 e0       	ldi	r25, 0x01	; 1
     6e0:	0e 94 e1 00 	call	0x1c2	; 0x1c2 <_ZN17Adafruit_MLX90614C1Eh>
     6e4:	08 95       	ret

000006e6 <i2c_init>:
 Initialization of the I2C bus interface. Need to be called only once
*************************************************************************/
void i2c_init(void)
{
  /* initialize TWI clock: 100 kHz clock, TWPS = 0 => prescaler = 1 */
  DDRC = 0;
     6e6:	17 b8       	out	0x07, r1	; 7
  PORTC = (1 << PORTC4) | (1 << PORTC5);//enable pull up
     6e8:	80 e3       	ldi	r24, 0x30	; 48
     6ea:	88 b9       	out	0x08, r24	; 8
  TWSR = 0;                         /* no prescaler */
     6ec:	10 92 b9 00 	sts	0x00B9, r1
  TWBR = ((F_CPU/SCL_CLOCK)-16)/2;  /* must be > 10 for stable operation */
     6f0:	88 e4       	ldi	r24, 0x48	; 72
     6f2:	80 93 b8 00 	sts	0x00B8, r24
     6f6:	08 95       	ret

000006f8 <i2c_start>:
unsigned char i2c_start(unsigned char address)
{
    uint8_t   twst;

	// send START condition
	TWCR = (1<<TWINT) | (1<<TWSTA) | (1<<TWEN);
     6f8:	94 ea       	ldi	r25, 0xA4	; 164
     6fa:	90 93 bc 00 	sts	0x00BC, r25

	// wait until transmission completed
	while(!(TWCR & (1<<TWINT)));
     6fe:	ec eb       	ldi	r30, 0xBC	; 188
     700:	f0 e0       	ldi	r31, 0x00	; 0
     702:	90 81       	ld	r25, Z
     704:	99 23       	and	r25, r25
     706:	ec f7       	brge	.-6      	; 0x702 <i2c_start+0xa>

	// check value of TWI Status Register. Mask prescaler bits.
	twst = TW_STATUS & 0xF8;
     708:	90 91 b9 00 	lds	r25, 0x00B9
     70c:	98 7f       	andi	r25, 0xF8	; 248
	if ( (twst != TW_START) && (twst != TW_REP_START)) return 1;
     70e:	98 30       	cpi	r25, 0x08	; 8
     710:	11 f0       	breq	.+4      	; 0x716 <i2c_start+0x1e>
     712:	90 31       	cpi	r25, 0x10	; 16
     714:	a1 f4       	brne	.+40     	; 0x73e <i2c_start+0x46>

	// send device address
	TWDR = address;
     716:	80 93 bb 00 	sts	0x00BB, r24
	TWCR = (1<<TWINT) | (1<<TWEN);
     71a:	84 e8       	ldi	r24, 0x84	; 132
     71c:	80 93 bc 00 	sts	0x00BC, r24

	// wail until transmission completed and ACK/NACK has been received
	while(!(TWCR & (1<<TWINT)));
     720:	ec eb       	ldi	r30, 0xBC	; 188
     722:	f0 e0       	ldi	r31, 0x00	; 0
     724:	80 81       	ld	r24, Z
     726:	88 23       	and	r24, r24
     728:	ec f7       	brge	.-6      	; 0x724 <i2c_start+0x2c>

	// check value of TWI Status Register. Mask prescaler bits.
	twst = TW_STATUS & 0xF8;
     72a:	90 91 b9 00 	lds	r25, 0x00B9
     72e:	98 7f       	andi	r25, 0xF8	; 248
	if ( (twst != TW_MT_SLA_ACK) && (twst != TW_MR_SLA_ACK) ) return 1;
     730:	98 31       	cpi	r25, 0x18	; 24
     732:	39 f0       	breq	.+14     	; 0x742 <i2c_start+0x4a>
     734:	81 e0       	ldi	r24, 0x01	; 1
     736:	90 34       	cpi	r25, 0x40	; 64
     738:	29 f4       	brne	.+10     	; 0x744 <i2c_start+0x4c>
     73a:	80 e0       	ldi	r24, 0x00	; 0
     73c:	08 95       	ret
	// wait until transmission completed
	while(!(TWCR & (1<<TWINT)));

	// check value of TWI Status Register. Mask prescaler bits.
	twst = TW_STATUS & 0xF8;
	if ( (twst != TW_START) && (twst != TW_REP_START)) return 1;
     73e:	81 e0       	ldi	r24, 0x01	; 1
     740:	08 95       	ret

	// check value of TWI Status Register. Mask prescaler bits.
	twst = TW_STATUS & 0xF8;
	if ( (twst != TW_MT_SLA_ACK) && (twst != TW_MR_SLA_ACK) ) return 1;

	return 0;
     742:	80 e0       	ldi	r24, 0x00	; 0

}/* i2c_start */
     744:	08 95       	ret

00000746 <i2c_stop>:
 Terminates the data transfer and releases the I2C bus
*************************************************************************/
void i2c_stop(void)
{
    /* send stop condition */
	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWSTO);
     746:	84 e9       	ldi	r24, 0x94	; 148
     748:	80 93 bc 00 	sts	0x00BC, r24
     74c:	08 95       	ret

0000074e <i2c_write>:
unsigned char i2c_write( unsigned char data )
{	
    uint8_t   twst;
    
	// send data to the previously addressed device
	TWDR = data;
     74e:	80 93 bb 00 	sts	0x00BB, r24
	TWCR = (1<<TWINT) | (1<<TWEN);
     752:	84 e8       	ldi	r24, 0x84	; 132
     754:	80 93 bc 00 	sts	0x00BC, r24

	// wait until transmission completed
	while(!(TWCR & (1<<TWINT)));
     758:	ec eb       	ldi	r30, 0xBC	; 188
     75a:	f0 e0       	ldi	r31, 0x00	; 0
     75c:	80 81       	ld	r24, Z
     75e:	88 23       	and	r24, r24
     760:	ec f7       	brge	.-6      	; 0x75c <i2c_write+0xe>

	// check value of TWI Status Register. Mask prescaler bits
	twst = TW_STATUS & 0xF8;
     762:	90 91 b9 00 	lds	r25, 0x00B9
     766:	98 7f       	andi	r25, 0xF8	; 248
	if( twst != TW_MT_DATA_ACK) return 1;
     768:	81 e0       	ldi	r24, 0x01	; 1
     76a:	98 32       	cpi	r25, 0x28	; 40
     76c:	09 f4       	brne	.+2      	; 0x770 <i2c_write+0x22>
     76e:	80 e0       	ldi	r24, 0x00	; 0
	return 0;

}/* i2c_write */
     770:	08 95       	ret

00000772 <i2c_readAck>:
 
 Return:  byte read from I2C device
*************************************************************************/
unsigned char i2c_readAck(void)
{
	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWEA);
     772:	84 ec       	ldi	r24, 0xC4	; 196
     774:	80 93 bc 00 	sts	0x00BC, r24
	while(!(TWCR & (1<<TWINT)));    
     778:	ec eb       	ldi	r30, 0xBC	; 188
     77a:	f0 e0       	ldi	r31, 0x00	; 0
     77c:	80 81       	ld	r24, Z
     77e:	88 23       	and	r24, r24
     780:	ec f7       	brge	.-6      	; 0x77c <i2c_readAck+0xa>
    return TWDR;
     782:	80 91 bb 00 	lds	r24, 0x00BB
}/* i2c_readAck */
     786:	08 95       	ret

00000788 <i2c_readNak>:
 
 Return:  byte read from I2C device
*************************************************************************/
unsigned char i2c_readNak(void)
{
	TWCR = (1<<TWINT) | (1<<TWEN);
     788:	84 e8       	ldi	r24, 0x84	; 132
     78a:	80 93 bc 00 	sts	0x00BC, r24
	while(!(TWCR & (1<<TWINT)));
     78e:	ec eb       	ldi	r30, 0xBC	; 188
     790:	f0 e0       	ldi	r31, 0x00	; 0
     792:	80 81       	ld	r24, Z
     794:	88 23       	and	r24, r24
     796:	ec f7       	brge	.-6      	; 0x792 <i2c_readNak+0xa>
    return TWDR;
     798:	80 91 bb 00 	lds	r24, 0x00BB
}/* i2c_readNak */
     79c:	08 95       	ret

0000079e <_ZN5USART4initEi>:
USART Serial; //Initialize new instance of the serial class
//Setup Baud rate in header file
//set to 8 bits, no stop bit, no parity

/*********************************************************************/
void USART::init(int BAUDRATE){
     79e:	0f 93       	push	r16
     7a0:	1f 93       	push	r17
	UBRR0H = (uint8_t)(BAUD_PRESCALLER>>8);
     7a2:	8b 01       	movw	r16, r22
     7a4:	77 0f       	add	r23, r23
     7a6:	22 0b       	sbc	r18, r18
     7a8:	33 0b       	sbc	r19, r19
     7aa:	d9 01       	movw	r26, r18
     7ac:	c8 01       	movw	r24, r16
     7ae:	80 58       	subi	r24, 0x80	; 128
     7b0:	9b 47       	sbci	r25, 0x7B	; 123
     7b2:	a1 4e       	sbci	r26, 0xE1	; 225
     7b4:	bf 4f       	sbci	r27, 0xFF	; 255
     7b6:	88 0f       	add	r24, r24
     7b8:	99 1f       	adc	r25, r25
     7ba:	aa 1f       	adc	r26, r26
     7bc:	bb 1f       	adc	r27, r27
     7be:	88 0f       	add	r24, r24
     7c0:	99 1f       	adc	r25, r25
     7c2:	aa 1f       	adc	r26, r26
     7c4:	bb 1f       	adc	r27, r27
     7c6:	bc 01       	movw	r22, r24
     7c8:	cd 01       	movw	r24, r26
     7ca:	66 0f       	add	r22, r22
     7cc:	77 1f       	adc	r23, r23
     7ce:	88 1f       	adc	r24, r24
     7d0:	99 1f       	adc	r25, r25
     7d2:	00 0f       	add	r16, r16
     7d4:	11 1f       	adc	r17, r17
     7d6:	22 1f       	adc	r18, r18
     7d8:	33 1f       	adc	r19, r19
     7da:	00 0f       	add	r16, r16
     7dc:	11 1f       	adc	r17, r17
     7de:	22 1f       	adc	r18, r18
     7e0:	33 1f       	adc	r19, r19
     7e2:	a9 01       	movw	r20, r18
     7e4:	98 01       	movw	r18, r16
     7e6:	22 0f       	add	r18, r18
     7e8:	33 1f       	adc	r19, r19
     7ea:	44 1f       	adc	r20, r20
     7ec:	55 1f       	adc	r21, r21
     7ee:	22 0f       	add	r18, r18
     7f0:	33 1f       	adc	r19, r19
     7f2:	44 1f       	adc	r20, r20
     7f4:	55 1f       	adc	r21, r21
     7f6:	0e 94 f2 09 	call	0x13e4	; 0x13e4 <__udivmodsi4>
     7fa:	da 01       	movw	r26, r20
     7fc:	c9 01       	movw	r24, r18
     7fe:	01 97       	sbiw	r24, 0x01	; 1
     800:	a1 09       	sbc	r26, r1
     802:	b1 09       	sbc	r27, r1
     804:	89 2f       	mov	r24, r25
     806:	9a 2f       	mov	r25, r26
     808:	ab 2f       	mov	r26, r27
     80a:	bb 27       	eor	r27, r27
     80c:	80 93 c5 00 	sts	0x00C5, r24
	UBRR0L = (uint8_t)(BAUD_PRESCALLER);
     810:	21 50       	subi	r18, 0x01	; 1
     812:	20 93 c4 00 	sts	0x00C4, r18
	UCSR0B = (1<<RXEN0)|(1<<TXEN0);
     816:	e1 ec       	ldi	r30, 0xC1	; 193
     818:	f0 e0       	ldi	r31, 0x00	; 0
     81a:	88 e1       	ldi	r24, 0x18	; 24
     81c:	80 83       	st	Z, r24
	UCSR0C = (1<<UCSZ00)|(1<<UCSZ01);
     81e:	86 e0       	ldi	r24, 0x06	; 6
     820:	80 93 c2 00 	sts	0x00C2, r24

	UCSR0B |= (1 << RXCIE0); // Enable the USART Receive Complete interrupt (USART_RXC)
     824:	80 81       	ld	r24, Z
     826:	80 68       	ori	r24, 0x80	; 128
     828:	80 83       	st	Z, r24
	sei();
     82a:	78 94       	sei
}
     82c:	1f 91       	pop	r17
     82e:	0f 91       	pop	r16
     830:	08 95       	ret

00000832 <_ZN5USART4sendEh>:
 return UDR0;// read buffer
}
/*********************************************************************/
void USART::send(uint8_t data){

	while(!(UCSR0A & (1<<UDRE0))); //wait until buffer is empty
     832:	e0 ec       	ldi	r30, 0xC0	; 192
     834:	f0 e0       	ldi	r31, 0x00	; 0
     836:	80 81       	ld	r24, Z
     838:	85 ff       	sbrs	r24, 5
     83a:	fd cf       	rjmp	.-6      	; 0x836 <_ZN5USART4sendEh+0x4>
	UDR0 = data; //Load data into buffer
     83c:	60 93 c6 00 	sts	0x00C6, r22
     840:	08 95       	ret

00000842 <_ZN5USART4sendEPKc>:
}
/*********************************************************************/
//send one char at a time
void USART::send(const char* StringPtr)
{
     842:	0f 93       	push	r16
     844:	1f 93       	push	r17
     846:	cf 93       	push	r28
     848:	df 93       	push	r29
     84a:	eb 01       	movw	r28, r22
	//st = millis();
	while(*StringPtr != 0x00)
     84c:	68 81       	ld	r22, Y
     84e:	66 23       	and	r22, r22
     850:	41 f0       	breq	.+16     	; 0x862 <_ZN5USART4sendEPKc+0x20>
     852:	8c 01       	movw	r16, r24
     854:	21 96       	adiw	r28, 0x01	; 1
		void init(int BAUDRATE = 9600); 
		bool available(void);
		unsigned char read(void);
		bool flush(void);
		void send(uint8_t data);
		void send(char data) {send((uint8_t)data); };
     856:	c8 01       	movw	r24, r16
     858:	0e 94 19 04 	call	0x832	; 0x832 <_ZN5USART4sendEh>
     85c:	69 91       	ld	r22, Y+
     85e:	61 11       	cpse	r22, r1
     860:	fa cf       	rjmp	.-12     	; 0x856 <_ZN5USART4sendEPKc+0x14>
	{
		send(*StringPtr++);
	}
	//ft = millis();
}
     862:	df 91       	pop	r29
     864:	cf 91       	pop	r28
     866:	1f 91       	pop	r17
     868:	0f 91       	pop	r16
     86a:	08 95       	ret

0000086c <_GLOBAL__sub_I_Wire>:
	  }
 class I2c
 {
 public:
    I2c()
    {
     86c:	ee eb       	ldi	r30, 0xBE	; 190
     86e:	f1 e0       	ldi	r31, 0x01	; 1
     870:	10 86       	std	Z+8, r1	; 0x08
     872:	11 86       	std	Z+9, r1	; 0x09
	    i2c_init();
     874:	0e 94 73 03 	call	0x6e6	; 0x6e6 <i2c_init>
     878:	08 95       	ret

0000087a <__subsf3>:
     87a:	50 58       	subi	r21, 0x80	; 128

0000087c <__addsf3>:
     87c:	bb 27       	eor	r27, r27
     87e:	aa 27       	eor	r26, r26
     880:	0e 94 55 04 	call	0x8aa	; 0x8aa <__addsf3x>
     884:	0c 94 ca 05 	jmp	0xb94	; 0xb94 <__fp_round>
     888:	0e 94 bc 05 	call	0xb78	; 0xb78 <__fp_pscA>
     88c:	38 f0       	brcs	.+14     	; 0x89c <__addsf3+0x20>
     88e:	0e 94 c3 05 	call	0xb86	; 0xb86 <__fp_pscB>
     892:	20 f0       	brcs	.+8      	; 0x89c <__addsf3+0x20>
     894:	39 f4       	brne	.+14     	; 0x8a4 <__addsf3+0x28>
     896:	9f 3f       	cpi	r25, 0xFF	; 255
     898:	19 f4       	brne	.+6      	; 0x8a0 <__addsf3+0x24>
     89a:	26 f4       	brtc	.+8      	; 0x8a4 <__addsf3+0x28>
     89c:	0c 94 b9 05 	jmp	0xb72	; 0xb72 <__fp_nan>
     8a0:	0e f4       	brtc	.+2      	; 0x8a4 <__addsf3+0x28>
     8a2:	e0 95       	com	r30
     8a4:	e7 fb       	bst	r30, 7
     8a6:	0c 94 b3 05 	jmp	0xb66	; 0xb66 <__fp_inf>

000008aa <__addsf3x>:
     8aa:	e9 2f       	mov	r30, r25
     8ac:	0e 94 db 05 	call	0xbb6	; 0xbb6 <__fp_split3>
     8b0:	58 f3       	brcs	.-42     	; 0x888 <__addsf3+0xc>
     8b2:	ba 17       	cp	r27, r26
     8b4:	62 07       	cpc	r22, r18
     8b6:	73 07       	cpc	r23, r19
     8b8:	84 07       	cpc	r24, r20
     8ba:	95 07       	cpc	r25, r21
     8bc:	20 f0       	brcs	.+8      	; 0x8c6 <__addsf3x+0x1c>
     8be:	79 f4       	brne	.+30     	; 0x8de <__addsf3x+0x34>
     8c0:	a6 f5       	brtc	.+104    	; 0x92a <__stack+0x2b>
     8c2:	0c 94 fd 05 	jmp	0xbfa	; 0xbfa <__fp_zero>
     8c6:	0e f4       	brtc	.+2      	; 0x8ca <__addsf3x+0x20>
     8c8:	e0 95       	com	r30
     8ca:	0b 2e       	mov	r0, r27
     8cc:	ba 2f       	mov	r27, r26
     8ce:	a0 2d       	mov	r26, r0
     8d0:	0b 01       	movw	r0, r22
     8d2:	b9 01       	movw	r22, r18
     8d4:	90 01       	movw	r18, r0
     8d6:	0c 01       	movw	r0, r24
     8d8:	ca 01       	movw	r24, r20
     8da:	a0 01       	movw	r20, r0
     8dc:	11 24       	eor	r1, r1
     8de:	ff 27       	eor	r31, r31
     8e0:	59 1b       	sub	r21, r25
     8e2:	99 f0       	breq	.+38     	; 0x90a <__stack+0xb>
     8e4:	59 3f       	cpi	r21, 0xF9	; 249
     8e6:	50 f4       	brcc	.+20     	; 0x8fc <__addsf3x+0x52>
     8e8:	50 3e       	cpi	r21, 0xE0	; 224
     8ea:	68 f1       	brcs	.+90     	; 0x946 <__stack+0x47>
     8ec:	1a 16       	cp	r1, r26
     8ee:	f0 40       	sbci	r31, 0x00	; 0
     8f0:	a2 2f       	mov	r26, r18
     8f2:	23 2f       	mov	r18, r19
     8f4:	34 2f       	mov	r19, r20
     8f6:	44 27       	eor	r20, r20
     8f8:	58 5f       	subi	r21, 0xF8	; 248
     8fa:	f3 cf       	rjmp	.-26     	; 0x8e2 <__addsf3x+0x38>
     8fc:	46 95       	lsr	r20
     8fe:	37 95       	ror	r19
     900:	27 95       	ror	r18
     902:	a7 95       	ror	r26
     904:	f0 40       	sbci	r31, 0x00	; 0
     906:	53 95       	inc	r21
     908:	c9 f7       	brne	.-14     	; 0x8fc <__addsf3x+0x52>
     90a:	7e f4       	brtc	.+30     	; 0x92a <__stack+0x2b>
     90c:	1f 16       	cp	r1, r31
     90e:	ba 0b       	sbc	r27, r26
     910:	62 0b       	sbc	r22, r18
     912:	73 0b       	sbc	r23, r19
     914:	84 0b       	sbc	r24, r20
     916:	ba f0       	brmi	.+46     	; 0x946 <__stack+0x47>
     918:	91 50       	subi	r25, 0x01	; 1
     91a:	a1 f0       	breq	.+40     	; 0x944 <__stack+0x45>
     91c:	ff 0f       	add	r31, r31
     91e:	bb 1f       	adc	r27, r27
     920:	66 1f       	adc	r22, r22
     922:	77 1f       	adc	r23, r23
     924:	88 1f       	adc	r24, r24
     926:	c2 f7       	brpl	.-16     	; 0x918 <__stack+0x19>
     928:	0e c0       	rjmp	.+28     	; 0x946 <__stack+0x47>
     92a:	ba 0f       	add	r27, r26
     92c:	62 1f       	adc	r22, r18
     92e:	73 1f       	adc	r23, r19
     930:	84 1f       	adc	r24, r20
     932:	48 f4       	brcc	.+18     	; 0x946 <__stack+0x47>
     934:	87 95       	ror	r24
     936:	77 95       	ror	r23
     938:	67 95       	ror	r22
     93a:	b7 95       	ror	r27
     93c:	f7 95       	ror	r31
     93e:	9e 3f       	cpi	r25, 0xFE	; 254
     940:	08 f0       	brcs	.+2      	; 0x944 <__stack+0x45>
     942:	b0 cf       	rjmp	.-160    	; 0x8a4 <__addsf3+0x28>
     944:	93 95       	inc	r25
     946:	88 0f       	add	r24, r24
     948:	08 f0       	brcs	.+2      	; 0x94c <__stack+0x4d>
     94a:	99 27       	eor	r25, r25
     94c:	ee 0f       	add	r30, r30
     94e:	97 95       	ror	r25
     950:	87 95       	ror	r24
     952:	08 95       	ret

00000954 <__divsf3>:
     954:	0e 94 be 04 	call	0x97c	; 0x97c <__divsf3x>
     958:	0c 94 ca 05 	jmp	0xb94	; 0xb94 <__fp_round>
     95c:	0e 94 c3 05 	call	0xb86	; 0xb86 <__fp_pscB>
     960:	58 f0       	brcs	.+22     	; 0x978 <__divsf3+0x24>
     962:	0e 94 bc 05 	call	0xb78	; 0xb78 <__fp_pscA>
     966:	40 f0       	brcs	.+16     	; 0x978 <__divsf3+0x24>
     968:	29 f4       	brne	.+10     	; 0x974 <__divsf3+0x20>
     96a:	5f 3f       	cpi	r21, 0xFF	; 255
     96c:	29 f0       	breq	.+10     	; 0x978 <__divsf3+0x24>
     96e:	0c 94 b3 05 	jmp	0xb66	; 0xb66 <__fp_inf>
     972:	51 11       	cpse	r21, r1
     974:	0c 94 fe 05 	jmp	0xbfc	; 0xbfc <__fp_szero>
     978:	0c 94 b9 05 	jmp	0xb72	; 0xb72 <__fp_nan>

0000097c <__divsf3x>:
     97c:	0e 94 db 05 	call	0xbb6	; 0xbb6 <__fp_split3>
     980:	68 f3       	brcs	.-38     	; 0x95c <__divsf3+0x8>

00000982 <__divsf3_pse>:
     982:	99 23       	and	r25, r25
     984:	b1 f3       	breq	.-20     	; 0x972 <__divsf3+0x1e>
     986:	55 23       	and	r21, r21
     988:	91 f3       	breq	.-28     	; 0x96e <__divsf3+0x1a>
     98a:	95 1b       	sub	r25, r21
     98c:	55 0b       	sbc	r21, r21
     98e:	bb 27       	eor	r27, r27
     990:	aa 27       	eor	r26, r26
     992:	62 17       	cp	r22, r18
     994:	73 07       	cpc	r23, r19
     996:	84 07       	cpc	r24, r20
     998:	38 f0       	brcs	.+14     	; 0x9a8 <__divsf3_pse+0x26>
     99a:	9f 5f       	subi	r25, 0xFF	; 255
     99c:	5f 4f       	sbci	r21, 0xFF	; 255
     99e:	22 0f       	add	r18, r18
     9a0:	33 1f       	adc	r19, r19
     9a2:	44 1f       	adc	r20, r20
     9a4:	aa 1f       	adc	r26, r26
     9a6:	a9 f3       	breq	.-22     	; 0x992 <__divsf3_pse+0x10>
     9a8:	35 d0       	rcall	.+106    	; 0xa14 <__divsf3_pse+0x92>
     9aa:	0e 2e       	mov	r0, r30
     9ac:	3a f0       	brmi	.+14     	; 0x9bc <__divsf3_pse+0x3a>
     9ae:	e0 e8       	ldi	r30, 0x80	; 128
     9b0:	32 d0       	rcall	.+100    	; 0xa16 <__divsf3_pse+0x94>
     9b2:	91 50       	subi	r25, 0x01	; 1
     9b4:	50 40       	sbci	r21, 0x00	; 0
     9b6:	e6 95       	lsr	r30
     9b8:	00 1c       	adc	r0, r0
     9ba:	ca f7       	brpl	.-14     	; 0x9ae <__divsf3_pse+0x2c>
     9bc:	2b d0       	rcall	.+86     	; 0xa14 <__divsf3_pse+0x92>
     9be:	fe 2f       	mov	r31, r30
     9c0:	29 d0       	rcall	.+82     	; 0xa14 <__divsf3_pse+0x92>
     9c2:	66 0f       	add	r22, r22
     9c4:	77 1f       	adc	r23, r23
     9c6:	88 1f       	adc	r24, r24
     9c8:	bb 1f       	adc	r27, r27
     9ca:	26 17       	cp	r18, r22
     9cc:	37 07       	cpc	r19, r23
     9ce:	48 07       	cpc	r20, r24
     9d0:	ab 07       	cpc	r26, r27
     9d2:	b0 e8       	ldi	r27, 0x80	; 128
     9d4:	09 f0       	breq	.+2      	; 0x9d8 <__divsf3_pse+0x56>
     9d6:	bb 0b       	sbc	r27, r27
     9d8:	80 2d       	mov	r24, r0
     9da:	bf 01       	movw	r22, r30
     9dc:	ff 27       	eor	r31, r31
     9de:	93 58       	subi	r25, 0x83	; 131
     9e0:	5f 4f       	sbci	r21, 0xFF	; 255
     9e2:	3a f0       	brmi	.+14     	; 0x9f2 <__divsf3_pse+0x70>
     9e4:	9e 3f       	cpi	r25, 0xFE	; 254
     9e6:	51 05       	cpc	r21, r1
     9e8:	78 f0       	brcs	.+30     	; 0xa08 <__divsf3_pse+0x86>
     9ea:	0c 94 b3 05 	jmp	0xb66	; 0xb66 <__fp_inf>
     9ee:	0c 94 fe 05 	jmp	0xbfc	; 0xbfc <__fp_szero>
     9f2:	5f 3f       	cpi	r21, 0xFF	; 255
     9f4:	e4 f3       	brlt	.-8      	; 0x9ee <__divsf3_pse+0x6c>
     9f6:	98 3e       	cpi	r25, 0xE8	; 232
     9f8:	d4 f3       	brlt	.-12     	; 0x9ee <__divsf3_pse+0x6c>
     9fa:	86 95       	lsr	r24
     9fc:	77 95       	ror	r23
     9fe:	67 95       	ror	r22
     a00:	b7 95       	ror	r27
     a02:	f7 95       	ror	r31
     a04:	9f 5f       	subi	r25, 0xFF	; 255
     a06:	c9 f7       	brne	.-14     	; 0x9fa <__divsf3_pse+0x78>
     a08:	88 0f       	add	r24, r24
     a0a:	91 1d       	adc	r25, r1
     a0c:	96 95       	lsr	r25
     a0e:	87 95       	ror	r24
     a10:	97 f9       	bld	r25, 7
     a12:	08 95       	ret
     a14:	e1 e0       	ldi	r30, 0x01	; 1
     a16:	66 0f       	add	r22, r22
     a18:	77 1f       	adc	r23, r23
     a1a:	88 1f       	adc	r24, r24
     a1c:	bb 1f       	adc	r27, r27
     a1e:	62 17       	cp	r22, r18
     a20:	73 07       	cpc	r23, r19
     a22:	84 07       	cpc	r24, r20
     a24:	ba 07       	cpc	r27, r26
     a26:	20 f0       	brcs	.+8      	; 0xa30 <__divsf3_pse+0xae>
     a28:	62 1b       	sub	r22, r18
     a2a:	73 0b       	sbc	r23, r19
     a2c:	84 0b       	sbc	r24, r20
     a2e:	ba 0b       	sbc	r27, r26
     a30:	ee 1f       	adc	r30, r30
     a32:	88 f7       	brcc	.-30     	; 0xa16 <__divsf3_pse+0x94>
     a34:	e0 95       	com	r30
     a36:	08 95       	ret

00000a38 <__fixsfsi>:
     a38:	0e 94 23 05 	call	0xa46	; 0xa46 <__fixunssfsi>
     a3c:	68 94       	set
     a3e:	b1 11       	cpse	r27, r1
     a40:	0c 94 fe 05 	jmp	0xbfc	; 0xbfc <__fp_szero>
     a44:	08 95       	ret

00000a46 <__fixunssfsi>:
     a46:	0e 94 e3 05 	call	0xbc6	; 0xbc6 <__fp_splitA>
     a4a:	88 f0       	brcs	.+34     	; 0xa6e <__fixunssfsi+0x28>
     a4c:	9f 57       	subi	r25, 0x7F	; 127
     a4e:	98 f0       	brcs	.+38     	; 0xa76 <__fixunssfsi+0x30>
     a50:	b9 2f       	mov	r27, r25
     a52:	99 27       	eor	r25, r25
     a54:	b7 51       	subi	r27, 0x17	; 23
     a56:	b0 f0       	brcs	.+44     	; 0xa84 <__fixunssfsi+0x3e>
     a58:	e1 f0       	breq	.+56     	; 0xa92 <__fixunssfsi+0x4c>
     a5a:	66 0f       	add	r22, r22
     a5c:	77 1f       	adc	r23, r23
     a5e:	88 1f       	adc	r24, r24
     a60:	99 1f       	adc	r25, r25
     a62:	1a f0       	brmi	.+6      	; 0xa6a <__fixunssfsi+0x24>
     a64:	ba 95       	dec	r27
     a66:	c9 f7       	brne	.-14     	; 0xa5a <__fixunssfsi+0x14>
     a68:	14 c0       	rjmp	.+40     	; 0xa92 <__fixunssfsi+0x4c>
     a6a:	b1 30       	cpi	r27, 0x01	; 1
     a6c:	91 f0       	breq	.+36     	; 0xa92 <__fixunssfsi+0x4c>
     a6e:	0e 94 fd 05 	call	0xbfa	; 0xbfa <__fp_zero>
     a72:	b1 e0       	ldi	r27, 0x01	; 1
     a74:	08 95       	ret
     a76:	0c 94 fd 05 	jmp	0xbfa	; 0xbfa <__fp_zero>
     a7a:	67 2f       	mov	r22, r23
     a7c:	78 2f       	mov	r23, r24
     a7e:	88 27       	eor	r24, r24
     a80:	b8 5f       	subi	r27, 0xF8	; 248
     a82:	39 f0       	breq	.+14     	; 0xa92 <__fixunssfsi+0x4c>
     a84:	b9 3f       	cpi	r27, 0xF9	; 249
     a86:	cc f3       	brlt	.-14     	; 0xa7a <__fixunssfsi+0x34>
     a88:	86 95       	lsr	r24
     a8a:	77 95       	ror	r23
     a8c:	67 95       	ror	r22
     a8e:	b3 95       	inc	r27
     a90:	d9 f7       	brne	.-10     	; 0xa88 <__fixunssfsi+0x42>
     a92:	3e f4       	brtc	.+14     	; 0xaa2 <__fixunssfsi+0x5c>
     a94:	90 95       	com	r25
     a96:	80 95       	com	r24
     a98:	70 95       	com	r23
     a9a:	61 95       	neg	r22
     a9c:	7f 4f       	sbci	r23, 0xFF	; 255
     a9e:	8f 4f       	sbci	r24, 0xFF	; 255
     aa0:	9f 4f       	sbci	r25, 0xFF	; 255
     aa2:	08 95       	ret

00000aa4 <__floatunsisf>:
     aa4:	e8 94       	clt
     aa6:	09 c0       	rjmp	.+18     	; 0xaba <__floatsisf+0x12>

00000aa8 <__floatsisf>:
     aa8:	97 fb       	bst	r25, 7
     aaa:	3e f4       	brtc	.+14     	; 0xaba <__floatsisf+0x12>
     aac:	90 95       	com	r25
     aae:	80 95       	com	r24
     ab0:	70 95       	com	r23
     ab2:	61 95       	neg	r22
     ab4:	7f 4f       	sbci	r23, 0xFF	; 255
     ab6:	8f 4f       	sbci	r24, 0xFF	; 255
     ab8:	9f 4f       	sbci	r25, 0xFF	; 255
     aba:	99 23       	and	r25, r25
     abc:	a9 f0       	breq	.+42     	; 0xae8 <__floatsisf+0x40>
     abe:	f9 2f       	mov	r31, r25
     ac0:	96 e9       	ldi	r25, 0x96	; 150
     ac2:	bb 27       	eor	r27, r27
     ac4:	93 95       	inc	r25
     ac6:	f6 95       	lsr	r31
     ac8:	87 95       	ror	r24
     aca:	77 95       	ror	r23
     acc:	67 95       	ror	r22
     ace:	b7 95       	ror	r27
     ad0:	f1 11       	cpse	r31, r1
     ad2:	f8 cf       	rjmp	.-16     	; 0xac4 <__floatsisf+0x1c>
     ad4:	fa f4       	brpl	.+62     	; 0xb14 <__floatsisf+0x6c>
     ad6:	bb 0f       	add	r27, r27
     ad8:	11 f4       	brne	.+4      	; 0xade <__floatsisf+0x36>
     ada:	60 ff       	sbrs	r22, 0
     adc:	1b c0       	rjmp	.+54     	; 0xb14 <__floatsisf+0x6c>
     ade:	6f 5f       	subi	r22, 0xFF	; 255
     ae0:	7f 4f       	sbci	r23, 0xFF	; 255
     ae2:	8f 4f       	sbci	r24, 0xFF	; 255
     ae4:	9f 4f       	sbci	r25, 0xFF	; 255
     ae6:	16 c0       	rjmp	.+44     	; 0xb14 <__floatsisf+0x6c>
     ae8:	88 23       	and	r24, r24
     aea:	11 f0       	breq	.+4      	; 0xaf0 <__floatsisf+0x48>
     aec:	96 e9       	ldi	r25, 0x96	; 150
     aee:	11 c0       	rjmp	.+34     	; 0xb12 <__floatsisf+0x6a>
     af0:	77 23       	and	r23, r23
     af2:	21 f0       	breq	.+8      	; 0xafc <__floatsisf+0x54>
     af4:	9e e8       	ldi	r25, 0x8E	; 142
     af6:	87 2f       	mov	r24, r23
     af8:	76 2f       	mov	r23, r22
     afa:	05 c0       	rjmp	.+10     	; 0xb06 <__floatsisf+0x5e>
     afc:	66 23       	and	r22, r22
     afe:	71 f0       	breq	.+28     	; 0xb1c <__floatsisf+0x74>
     b00:	96 e8       	ldi	r25, 0x86	; 134
     b02:	86 2f       	mov	r24, r22
     b04:	70 e0       	ldi	r23, 0x00	; 0
     b06:	60 e0       	ldi	r22, 0x00	; 0
     b08:	2a f0       	brmi	.+10     	; 0xb14 <__floatsisf+0x6c>
     b0a:	9a 95       	dec	r25
     b0c:	66 0f       	add	r22, r22
     b0e:	77 1f       	adc	r23, r23
     b10:	88 1f       	adc	r24, r24
     b12:	da f7       	brpl	.-10     	; 0xb0a <__floatsisf+0x62>
     b14:	88 0f       	add	r24, r24
     b16:	96 95       	lsr	r25
     b18:	87 95       	ror	r24
     b1a:	97 f9       	bld	r25, 7
     b1c:	08 95       	ret

00000b1e <__fp_cmp>:
     b1e:	99 0f       	add	r25, r25
     b20:	00 08       	sbc	r0, r0
     b22:	55 0f       	add	r21, r21
     b24:	aa 0b       	sbc	r26, r26
     b26:	e0 e8       	ldi	r30, 0x80	; 128
     b28:	fe ef       	ldi	r31, 0xFE	; 254
     b2a:	16 16       	cp	r1, r22
     b2c:	17 06       	cpc	r1, r23
     b2e:	e8 07       	cpc	r30, r24
     b30:	f9 07       	cpc	r31, r25
     b32:	c0 f0       	brcs	.+48     	; 0xb64 <__fp_cmp+0x46>
     b34:	12 16       	cp	r1, r18
     b36:	13 06       	cpc	r1, r19
     b38:	e4 07       	cpc	r30, r20
     b3a:	f5 07       	cpc	r31, r21
     b3c:	98 f0       	brcs	.+38     	; 0xb64 <__fp_cmp+0x46>
     b3e:	62 1b       	sub	r22, r18
     b40:	73 0b       	sbc	r23, r19
     b42:	84 0b       	sbc	r24, r20
     b44:	95 0b       	sbc	r25, r21
     b46:	39 f4       	brne	.+14     	; 0xb56 <__fp_cmp+0x38>
     b48:	0a 26       	eor	r0, r26
     b4a:	61 f0       	breq	.+24     	; 0xb64 <__fp_cmp+0x46>
     b4c:	23 2b       	or	r18, r19
     b4e:	24 2b       	or	r18, r20
     b50:	25 2b       	or	r18, r21
     b52:	21 f4       	brne	.+8      	; 0xb5c <__fp_cmp+0x3e>
     b54:	08 95       	ret
     b56:	0a 26       	eor	r0, r26
     b58:	09 f4       	brne	.+2      	; 0xb5c <__fp_cmp+0x3e>
     b5a:	a1 40       	sbci	r26, 0x01	; 1
     b5c:	a6 95       	lsr	r26
     b5e:	8f ef       	ldi	r24, 0xFF	; 255
     b60:	81 1d       	adc	r24, r1
     b62:	81 1d       	adc	r24, r1
     b64:	08 95       	ret

00000b66 <__fp_inf>:
     b66:	97 f9       	bld	r25, 7
     b68:	9f 67       	ori	r25, 0x7F	; 127
     b6a:	80 e8       	ldi	r24, 0x80	; 128
     b6c:	70 e0       	ldi	r23, 0x00	; 0
     b6e:	60 e0       	ldi	r22, 0x00	; 0
     b70:	08 95       	ret

00000b72 <__fp_nan>:
     b72:	9f ef       	ldi	r25, 0xFF	; 255
     b74:	80 ec       	ldi	r24, 0xC0	; 192
     b76:	08 95       	ret

00000b78 <__fp_pscA>:
     b78:	00 24       	eor	r0, r0
     b7a:	0a 94       	dec	r0
     b7c:	16 16       	cp	r1, r22
     b7e:	17 06       	cpc	r1, r23
     b80:	18 06       	cpc	r1, r24
     b82:	09 06       	cpc	r0, r25
     b84:	08 95       	ret

00000b86 <__fp_pscB>:
     b86:	00 24       	eor	r0, r0
     b88:	0a 94       	dec	r0
     b8a:	12 16       	cp	r1, r18
     b8c:	13 06       	cpc	r1, r19
     b8e:	14 06       	cpc	r1, r20
     b90:	05 06       	cpc	r0, r21
     b92:	08 95       	ret

00000b94 <__fp_round>:
     b94:	09 2e       	mov	r0, r25
     b96:	03 94       	inc	r0
     b98:	00 0c       	add	r0, r0
     b9a:	11 f4       	brne	.+4      	; 0xba0 <__fp_round+0xc>
     b9c:	88 23       	and	r24, r24
     b9e:	52 f0       	brmi	.+20     	; 0xbb4 <__fp_round+0x20>
     ba0:	bb 0f       	add	r27, r27
     ba2:	40 f4       	brcc	.+16     	; 0xbb4 <__fp_round+0x20>
     ba4:	bf 2b       	or	r27, r31
     ba6:	11 f4       	brne	.+4      	; 0xbac <__fp_round+0x18>
     ba8:	60 ff       	sbrs	r22, 0
     baa:	04 c0       	rjmp	.+8      	; 0xbb4 <__fp_round+0x20>
     bac:	6f 5f       	subi	r22, 0xFF	; 255
     bae:	7f 4f       	sbci	r23, 0xFF	; 255
     bb0:	8f 4f       	sbci	r24, 0xFF	; 255
     bb2:	9f 4f       	sbci	r25, 0xFF	; 255
     bb4:	08 95       	ret

00000bb6 <__fp_split3>:
     bb6:	57 fd       	sbrc	r21, 7
     bb8:	90 58       	subi	r25, 0x80	; 128
     bba:	44 0f       	add	r20, r20
     bbc:	55 1f       	adc	r21, r21
     bbe:	59 f0       	breq	.+22     	; 0xbd6 <__fp_splitA+0x10>
     bc0:	5f 3f       	cpi	r21, 0xFF	; 255
     bc2:	71 f0       	breq	.+28     	; 0xbe0 <__fp_splitA+0x1a>
     bc4:	47 95       	ror	r20

00000bc6 <__fp_splitA>:
     bc6:	88 0f       	add	r24, r24
     bc8:	97 fb       	bst	r25, 7
     bca:	99 1f       	adc	r25, r25
     bcc:	61 f0       	breq	.+24     	; 0xbe6 <__fp_splitA+0x20>
     bce:	9f 3f       	cpi	r25, 0xFF	; 255
     bd0:	79 f0       	breq	.+30     	; 0xbf0 <__fp_splitA+0x2a>
     bd2:	87 95       	ror	r24
     bd4:	08 95       	ret
     bd6:	12 16       	cp	r1, r18
     bd8:	13 06       	cpc	r1, r19
     bda:	14 06       	cpc	r1, r20
     bdc:	55 1f       	adc	r21, r21
     bde:	f2 cf       	rjmp	.-28     	; 0xbc4 <__fp_split3+0xe>
     be0:	46 95       	lsr	r20
     be2:	f1 df       	rcall	.-30     	; 0xbc6 <__fp_splitA>
     be4:	08 c0       	rjmp	.+16     	; 0xbf6 <__fp_splitA+0x30>
     be6:	16 16       	cp	r1, r22
     be8:	17 06       	cpc	r1, r23
     bea:	18 06       	cpc	r1, r24
     bec:	99 1f       	adc	r25, r25
     bee:	f1 cf       	rjmp	.-30     	; 0xbd2 <__fp_splitA+0xc>
     bf0:	86 95       	lsr	r24
     bf2:	71 05       	cpc	r23, r1
     bf4:	61 05       	cpc	r22, r1
     bf6:	08 94       	sec
     bf8:	08 95       	ret

00000bfa <__fp_zero>:
     bfa:	e8 94       	clt

00000bfc <__fp_szero>:
     bfc:	bb 27       	eor	r27, r27
     bfe:	66 27       	eor	r22, r22
     c00:	77 27       	eor	r23, r23
     c02:	cb 01       	movw	r24, r22
     c04:	97 f9       	bld	r25, 7
     c06:	08 95       	ret

00000c08 <__gesf2>:
     c08:	0e 94 8f 05 	call	0xb1e	; 0xb1e <__fp_cmp>
     c0c:	08 f4       	brcc	.+2      	; 0xc10 <__gesf2+0x8>
     c0e:	8f ef       	ldi	r24, 0xFF	; 255
     c10:	08 95       	ret

00000c12 <__mulsf3>:
     c12:	0e 94 1c 06 	call	0xc38	; 0xc38 <__mulsf3x>
     c16:	0c 94 ca 05 	jmp	0xb94	; 0xb94 <__fp_round>
     c1a:	0e 94 bc 05 	call	0xb78	; 0xb78 <__fp_pscA>
     c1e:	38 f0       	brcs	.+14     	; 0xc2e <__mulsf3+0x1c>
     c20:	0e 94 c3 05 	call	0xb86	; 0xb86 <__fp_pscB>
     c24:	20 f0       	brcs	.+8      	; 0xc2e <__mulsf3+0x1c>
     c26:	95 23       	and	r25, r21
     c28:	11 f0       	breq	.+4      	; 0xc2e <__mulsf3+0x1c>
     c2a:	0c 94 b3 05 	jmp	0xb66	; 0xb66 <__fp_inf>
     c2e:	0c 94 b9 05 	jmp	0xb72	; 0xb72 <__fp_nan>
     c32:	11 24       	eor	r1, r1
     c34:	0c 94 fe 05 	jmp	0xbfc	; 0xbfc <__fp_szero>

00000c38 <__mulsf3x>:
     c38:	0e 94 db 05 	call	0xbb6	; 0xbb6 <__fp_split3>
     c3c:	70 f3       	brcs	.-36     	; 0xc1a <__mulsf3+0x8>

00000c3e <__mulsf3_pse>:
     c3e:	95 9f       	mul	r25, r21
     c40:	c1 f3       	breq	.-16     	; 0xc32 <__mulsf3+0x20>
     c42:	95 0f       	add	r25, r21
     c44:	50 e0       	ldi	r21, 0x00	; 0
     c46:	55 1f       	adc	r21, r21
     c48:	62 9f       	mul	r22, r18
     c4a:	f0 01       	movw	r30, r0
     c4c:	72 9f       	mul	r23, r18
     c4e:	bb 27       	eor	r27, r27
     c50:	f0 0d       	add	r31, r0
     c52:	b1 1d       	adc	r27, r1
     c54:	63 9f       	mul	r22, r19
     c56:	aa 27       	eor	r26, r26
     c58:	f0 0d       	add	r31, r0
     c5a:	b1 1d       	adc	r27, r1
     c5c:	aa 1f       	adc	r26, r26
     c5e:	64 9f       	mul	r22, r20
     c60:	66 27       	eor	r22, r22
     c62:	b0 0d       	add	r27, r0
     c64:	a1 1d       	adc	r26, r1
     c66:	66 1f       	adc	r22, r22
     c68:	82 9f       	mul	r24, r18
     c6a:	22 27       	eor	r18, r18
     c6c:	b0 0d       	add	r27, r0
     c6e:	a1 1d       	adc	r26, r1
     c70:	62 1f       	adc	r22, r18
     c72:	73 9f       	mul	r23, r19
     c74:	b0 0d       	add	r27, r0
     c76:	a1 1d       	adc	r26, r1
     c78:	62 1f       	adc	r22, r18
     c7a:	83 9f       	mul	r24, r19
     c7c:	a0 0d       	add	r26, r0
     c7e:	61 1d       	adc	r22, r1
     c80:	22 1f       	adc	r18, r18
     c82:	74 9f       	mul	r23, r20
     c84:	33 27       	eor	r19, r19
     c86:	a0 0d       	add	r26, r0
     c88:	61 1d       	adc	r22, r1
     c8a:	23 1f       	adc	r18, r19
     c8c:	84 9f       	mul	r24, r20
     c8e:	60 0d       	add	r22, r0
     c90:	21 1d       	adc	r18, r1
     c92:	82 2f       	mov	r24, r18
     c94:	76 2f       	mov	r23, r22
     c96:	6a 2f       	mov	r22, r26
     c98:	11 24       	eor	r1, r1
     c9a:	9f 57       	subi	r25, 0x7F	; 127
     c9c:	50 40       	sbci	r21, 0x00	; 0
     c9e:	9a f0       	brmi	.+38     	; 0xcc6 <__mulsf3_pse+0x88>
     ca0:	f1 f0       	breq	.+60     	; 0xcde <__mulsf3_pse+0xa0>
     ca2:	88 23       	and	r24, r24
     ca4:	4a f0       	brmi	.+18     	; 0xcb8 <__mulsf3_pse+0x7a>
     ca6:	ee 0f       	add	r30, r30
     ca8:	ff 1f       	adc	r31, r31
     caa:	bb 1f       	adc	r27, r27
     cac:	66 1f       	adc	r22, r22
     cae:	77 1f       	adc	r23, r23
     cb0:	88 1f       	adc	r24, r24
     cb2:	91 50       	subi	r25, 0x01	; 1
     cb4:	50 40       	sbci	r21, 0x00	; 0
     cb6:	a9 f7       	brne	.-22     	; 0xca2 <__mulsf3_pse+0x64>
     cb8:	9e 3f       	cpi	r25, 0xFE	; 254
     cba:	51 05       	cpc	r21, r1
     cbc:	80 f0       	brcs	.+32     	; 0xcde <__mulsf3_pse+0xa0>
     cbe:	0c 94 b3 05 	jmp	0xb66	; 0xb66 <__fp_inf>
     cc2:	0c 94 fe 05 	jmp	0xbfc	; 0xbfc <__fp_szero>
     cc6:	5f 3f       	cpi	r21, 0xFF	; 255
     cc8:	e4 f3       	brlt	.-8      	; 0xcc2 <__mulsf3_pse+0x84>
     cca:	98 3e       	cpi	r25, 0xE8	; 232
     ccc:	d4 f3       	brlt	.-12     	; 0xcc2 <__mulsf3_pse+0x84>
     cce:	86 95       	lsr	r24
     cd0:	77 95       	ror	r23
     cd2:	67 95       	ror	r22
     cd4:	b7 95       	ror	r27
     cd6:	f7 95       	ror	r31
     cd8:	e7 95       	ror	r30
     cda:	9f 5f       	subi	r25, 0xFF	; 255
     cdc:	c1 f7       	brne	.-16     	; 0xcce <__mulsf3_pse+0x90>
     cde:	fe 2b       	or	r31, r30
     ce0:	88 0f       	add	r24, r24
     ce2:	91 1d       	adc	r25, r1
     ce4:	96 95       	lsr	r25
     ce6:	87 95       	ror	r24
     ce8:	97 f9       	bld	r25, 7
     cea:	08 95       	ret

00000cec <vfprintf>:
     cec:	a3 e1       	ldi	r26, 0x13	; 19
     cee:	b0 e0       	ldi	r27, 0x00	; 0
     cf0:	ec e7       	ldi	r30, 0x7C	; 124
     cf2:	f6 e0       	ldi	r31, 0x06	; 6
     cf4:	0c 94 14 0a 	jmp	0x1428	; 0x1428 <__prologue_saves__>
     cf8:	6c 01       	movw	r12, r24
     cfa:	4b 01       	movw	r8, r22
     cfc:	2a 01       	movw	r4, r20
     cfe:	fc 01       	movw	r30, r24
     d00:	17 82       	std	Z+7, r1	; 0x07
     d02:	16 82       	std	Z+6, r1	; 0x06
     d04:	83 81       	ldd	r24, Z+3	; 0x03
     d06:	81 ff       	sbrs	r24, 1
     d08:	43 c3       	rjmp	.+1670   	; 0x1390 <vfprintf+0x6a4>
     d0a:	ae 01       	movw	r20, r28
     d0c:	4f 5f       	subi	r20, 0xFF	; 255
     d0e:	5f 4f       	sbci	r21, 0xFF	; 255
     d10:	3a 01       	movw	r6, r20
     d12:	f6 01       	movw	r30, r12
     d14:	93 81       	ldd	r25, Z+3	; 0x03
     d16:	f4 01       	movw	r30, r8
     d18:	93 fd       	sbrc	r25, 3
     d1a:	85 91       	lpm	r24, Z+
     d1c:	93 ff       	sbrs	r25, 3
     d1e:	81 91       	ld	r24, Z+
     d20:	4f 01       	movw	r8, r30
     d22:	88 23       	and	r24, r24
     d24:	09 f4       	brne	.+2      	; 0xd28 <vfprintf+0x3c>
     d26:	30 c3       	rjmp	.+1632   	; 0x1388 <vfprintf+0x69c>
     d28:	85 32       	cpi	r24, 0x25	; 37
     d2a:	39 f4       	brne	.+14     	; 0xd3a <vfprintf+0x4e>
     d2c:	93 fd       	sbrc	r25, 3
     d2e:	85 91       	lpm	r24, Z+
     d30:	93 ff       	sbrs	r25, 3
     d32:	81 91       	ld	r24, Z+
     d34:	4f 01       	movw	r8, r30
     d36:	85 32       	cpi	r24, 0x25	; 37
     d38:	39 f4       	brne	.+14     	; 0xd48 <vfprintf+0x5c>
     d3a:	b6 01       	movw	r22, r12
     d3c:	90 e0       	ldi	r25, 0x00	; 0
     d3e:	0e 94 4a 0b 	call	0x1694	; 0x1694 <fputc>
     d42:	52 01       	movw	r10, r4
     d44:	25 01       	movw	r4, r10
     d46:	e5 cf       	rjmp	.-54     	; 0xd12 <vfprintf+0x26>
     d48:	10 e0       	ldi	r17, 0x00	; 0
     d4a:	f1 2c       	mov	r15, r1
     d4c:	20 e0       	ldi	r18, 0x00	; 0
     d4e:	20 32       	cpi	r18, 0x20	; 32
     d50:	a0 f4       	brcc	.+40     	; 0xd7a <vfprintf+0x8e>
     d52:	8b 32       	cpi	r24, 0x2B	; 43
     d54:	69 f0       	breq	.+26     	; 0xd70 <vfprintf+0x84>
     d56:	30 f4       	brcc	.+12     	; 0xd64 <vfprintf+0x78>
     d58:	80 32       	cpi	r24, 0x20	; 32
     d5a:	59 f0       	breq	.+22     	; 0xd72 <vfprintf+0x86>
     d5c:	83 32       	cpi	r24, 0x23	; 35
     d5e:	69 f4       	brne	.+26     	; 0xd7a <vfprintf+0x8e>
     d60:	20 61       	ori	r18, 0x10	; 16
     d62:	2c c0       	rjmp	.+88     	; 0xdbc <vfprintf+0xd0>
     d64:	8d 32       	cpi	r24, 0x2D	; 45
     d66:	39 f0       	breq	.+14     	; 0xd76 <vfprintf+0x8a>
     d68:	80 33       	cpi	r24, 0x30	; 48
     d6a:	39 f4       	brne	.+14     	; 0xd7a <vfprintf+0x8e>
     d6c:	21 60       	ori	r18, 0x01	; 1
     d6e:	26 c0       	rjmp	.+76     	; 0xdbc <vfprintf+0xd0>
     d70:	22 60       	ori	r18, 0x02	; 2
     d72:	24 60       	ori	r18, 0x04	; 4
     d74:	23 c0       	rjmp	.+70     	; 0xdbc <vfprintf+0xd0>
     d76:	28 60       	ori	r18, 0x08	; 8
     d78:	21 c0       	rjmp	.+66     	; 0xdbc <vfprintf+0xd0>
     d7a:	27 fd       	sbrc	r18, 7
     d7c:	27 c0       	rjmp	.+78     	; 0xdcc <vfprintf+0xe0>
     d7e:	30 ed       	ldi	r19, 0xD0	; 208
     d80:	38 0f       	add	r19, r24
     d82:	3a 30       	cpi	r19, 0x0A	; 10
     d84:	78 f4       	brcc	.+30     	; 0xda4 <vfprintf+0xb8>
     d86:	26 ff       	sbrs	r18, 6
     d88:	06 c0       	rjmp	.+12     	; 0xd96 <vfprintf+0xaa>
     d8a:	fa e0       	ldi	r31, 0x0A	; 10
     d8c:	1f 9f       	mul	r17, r31
     d8e:	30 0d       	add	r19, r0
     d90:	11 24       	eor	r1, r1
     d92:	13 2f       	mov	r17, r19
     d94:	13 c0       	rjmp	.+38     	; 0xdbc <vfprintf+0xd0>
     d96:	4a e0       	ldi	r20, 0x0A	; 10
     d98:	f4 9e       	mul	r15, r20
     d9a:	30 0d       	add	r19, r0
     d9c:	11 24       	eor	r1, r1
     d9e:	f3 2e       	mov	r15, r19
     da0:	20 62       	ori	r18, 0x20	; 32
     da2:	0c c0       	rjmp	.+24     	; 0xdbc <vfprintf+0xd0>
     da4:	8e 32       	cpi	r24, 0x2E	; 46
     da6:	21 f4       	brne	.+8      	; 0xdb0 <vfprintf+0xc4>
     da8:	26 fd       	sbrc	r18, 6
     daa:	ee c2       	rjmp	.+1500   	; 0x1388 <vfprintf+0x69c>
     dac:	20 64       	ori	r18, 0x40	; 64
     dae:	06 c0       	rjmp	.+12     	; 0xdbc <vfprintf+0xd0>
     db0:	8c 36       	cpi	r24, 0x6C	; 108
     db2:	11 f4       	brne	.+4      	; 0xdb8 <vfprintf+0xcc>
     db4:	20 68       	ori	r18, 0x80	; 128
     db6:	02 c0       	rjmp	.+4      	; 0xdbc <vfprintf+0xd0>
     db8:	88 36       	cpi	r24, 0x68	; 104
     dba:	41 f4       	brne	.+16     	; 0xdcc <vfprintf+0xe0>
     dbc:	f4 01       	movw	r30, r8
     dbe:	93 fd       	sbrc	r25, 3
     dc0:	85 91       	lpm	r24, Z+
     dc2:	93 ff       	sbrs	r25, 3
     dc4:	81 91       	ld	r24, Z+
     dc6:	4f 01       	movw	r8, r30
     dc8:	81 11       	cpse	r24, r1
     dca:	c1 cf       	rjmp	.-126    	; 0xd4e <vfprintf+0x62>
     dcc:	9b eb       	ldi	r25, 0xBB	; 187
     dce:	98 0f       	add	r25, r24
     dd0:	93 30       	cpi	r25, 0x03	; 3
     dd2:	18 f4       	brcc	.+6      	; 0xdda <vfprintf+0xee>
     dd4:	20 61       	ori	r18, 0x10	; 16
     dd6:	80 5e       	subi	r24, 0xE0	; 224
     dd8:	06 c0       	rjmp	.+12     	; 0xde6 <vfprintf+0xfa>
     dda:	9b e9       	ldi	r25, 0x9B	; 155
     ddc:	98 0f       	add	r25, r24
     dde:	93 30       	cpi	r25, 0x03	; 3
     de0:	08 f0       	brcs	.+2      	; 0xde4 <vfprintf+0xf8>
     de2:	71 c1       	rjmp	.+738    	; 0x10c6 <vfprintf+0x3da>
     de4:	2f 7e       	andi	r18, 0xEF	; 239
     de6:	26 ff       	sbrs	r18, 6
     de8:	16 e0       	ldi	r17, 0x06	; 6
     dea:	2f 73       	andi	r18, 0x3F	; 63
     dec:	32 2e       	mov	r3, r18
     dee:	85 36       	cpi	r24, 0x65	; 101
     df0:	19 f4       	brne	.+6      	; 0xdf8 <vfprintf+0x10c>
     df2:	20 64       	ori	r18, 0x40	; 64
     df4:	32 2e       	mov	r3, r18
     df6:	08 c0       	rjmp	.+16     	; 0xe08 <vfprintf+0x11c>
     df8:	86 36       	cpi	r24, 0x66	; 102
     dfa:	21 f4       	brne	.+8      	; 0xe04 <vfprintf+0x118>
     dfc:	f2 2f       	mov	r31, r18
     dfe:	f0 68       	ori	r31, 0x80	; 128
     e00:	3f 2e       	mov	r3, r31
     e02:	02 c0       	rjmp	.+4      	; 0xe08 <vfprintf+0x11c>
     e04:	11 11       	cpse	r17, r1
     e06:	11 50       	subi	r17, 0x01	; 1
     e08:	37 fe       	sbrs	r3, 7
     e0a:	07 c0       	rjmp	.+14     	; 0xe1a <vfprintf+0x12e>
     e0c:	1c 33       	cpi	r17, 0x3C	; 60
     e0e:	50 f4       	brcc	.+20     	; 0xe24 <vfprintf+0x138>
     e10:	ee 24       	eor	r14, r14
     e12:	e3 94       	inc	r14
     e14:	e1 0e       	add	r14, r17
     e16:	27 e0       	ldi	r18, 0x07	; 7
     e18:	0b c0       	rjmp	.+22     	; 0xe30 <vfprintf+0x144>
     e1a:	18 30       	cpi	r17, 0x08	; 8
     e1c:	38 f0       	brcs	.+14     	; 0xe2c <vfprintf+0x140>
     e1e:	27 e0       	ldi	r18, 0x07	; 7
     e20:	17 e0       	ldi	r17, 0x07	; 7
     e22:	05 c0       	rjmp	.+10     	; 0xe2e <vfprintf+0x142>
     e24:	27 e0       	ldi	r18, 0x07	; 7
     e26:	4c e3       	ldi	r20, 0x3C	; 60
     e28:	e4 2e       	mov	r14, r20
     e2a:	02 c0       	rjmp	.+4      	; 0xe30 <vfprintf+0x144>
     e2c:	21 2f       	mov	r18, r17
     e2e:	e1 2c       	mov	r14, r1
     e30:	52 01       	movw	r10, r4
     e32:	44 e0       	ldi	r20, 0x04	; 4
     e34:	a4 0e       	add	r10, r20
     e36:	b1 1c       	adc	r11, r1
     e38:	f2 01       	movw	r30, r4
     e3a:	60 81       	ld	r22, Z
     e3c:	71 81       	ldd	r23, Z+1	; 0x01
     e3e:	82 81       	ldd	r24, Z+2	; 0x02
     e40:	93 81       	ldd	r25, Z+3	; 0x03
     e42:	0e 2d       	mov	r16, r14
     e44:	a3 01       	movw	r20, r6
     e46:	0e 94 51 0a 	call	0x14a2	; 0x14a2 <__ftoa_engine>
     e4a:	2c 01       	movw	r4, r24
     e4c:	09 81       	ldd	r16, Y+1	; 0x01
     e4e:	00 ff       	sbrs	r16, 0
     e50:	02 c0       	rjmp	.+4      	; 0xe56 <vfprintf+0x16a>
     e52:	03 ff       	sbrs	r16, 3
     e54:	07 c0       	rjmp	.+14     	; 0xe64 <vfprintf+0x178>
     e56:	31 fc       	sbrc	r3, 1
     e58:	08 c0       	rjmp	.+16     	; 0xe6a <vfprintf+0x17e>
     e5a:	32 fe       	sbrs	r3, 2
     e5c:	09 c0       	rjmp	.+18     	; 0xe70 <vfprintf+0x184>
     e5e:	30 e2       	ldi	r19, 0x20	; 32
     e60:	23 2e       	mov	r2, r19
     e62:	07 c0       	rjmp	.+14     	; 0xe72 <vfprintf+0x186>
     e64:	2d e2       	ldi	r18, 0x2D	; 45
     e66:	22 2e       	mov	r2, r18
     e68:	04 c0       	rjmp	.+8      	; 0xe72 <vfprintf+0x186>
     e6a:	9b e2       	ldi	r25, 0x2B	; 43
     e6c:	29 2e       	mov	r2, r25
     e6e:	01 c0       	rjmp	.+2      	; 0xe72 <vfprintf+0x186>
     e70:	21 2c       	mov	r2, r1
     e72:	80 2f       	mov	r24, r16
     e74:	8c 70       	andi	r24, 0x0C	; 12
     e76:	19 f0       	breq	.+6      	; 0xe7e <vfprintf+0x192>
     e78:	21 10       	cpse	r2, r1
     e7a:	68 c2       	rjmp	.+1232   	; 0x134c <vfprintf+0x660>
     e7c:	a8 c2       	rjmp	.+1360   	; 0x13ce <vfprintf+0x6e2>
     e7e:	37 fe       	sbrs	r3, 7
     e80:	0f c0       	rjmp	.+30     	; 0xea0 <vfprintf+0x1b4>
     e82:	e4 0c       	add	r14, r4
     e84:	04 ff       	sbrs	r16, 4
     e86:	04 c0       	rjmp	.+8      	; 0xe90 <vfprintf+0x1a4>
     e88:	8a 81       	ldd	r24, Y+2	; 0x02
     e8a:	81 33       	cpi	r24, 0x31	; 49
     e8c:	09 f4       	brne	.+2      	; 0xe90 <vfprintf+0x1a4>
     e8e:	ea 94       	dec	r14
     e90:	1e 14       	cp	r1, r14
     e92:	74 f5       	brge	.+92     	; 0xef0 <vfprintf+0x204>
     e94:	f8 e0       	ldi	r31, 0x08	; 8
     e96:	fe 15       	cp	r31, r14
     e98:	78 f5       	brcc	.+94     	; 0xef8 <vfprintf+0x20c>
     e9a:	88 e0       	ldi	r24, 0x08	; 8
     e9c:	e8 2e       	mov	r14, r24
     e9e:	2c c0       	rjmp	.+88     	; 0xef8 <vfprintf+0x20c>
     ea0:	36 fc       	sbrc	r3, 6
     ea2:	2a c0       	rjmp	.+84     	; 0xef8 <vfprintf+0x20c>
     ea4:	81 2f       	mov	r24, r17
     ea6:	90 e0       	ldi	r25, 0x00	; 0
     ea8:	84 15       	cp	r24, r4
     eaa:	95 05       	cpc	r25, r5
     eac:	9c f0       	brlt	.+38     	; 0xed4 <vfprintf+0x1e8>
     eae:	2c ef       	ldi	r18, 0xFC	; 252
     eb0:	42 16       	cp	r4, r18
     eb2:	2f ef       	ldi	r18, 0xFF	; 255
     eb4:	52 06       	cpc	r5, r18
     eb6:	74 f0       	brlt	.+28     	; 0xed4 <vfprintf+0x1e8>
     eb8:	43 2d       	mov	r20, r3
     eba:	40 68       	ori	r20, 0x80	; 128
     ebc:	34 2e       	mov	r3, r20
     ebe:	0a c0       	rjmp	.+20     	; 0xed4 <vfprintf+0x1e8>
     ec0:	e2 e0       	ldi	r30, 0x02	; 2
     ec2:	f0 e0       	ldi	r31, 0x00	; 0
     ec4:	ec 0f       	add	r30, r28
     ec6:	fd 1f       	adc	r31, r29
     ec8:	e1 0f       	add	r30, r17
     eca:	f1 1d       	adc	r31, r1
     ecc:	80 81       	ld	r24, Z
     ece:	80 33       	cpi	r24, 0x30	; 48
     ed0:	19 f4       	brne	.+6      	; 0xed8 <vfprintf+0x1ec>
     ed2:	11 50       	subi	r17, 0x01	; 1
     ed4:	11 11       	cpse	r17, r1
     ed6:	f4 cf       	rjmp	.-24     	; 0xec0 <vfprintf+0x1d4>
     ed8:	37 fe       	sbrs	r3, 7
     eda:	0e c0       	rjmp	.+28     	; 0xef8 <vfprintf+0x20c>
     edc:	ee 24       	eor	r14, r14
     ede:	e3 94       	inc	r14
     ee0:	e1 0e       	add	r14, r17
     ee2:	81 2f       	mov	r24, r17
     ee4:	90 e0       	ldi	r25, 0x00	; 0
     ee6:	48 16       	cp	r4, r24
     ee8:	59 06       	cpc	r5, r25
     eea:	2c f4       	brge	.+10     	; 0xef6 <vfprintf+0x20a>
     eec:	14 19       	sub	r17, r4
     eee:	04 c0       	rjmp	.+8      	; 0xef8 <vfprintf+0x20c>
     ef0:	ee 24       	eor	r14, r14
     ef2:	e3 94       	inc	r14
     ef4:	01 c0       	rjmp	.+2      	; 0xef8 <vfprintf+0x20c>
     ef6:	10 e0       	ldi	r17, 0x00	; 0
     ef8:	37 fe       	sbrs	r3, 7
     efa:	06 c0       	rjmp	.+12     	; 0xf08 <vfprintf+0x21c>
     efc:	14 14       	cp	r1, r4
     efe:	15 04       	cpc	r1, r5
     f00:	34 f4       	brge	.+12     	; 0xf0e <vfprintf+0x222>
     f02:	c2 01       	movw	r24, r4
     f04:	01 96       	adiw	r24, 0x01	; 1
     f06:	05 c0       	rjmp	.+10     	; 0xf12 <vfprintf+0x226>
     f08:	85 e0       	ldi	r24, 0x05	; 5
     f0a:	90 e0       	ldi	r25, 0x00	; 0
     f0c:	02 c0       	rjmp	.+4      	; 0xf12 <vfprintf+0x226>
     f0e:	81 e0       	ldi	r24, 0x01	; 1
     f10:	90 e0       	ldi	r25, 0x00	; 0
     f12:	21 10       	cpse	r2, r1
     f14:	01 96       	adiw	r24, 0x01	; 1
     f16:	11 23       	and	r17, r17
     f18:	31 f0       	breq	.+12     	; 0xf26 <vfprintf+0x23a>
     f1a:	21 2f       	mov	r18, r17
     f1c:	30 e0       	ldi	r19, 0x00	; 0
     f1e:	2f 5f       	subi	r18, 0xFF	; 255
     f20:	3f 4f       	sbci	r19, 0xFF	; 255
     f22:	82 0f       	add	r24, r18
     f24:	93 1f       	adc	r25, r19
     f26:	2f 2d       	mov	r18, r15
     f28:	30 e0       	ldi	r19, 0x00	; 0
     f2a:	82 17       	cp	r24, r18
     f2c:	93 07       	cpc	r25, r19
     f2e:	14 f4       	brge	.+4      	; 0xf34 <vfprintf+0x248>
     f30:	f8 1a       	sub	r15, r24
     f32:	01 c0       	rjmp	.+2      	; 0xf36 <vfprintf+0x24a>
     f34:	f1 2c       	mov	r15, r1
     f36:	83 2d       	mov	r24, r3
     f38:	89 70       	andi	r24, 0x09	; 9
     f3a:	49 f4       	brne	.+18     	; 0xf4e <vfprintf+0x262>
     f3c:	ff 20       	and	r15, r15
     f3e:	39 f0       	breq	.+14     	; 0xf4e <vfprintf+0x262>
     f40:	b6 01       	movw	r22, r12
     f42:	80 e2       	ldi	r24, 0x20	; 32
     f44:	90 e0       	ldi	r25, 0x00	; 0
     f46:	0e 94 4a 0b 	call	0x1694	; 0x1694 <fputc>
     f4a:	fa 94       	dec	r15
     f4c:	f7 cf       	rjmp	.-18     	; 0xf3c <vfprintf+0x250>
     f4e:	22 20       	and	r2, r2
     f50:	29 f0       	breq	.+10     	; 0xf5c <vfprintf+0x270>
     f52:	b6 01       	movw	r22, r12
     f54:	82 2d       	mov	r24, r2
     f56:	90 e0       	ldi	r25, 0x00	; 0
     f58:	0e 94 4a 0b 	call	0x1694	; 0x1694 <fputc>
     f5c:	33 fc       	sbrc	r3, 3
     f5e:	09 c0       	rjmp	.+18     	; 0xf72 <vfprintf+0x286>
     f60:	ff 20       	and	r15, r15
     f62:	39 f0       	breq	.+14     	; 0xf72 <vfprintf+0x286>
     f64:	b6 01       	movw	r22, r12
     f66:	80 e3       	ldi	r24, 0x30	; 48
     f68:	90 e0       	ldi	r25, 0x00	; 0
     f6a:	0e 94 4a 0b 	call	0x1694	; 0x1694 <fputc>
     f6e:	fa 94       	dec	r15
     f70:	f7 cf       	rjmp	.-18     	; 0xf60 <vfprintf+0x274>
     f72:	37 fe       	sbrs	r3, 7
     f74:	5a c0       	rjmp	.+180    	; 0x102a <vfprintf+0x33e>
     f76:	94 2d       	mov	r25, r4
     f78:	85 2d       	mov	r24, r5
     f7a:	57 fe       	sbrs	r5, 7
     f7c:	02 c0       	rjmp	.+4      	; 0xf82 <vfprintf+0x296>
     f7e:	90 e0       	ldi	r25, 0x00	; 0
     f80:	80 e0       	ldi	r24, 0x00	; 0
     f82:	29 2e       	mov	r2, r25
     f84:	38 2e       	mov	r3, r24
     f86:	20 e0       	ldi	r18, 0x00	; 0
     f88:	30 e0       	ldi	r19, 0x00	; 0
     f8a:	a2 01       	movw	r20, r4
     f8c:	4e 19       	sub	r20, r14
     f8e:	51 09       	sbc	r21, r1
     f90:	5d 87       	std	Y+13, r21	; 0x0d
     f92:	4c 87       	std	Y+12, r20	; 0x0c
     f94:	a2 01       	movw	r20, r4
     f96:	42 19       	sub	r20, r2
     f98:	53 09       	sbc	r21, r3
     f9a:	5f 87       	std	Y+15, r21	; 0x0f
     f9c:	4e 87       	std	Y+14, r20	; 0x0e
     f9e:	61 2f       	mov	r22, r17
     fa0:	70 e0       	ldi	r23, 0x00	; 0
     fa2:	44 27       	eor	r20, r20
     fa4:	55 27       	eor	r21, r21
     fa6:	46 1b       	sub	r20, r22
     fa8:	57 0b       	sbc	r21, r23
     faa:	59 8b       	std	Y+17, r21	; 0x11
     fac:	48 8b       	std	Y+16, r20	; 0x10
     fae:	5f ef       	ldi	r21, 0xFF	; 255
     fb0:	25 16       	cp	r2, r21
     fb2:	35 06       	cpc	r3, r21
     fb4:	49 f4       	brne	.+18     	; 0xfc8 <vfprintf+0x2dc>
     fb6:	b6 01       	movw	r22, r12
     fb8:	8e e2       	ldi	r24, 0x2E	; 46
     fba:	90 e0       	ldi	r25, 0x00	; 0
     fbc:	2a 8b       	std	Y+18, r18	; 0x12
     fbe:	3b 8b       	std	Y+19, r19	; 0x13
     fc0:	0e 94 4a 0b 	call	0x1694	; 0x1694 <fputc>
     fc4:	3b 89       	ldd	r19, Y+19	; 0x13
     fc6:	2a 89       	ldd	r18, Y+18	; 0x12
     fc8:	42 14       	cp	r4, r2
     fca:	53 04       	cpc	r5, r3
     fcc:	6c f0       	brlt	.+26     	; 0xfe8 <vfprintf+0x2fc>
     fce:	4c 85       	ldd	r20, Y+12	; 0x0c
     fd0:	5d 85       	ldd	r21, Y+13	; 0x0d
     fd2:	42 15       	cp	r20, r2
     fd4:	53 05       	cpc	r21, r3
     fd6:	44 f4       	brge	.+16     	; 0xfe8 <vfprintf+0x2fc>
     fd8:	ee 85       	ldd	r30, Y+14	; 0x0e
     fda:	ff 85       	ldd	r31, Y+15	; 0x0f
     fdc:	e2 0f       	add	r30, r18
     fde:	f3 1f       	adc	r31, r19
     fe0:	e6 0d       	add	r30, r6
     fe2:	f7 1d       	adc	r31, r7
     fe4:	81 81       	ldd	r24, Z+1	; 0x01
     fe6:	01 c0       	rjmp	.+2      	; 0xfea <vfprintf+0x2fe>
     fe8:	80 e3       	ldi	r24, 0x30	; 48
     fea:	51 e0       	ldi	r21, 0x01	; 1
     fec:	25 1a       	sub	r2, r21
     fee:	31 08       	sbc	r3, r1
     ff0:	2f 5f       	subi	r18, 0xFF	; 255
     ff2:	3f 4f       	sbci	r19, 0xFF	; 255
     ff4:	48 89       	ldd	r20, Y+16	; 0x10
     ff6:	59 89       	ldd	r21, Y+17	; 0x11
     ff8:	24 16       	cp	r2, r20
     ffa:	35 06       	cpc	r3, r21
     ffc:	4c f0       	brlt	.+18     	; 0x1010 <vfprintf+0x324>
     ffe:	b6 01       	movw	r22, r12
    1000:	90 e0       	ldi	r25, 0x00	; 0
    1002:	2a 8b       	std	Y+18, r18	; 0x12
    1004:	3b 8b       	std	Y+19, r19	; 0x13
    1006:	0e 94 4a 0b 	call	0x1694	; 0x1694 <fputc>
    100a:	2a 89       	ldd	r18, Y+18	; 0x12
    100c:	3b 89       	ldd	r19, Y+19	; 0x13
    100e:	cf cf       	rjmp	.-98     	; 0xfae <vfprintf+0x2c2>
    1010:	24 14       	cp	r2, r4
    1012:	35 04       	cpc	r3, r5
    1014:	39 f4       	brne	.+14     	; 0x1024 <vfprintf+0x338>
    1016:	9a 81       	ldd	r25, Y+2	; 0x02
    1018:	96 33       	cpi	r25, 0x36	; 54
    101a:	18 f4       	brcc	.+6      	; 0x1022 <vfprintf+0x336>
    101c:	95 33       	cpi	r25, 0x35	; 53
    101e:	11 f4       	brne	.+4      	; 0x1024 <vfprintf+0x338>
    1020:	04 ff       	sbrs	r16, 4
    1022:	81 e3       	ldi	r24, 0x31	; 49
    1024:	b6 01       	movw	r22, r12
    1026:	90 e0       	ldi	r25, 0x00	; 0
    1028:	4b c0       	rjmp	.+150    	; 0x10c0 <vfprintf+0x3d4>
    102a:	8a 81       	ldd	r24, Y+2	; 0x02
    102c:	81 33       	cpi	r24, 0x31	; 49
    102e:	09 f0       	breq	.+2      	; 0x1032 <vfprintf+0x346>
    1030:	0f 7e       	andi	r16, 0xEF	; 239
    1032:	b6 01       	movw	r22, r12
    1034:	90 e0       	ldi	r25, 0x00	; 0
    1036:	0e 94 4a 0b 	call	0x1694	; 0x1694 <fputc>
    103a:	11 11       	cpse	r17, r1
    103c:	05 c0       	rjmp	.+10     	; 0x1048 <vfprintf+0x35c>
    103e:	34 fc       	sbrc	r3, 4
    1040:	18 c0       	rjmp	.+48     	; 0x1072 <vfprintf+0x386>
    1042:	85 e6       	ldi	r24, 0x65	; 101
    1044:	90 e0       	ldi	r25, 0x00	; 0
    1046:	17 c0       	rjmp	.+46     	; 0x1076 <vfprintf+0x38a>
    1048:	b6 01       	movw	r22, r12
    104a:	8e e2       	ldi	r24, 0x2E	; 46
    104c:	90 e0       	ldi	r25, 0x00	; 0
    104e:	0e 94 4a 0b 	call	0x1694	; 0x1694 <fputc>
    1052:	82 e0       	ldi	r24, 0x02	; 2
    1054:	ee 24       	eor	r14, r14
    1056:	e3 94       	inc	r14
    1058:	e8 0e       	add	r14, r24
    105a:	f3 01       	movw	r30, r6
    105c:	e8 0f       	add	r30, r24
    105e:	f1 1d       	adc	r31, r1
    1060:	80 81       	ld	r24, Z
    1062:	b6 01       	movw	r22, r12
    1064:	90 e0       	ldi	r25, 0x00	; 0
    1066:	0e 94 4a 0b 	call	0x1694	; 0x1694 <fputc>
    106a:	11 50       	subi	r17, 0x01	; 1
    106c:	8e 2d       	mov	r24, r14
    106e:	91 f7       	brne	.-28     	; 0x1054 <vfprintf+0x368>
    1070:	e6 cf       	rjmp	.-52     	; 0x103e <vfprintf+0x352>
    1072:	85 e4       	ldi	r24, 0x45	; 69
    1074:	90 e0       	ldi	r25, 0x00	; 0
    1076:	b6 01       	movw	r22, r12
    1078:	0e 94 4a 0b 	call	0x1694	; 0x1694 <fputc>
    107c:	57 fc       	sbrc	r5, 7
    107e:	05 c0       	rjmp	.+10     	; 0x108a <vfprintf+0x39e>
    1080:	41 14       	cp	r4, r1
    1082:	51 04       	cpc	r5, r1
    1084:	39 f4       	brne	.+14     	; 0x1094 <vfprintf+0x3a8>
    1086:	04 ff       	sbrs	r16, 4
    1088:	05 c0       	rjmp	.+10     	; 0x1094 <vfprintf+0x3a8>
    108a:	51 94       	neg	r5
    108c:	41 94       	neg	r4
    108e:	51 08       	sbc	r5, r1
    1090:	8d e2       	ldi	r24, 0x2D	; 45
    1092:	01 c0       	rjmp	.+2      	; 0x1096 <vfprintf+0x3aa>
    1094:	8b e2       	ldi	r24, 0x2B	; 43
    1096:	b6 01       	movw	r22, r12
    1098:	90 e0       	ldi	r25, 0x00	; 0
    109a:	0e 94 4a 0b 	call	0x1694	; 0x1694 <fputc>
    109e:	80 e3       	ldi	r24, 0x30	; 48
    10a0:	9a e0       	ldi	r25, 0x0A	; 10
    10a2:	49 16       	cp	r4, r25
    10a4:	51 04       	cpc	r5, r1
    10a6:	2c f0       	brlt	.+10     	; 0x10b2 <vfprintf+0x3c6>
    10a8:	8f 5f       	subi	r24, 0xFF	; 255
    10aa:	5a e0       	ldi	r21, 0x0A	; 10
    10ac:	45 1a       	sub	r4, r21
    10ae:	51 08       	sbc	r5, r1
    10b0:	f7 cf       	rjmp	.-18     	; 0x10a0 <vfprintf+0x3b4>
    10b2:	b6 01       	movw	r22, r12
    10b4:	90 e0       	ldi	r25, 0x00	; 0
    10b6:	0e 94 4a 0b 	call	0x1694	; 0x1694 <fputc>
    10ba:	b6 01       	movw	r22, r12
    10bc:	c2 01       	movw	r24, r4
    10be:	c0 96       	adiw	r24, 0x30	; 48
    10c0:	0e 94 4a 0b 	call	0x1694	; 0x1694 <fputc>
    10c4:	57 c1       	rjmp	.+686    	; 0x1374 <vfprintf+0x688>
    10c6:	83 36       	cpi	r24, 0x63	; 99
    10c8:	31 f0       	breq	.+12     	; 0x10d6 <vfprintf+0x3ea>
    10ca:	83 37       	cpi	r24, 0x73	; 115
    10cc:	79 f0       	breq	.+30     	; 0x10ec <vfprintf+0x400>
    10ce:	83 35       	cpi	r24, 0x53	; 83
    10d0:	09 f0       	breq	.+2      	; 0x10d4 <vfprintf+0x3e8>
    10d2:	58 c0       	rjmp	.+176    	; 0x1184 <vfprintf+0x498>
    10d4:	21 c0       	rjmp	.+66     	; 0x1118 <vfprintf+0x42c>
    10d6:	52 01       	movw	r10, r4
    10d8:	e2 e0       	ldi	r30, 0x02	; 2
    10da:	ae 0e       	add	r10, r30
    10dc:	b1 1c       	adc	r11, r1
    10de:	f2 01       	movw	r30, r4
    10e0:	80 81       	ld	r24, Z
    10e2:	89 83       	std	Y+1, r24	; 0x01
    10e4:	01 e0       	ldi	r16, 0x01	; 1
    10e6:	10 e0       	ldi	r17, 0x00	; 0
    10e8:	23 01       	movw	r4, r6
    10ea:	14 c0       	rjmp	.+40     	; 0x1114 <vfprintf+0x428>
    10ec:	52 01       	movw	r10, r4
    10ee:	f2 e0       	ldi	r31, 0x02	; 2
    10f0:	af 0e       	add	r10, r31
    10f2:	b1 1c       	adc	r11, r1
    10f4:	f2 01       	movw	r30, r4
    10f6:	40 80       	ld	r4, Z
    10f8:	51 80       	ldd	r5, Z+1	; 0x01
    10fa:	26 ff       	sbrs	r18, 6
    10fc:	03 c0       	rjmp	.+6      	; 0x1104 <vfprintf+0x418>
    10fe:	61 2f       	mov	r22, r17
    1100:	70 e0       	ldi	r23, 0x00	; 0
    1102:	02 c0       	rjmp	.+4      	; 0x1108 <vfprintf+0x41c>
    1104:	6f ef       	ldi	r22, 0xFF	; 255
    1106:	7f ef       	ldi	r23, 0xFF	; 255
    1108:	c2 01       	movw	r24, r4
    110a:	2a 8b       	std	Y+18, r18	; 0x12
    110c:	0e 94 3f 0b 	call	0x167e	; 0x167e <strnlen>
    1110:	8c 01       	movw	r16, r24
    1112:	2a 89       	ldd	r18, Y+18	; 0x12
    1114:	2f 77       	andi	r18, 0x7F	; 127
    1116:	15 c0       	rjmp	.+42     	; 0x1142 <vfprintf+0x456>
    1118:	52 01       	movw	r10, r4
    111a:	f2 e0       	ldi	r31, 0x02	; 2
    111c:	af 0e       	add	r10, r31
    111e:	b1 1c       	adc	r11, r1
    1120:	f2 01       	movw	r30, r4
    1122:	40 80       	ld	r4, Z
    1124:	51 80       	ldd	r5, Z+1	; 0x01
    1126:	26 ff       	sbrs	r18, 6
    1128:	03 c0       	rjmp	.+6      	; 0x1130 <vfprintf+0x444>
    112a:	61 2f       	mov	r22, r17
    112c:	70 e0       	ldi	r23, 0x00	; 0
    112e:	02 c0       	rjmp	.+4      	; 0x1134 <vfprintf+0x448>
    1130:	6f ef       	ldi	r22, 0xFF	; 255
    1132:	7f ef       	ldi	r23, 0xFF	; 255
    1134:	c2 01       	movw	r24, r4
    1136:	2a 8b       	std	Y+18, r18	; 0x12
    1138:	0e 94 29 0b 	call	0x1652	; 0x1652 <strnlen_P>
    113c:	8c 01       	movw	r16, r24
    113e:	2a 89       	ldd	r18, Y+18	; 0x12
    1140:	20 68       	ori	r18, 0x80	; 128
    1142:	32 2e       	mov	r3, r18
    1144:	23 fd       	sbrc	r18, 3
    1146:	1a c0       	rjmp	.+52     	; 0x117c <vfprintf+0x490>
    1148:	8f 2d       	mov	r24, r15
    114a:	90 e0       	ldi	r25, 0x00	; 0
    114c:	08 17       	cp	r16, r24
    114e:	19 07       	cpc	r17, r25
    1150:	a8 f4       	brcc	.+42     	; 0x117c <vfprintf+0x490>
    1152:	b6 01       	movw	r22, r12
    1154:	80 e2       	ldi	r24, 0x20	; 32
    1156:	90 e0       	ldi	r25, 0x00	; 0
    1158:	0e 94 4a 0b 	call	0x1694	; 0x1694 <fputc>
    115c:	fa 94       	dec	r15
    115e:	f4 cf       	rjmp	.-24     	; 0x1148 <vfprintf+0x45c>
    1160:	f2 01       	movw	r30, r4
    1162:	37 fc       	sbrc	r3, 7
    1164:	85 91       	lpm	r24, Z+
    1166:	37 fe       	sbrs	r3, 7
    1168:	81 91       	ld	r24, Z+
    116a:	2f 01       	movw	r4, r30
    116c:	b6 01       	movw	r22, r12
    116e:	90 e0       	ldi	r25, 0x00	; 0
    1170:	0e 94 4a 0b 	call	0x1694	; 0x1694 <fputc>
    1174:	f1 10       	cpse	r15, r1
    1176:	fa 94       	dec	r15
    1178:	01 50       	subi	r16, 0x01	; 1
    117a:	11 09       	sbc	r17, r1
    117c:	01 15       	cp	r16, r1
    117e:	11 05       	cpc	r17, r1
    1180:	79 f7       	brne	.-34     	; 0x1160 <vfprintf+0x474>
    1182:	f8 c0       	rjmp	.+496    	; 0x1374 <vfprintf+0x688>
    1184:	84 36       	cpi	r24, 0x64	; 100
    1186:	11 f0       	breq	.+4      	; 0x118c <vfprintf+0x4a0>
    1188:	89 36       	cpi	r24, 0x69	; 105
    118a:	59 f5       	brne	.+86     	; 0x11e2 <vfprintf+0x4f6>
    118c:	52 01       	movw	r10, r4
    118e:	27 ff       	sbrs	r18, 7
    1190:	09 c0       	rjmp	.+18     	; 0x11a4 <vfprintf+0x4b8>
    1192:	f4 e0       	ldi	r31, 0x04	; 4
    1194:	af 0e       	add	r10, r31
    1196:	b1 1c       	adc	r11, r1
    1198:	f2 01       	movw	r30, r4
    119a:	60 81       	ld	r22, Z
    119c:	71 81       	ldd	r23, Z+1	; 0x01
    119e:	82 81       	ldd	r24, Z+2	; 0x02
    11a0:	93 81       	ldd	r25, Z+3	; 0x03
    11a2:	0a c0       	rjmp	.+20     	; 0x11b8 <vfprintf+0x4cc>
    11a4:	f2 e0       	ldi	r31, 0x02	; 2
    11a6:	af 0e       	add	r10, r31
    11a8:	b1 1c       	adc	r11, r1
    11aa:	f2 01       	movw	r30, r4
    11ac:	60 81       	ld	r22, Z
    11ae:	71 81       	ldd	r23, Z+1	; 0x01
    11b0:	07 2e       	mov	r0, r23
    11b2:	00 0c       	add	r0, r0
    11b4:	88 0b       	sbc	r24, r24
    11b6:	99 0b       	sbc	r25, r25
    11b8:	2f 76       	andi	r18, 0x6F	; 111
    11ba:	32 2e       	mov	r3, r18
    11bc:	97 ff       	sbrs	r25, 7
    11be:	09 c0       	rjmp	.+18     	; 0x11d2 <vfprintf+0x4e6>
    11c0:	90 95       	com	r25
    11c2:	80 95       	com	r24
    11c4:	70 95       	com	r23
    11c6:	61 95       	neg	r22
    11c8:	7f 4f       	sbci	r23, 0xFF	; 255
    11ca:	8f 4f       	sbci	r24, 0xFF	; 255
    11cc:	9f 4f       	sbci	r25, 0xFF	; 255
    11ce:	20 68       	ori	r18, 0x80	; 128
    11d0:	32 2e       	mov	r3, r18
    11d2:	2a e0       	ldi	r18, 0x0A	; 10
    11d4:	30 e0       	ldi	r19, 0x00	; 0
    11d6:	a3 01       	movw	r20, r6
    11d8:	0e 94 a5 0b 	call	0x174a	; 0x174a <__ultoa_invert>
    11dc:	e8 2e       	mov	r14, r24
    11de:	e6 18       	sub	r14, r6
    11e0:	3f c0       	rjmp	.+126    	; 0x1260 <vfprintf+0x574>
    11e2:	02 2f       	mov	r16, r18
    11e4:	85 37       	cpi	r24, 0x75	; 117
    11e6:	21 f4       	brne	.+8      	; 0x11f0 <vfprintf+0x504>
    11e8:	0f 7e       	andi	r16, 0xEF	; 239
    11ea:	2a e0       	ldi	r18, 0x0A	; 10
    11ec:	30 e0       	ldi	r19, 0x00	; 0
    11ee:	1d c0       	rjmp	.+58     	; 0x122a <vfprintf+0x53e>
    11f0:	09 7f       	andi	r16, 0xF9	; 249
    11f2:	8f 36       	cpi	r24, 0x6F	; 111
    11f4:	91 f0       	breq	.+36     	; 0x121a <vfprintf+0x52e>
    11f6:	18 f4       	brcc	.+6      	; 0x11fe <vfprintf+0x512>
    11f8:	88 35       	cpi	r24, 0x58	; 88
    11fa:	59 f0       	breq	.+22     	; 0x1212 <vfprintf+0x526>
    11fc:	c5 c0       	rjmp	.+394    	; 0x1388 <vfprintf+0x69c>
    11fe:	80 37       	cpi	r24, 0x70	; 112
    1200:	19 f0       	breq	.+6      	; 0x1208 <vfprintf+0x51c>
    1202:	88 37       	cpi	r24, 0x78	; 120
    1204:	11 f0       	breq	.+4      	; 0x120a <vfprintf+0x51e>
    1206:	c0 c0       	rjmp	.+384    	; 0x1388 <vfprintf+0x69c>
    1208:	00 61       	ori	r16, 0x10	; 16
    120a:	04 ff       	sbrs	r16, 4
    120c:	09 c0       	rjmp	.+18     	; 0x1220 <vfprintf+0x534>
    120e:	04 60       	ori	r16, 0x04	; 4
    1210:	07 c0       	rjmp	.+14     	; 0x1220 <vfprintf+0x534>
    1212:	24 ff       	sbrs	r18, 4
    1214:	08 c0       	rjmp	.+16     	; 0x1226 <vfprintf+0x53a>
    1216:	06 60       	ori	r16, 0x06	; 6
    1218:	06 c0       	rjmp	.+12     	; 0x1226 <vfprintf+0x53a>
    121a:	28 e0       	ldi	r18, 0x08	; 8
    121c:	30 e0       	ldi	r19, 0x00	; 0
    121e:	05 c0       	rjmp	.+10     	; 0x122a <vfprintf+0x53e>
    1220:	20 e1       	ldi	r18, 0x10	; 16
    1222:	30 e0       	ldi	r19, 0x00	; 0
    1224:	02 c0       	rjmp	.+4      	; 0x122a <vfprintf+0x53e>
    1226:	20 e1       	ldi	r18, 0x10	; 16
    1228:	32 e0       	ldi	r19, 0x02	; 2
    122a:	52 01       	movw	r10, r4
    122c:	07 ff       	sbrs	r16, 7
    122e:	09 c0       	rjmp	.+18     	; 0x1242 <vfprintf+0x556>
    1230:	f4 e0       	ldi	r31, 0x04	; 4
    1232:	af 0e       	add	r10, r31
    1234:	b1 1c       	adc	r11, r1
    1236:	f2 01       	movw	r30, r4
    1238:	60 81       	ld	r22, Z
    123a:	71 81       	ldd	r23, Z+1	; 0x01
    123c:	82 81       	ldd	r24, Z+2	; 0x02
    123e:	93 81       	ldd	r25, Z+3	; 0x03
    1240:	08 c0       	rjmp	.+16     	; 0x1252 <vfprintf+0x566>
    1242:	f2 e0       	ldi	r31, 0x02	; 2
    1244:	af 0e       	add	r10, r31
    1246:	b1 1c       	adc	r11, r1
    1248:	f2 01       	movw	r30, r4
    124a:	60 81       	ld	r22, Z
    124c:	71 81       	ldd	r23, Z+1	; 0x01
    124e:	80 e0       	ldi	r24, 0x00	; 0
    1250:	90 e0       	ldi	r25, 0x00	; 0
    1252:	a3 01       	movw	r20, r6
    1254:	0e 94 a5 0b 	call	0x174a	; 0x174a <__ultoa_invert>
    1258:	e8 2e       	mov	r14, r24
    125a:	e6 18       	sub	r14, r6
    125c:	0f 77       	andi	r16, 0x7F	; 127
    125e:	30 2e       	mov	r3, r16
    1260:	36 fe       	sbrs	r3, 6
    1262:	0b c0       	rjmp	.+22     	; 0x127a <vfprintf+0x58e>
    1264:	33 2d       	mov	r19, r3
    1266:	3e 7f       	andi	r19, 0xFE	; 254
    1268:	e1 16       	cp	r14, r17
    126a:	50 f4       	brcc	.+20     	; 0x1280 <vfprintf+0x594>
    126c:	34 fe       	sbrs	r3, 4
    126e:	0a c0       	rjmp	.+20     	; 0x1284 <vfprintf+0x598>
    1270:	32 fc       	sbrc	r3, 2
    1272:	08 c0       	rjmp	.+16     	; 0x1284 <vfprintf+0x598>
    1274:	33 2d       	mov	r19, r3
    1276:	3e 7e       	andi	r19, 0xEE	; 238
    1278:	05 c0       	rjmp	.+10     	; 0x1284 <vfprintf+0x598>
    127a:	0e 2d       	mov	r16, r14
    127c:	33 2d       	mov	r19, r3
    127e:	03 c0       	rjmp	.+6      	; 0x1286 <vfprintf+0x59a>
    1280:	0e 2d       	mov	r16, r14
    1282:	01 c0       	rjmp	.+2      	; 0x1286 <vfprintf+0x59a>
    1284:	01 2f       	mov	r16, r17
    1286:	34 ff       	sbrs	r19, 4
    1288:	0c c0       	rjmp	.+24     	; 0x12a2 <vfprintf+0x5b6>
    128a:	fe 01       	movw	r30, r28
    128c:	ee 0d       	add	r30, r14
    128e:	f1 1d       	adc	r31, r1
    1290:	80 81       	ld	r24, Z
    1292:	80 33       	cpi	r24, 0x30	; 48
    1294:	11 f4       	brne	.+4      	; 0x129a <vfprintf+0x5ae>
    1296:	39 7e       	andi	r19, 0xE9	; 233
    1298:	08 c0       	rjmp	.+16     	; 0x12aa <vfprintf+0x5be>
    129a:	32 ff       	sbrs	r19, 2
    129c:	05 c0       	rjmp	.+10     	; 0x12a8 <vfprintf+0x5bc>
    129e:	0e 5f       	subi	r16, 0xFE	; 254
    12a0:	04 c0       	rjmp	.+8      	; 0x12aa <vfprintf+0x5be>
    12a2:	83 2f       	mov	r24, r19
    12a4:	86 78       	andi	r24, 0x86	; 134
    12a6:	09 f0       	breq	.+2      	; 0x12aa <vfprintf+0x5be>
    12a8:	0f 5f       	subi	r16, 0xFF	; 255
    12aa:	33 fd       	sbrc	r19, 3
    12ac:	13 c0       	rjmp	.+38     	; 0x12d4 <vfprintf+0x5e8>
    12ae:	30 ff       	sbrs	r19, 0
    12b0:	06 c0       	rjmp	.+12     	; 0x12be <vfprintf+0x5d2>
    12b2:	1e 2d       	mov	r17, r14
    12b4:	0f 15       	cp	r16, r15
    12b6:	18 f4       	brcc	.+6      	; 0x12be <vfprintf+0x5d2>
    12b8:	1f 0d       	add	r17, r15
    12ba:	10 1b       	sub	r17, r16
    12bc:	0f 2d       	mov	r16, r15
    12be:	0f 15       	cp	r16, r15
    12c0:	68 f4       	brcc	.+26     	; 0x12dc <vfprintf+0x5f0>
    12c2:	b6 01       	movw	r22, r12
    12c4:	80 e2       	ldi	r24, 0x20	; 32
    12c6:	90 e0       	ldi	r25, 0x00	; 0
    12c8:	3b 8b       	std	Y+19, r19	; 0x13
    12ca:	0e 94 4a 0b 	call	0x1694	; 0x1694 <fputc>
    12ce:	0f 5f       	subi	r16, 0xFF	; 255
    12d0:	3b 89       	ldd	r19, Y+19	; 0x13
    12d2:	f5 cf       	rjmp	.-22     	; 0x12be <vfprintf+0x5d2>
    12d4:	0f 15       	cp	r16, r15
    12d6:	10 f4       	brcc	.+4      	; 0x12dc <vfprintf+0x5f0>
    12d8:	f0 1a       	sub	r15, r16
    12da:	01 c0       	rjmp	.+2      	; 0x12de <vfprintf+0x5f2>
    12dc:	f1 2c       	mov	r15, r1
    12de:	34 ff       	sbrs	r19, 4
    12e0:	12 c0       	rjmp	.+36     	; 0x1306 <vfprintf+0x61a>
    12e2:	b6 01       	movw	r22, r12
    12e4:	80 e3       	ldi	r24, 0x30	; 48
    12e6:	90 e0       	ldi	r25, 0x00	; 0
    12e8:	3b 8b       	std	Y+19, r19	; 0x13
    12ea:	0e 94 4a 0b 	call	0x1694	; 0x1694 <fputc>
    12ee:	3b 89       	ldd	r19, Y+19	; 0x13
    12f0:	32 ff       	sbrs	r19, 2
    12f2:	17 c0       	rjmp	.+46     	; 0x1322 <vfprintf+0x636>
    12f4:	31 fd       	sbrc	r19, 1
    12f6:	03 c0       	rjmp	.+6      	; 0x12fe <vfprintf+0x612>
    12f8:	88 e7       	ldi	r24, 0x78	; 120
    12fa:	90 e0       	ldi	r25, 0x00	; 0
    12fc:	02 c0       	rjmp	.+4      	; 0x1302 <vfprintf+0x616>
    12fe:	88 e5       	ldi	r24, 0x58	; 88
    1300:	90 e0       	ldi	r25, 0x00	; 0
    1302:	b6 01       	movw	r22, r12
    1304:	0c c0       	rjmp	.+24     	; 0x131e <vfprintf+0x632>
    1306:	83 2f       	mov	r24, r19
    1308:	86 78       	andi	r24, 0x86	; 134
    130a:	59 f0       	breq	.+22     	; 0x1322 <vfprintf+0x636>
    130c:	31 ff       	sbrs	r19, 1
    130e:	02 c0       	rjmp	.+4      	; 0x1314 <vfprintf+0x628>
    1310:	8b e2       	ldi	r24, 0x2B	; 43
    1312:	01 c0       	rjmp	.+2      	; 0x1316 <vfprintf+0x62a>
    1314:	80 e2       	ldi	r24, 0x20	; 32
    1316:	37 fd       	sbrc	r19, 7
    1318:	8d e2       	ldi	r24, 0x2D	; 45
    131a:	b6 01       	movw	r22, r12
    131c:	90 e0       	ldi	r25, 0x00	; 0
    131e:	0e 94 4a 0b 	call	0x1694	; 0x1694 <fputc>
    1322:	e1 16       	cp	r14, r17
    1324:	38 f4       	brcc	.+14     	; 0x1334 <vfprintf+0x648>
    1326:	b6 01       	movw	r22, r12
    1328:	80 e3       	ldi	r24, 0x30	; 48
    132a:	90 e0       	ldi	r25, 0x00	; 0
    132c:	0e 94 4a 0b 	call	0x1694	; 0x1694 <fputc>
    1330:	11 50       	subi	r17, 0x01	; 1
    1332:	f7 cf       	rjmp	.-18     	; 0x1322 <vfprintf+0x636>
    1334:	ea 94       	dec	r14
    1336:	f3 01       	movw	r30, r6
    1338:	ee 0d       	add	r30, r14
    133a:	f1 1d       	adc	r31, r1
    133c:	80 81       	ld	r24, Z
    133e:	b6 01       	movw	r22, r12
    1340:	90 e0       	ldi	r25, 0x00	; 0
    1342:	0e 94 4a 0b 	call	0x1694	; 0x1694 <fputc>
    1346:	e1 10       	cpse	r14, r1
    1348:	f5 cf       	rjmp	.-22     	; 0x1334 <vfprintf+0x648>
    134a:	14 c0       	rjmp	.+40     	; 0x1374 <vfprintf+0x688>
    134c:	f4 e0       	ldi	r31, 0x04	; 4
    134e:	ff 15       	cp	r31, r15
    1350:	58 f5       	brcc	.+86     	; 0x13a8 <vfprintf+0x6bc>
    1352:	84 e0       	ldi	r24, 0x04	; 4
    1354:	f8 1a       	sub	r15, r24
    1356:	33 fe       	sbrs	r3, 3
    1358:	1e c0       	rjmp	.+60     	; 0x1396 <vfprintf+0x6aa>
    135a:	21 10       	cpse	r2, r1
    135c:	26 c0       	rjmp	.+76     	; 0x13aa <vfprintf+0x6be>
    135e:	03 ff       	sbrs	r16, 3
    1360:	2a c0       	rjmp	.+84     	; 0x13b6 <vfprintf+0x6ca>
    1362:	08 e6       	ldi	r16, 0x68	; 104
    1364:	10 e0       	ldi	r17, 0x00	; 0
    1366:	f3 2d       	mov	r31, r3
    1368:	f0 71       	andi	r31, 0x10	; 16
    136a:	3f 2e       	mov	r3, r31
    136c:	f8 01       	movw	r30, r16
    136e:	84 91       	lpm	r24, Z
    1370:	81 11       	cpse	r24, r1
    1372:	24 c0       	rjmp	.+72     	; 0x13bc <vfprintf+0x6d0>
    1374:	ff 20       	and	r15, r15
    1376:	09 f4       	brne	.+2      	; 0x137a <vfprintf+0x68e>
    1378:	e5 cc       	rjmp	.-1590   	; 0xd44 <vfprintf+0x58>
    137a:	b6 01       	movw	r22, r12
    137c:	80 e2       	ldi	r24, 0x20	; 32
    137e:	90 e0       	ldi	r25, 0x00	; 0
    1380:	0e 94 4a 0b 	call	0x1694	; 0x1694 <fputc>
    1384:	fa 94       	dec	r15
    1386:	f6 cf       	rjmp	.-20     	; 0x1374 <vfprintf+0x688>
    1388:	f6 01       	movw	r30, r12
    138a:	86 81       	ldd	r24, Z+6	; 0x06
    138c:	97 81       	ldd	r25, Z+7	; 0x07
    138e:	26 c0       	rjmp	.+76     	; 0x13dc <vfprintf+0x6f0>
    1390:	8f ef       	ldi	r24, 0xFF	; 255
    1392:	9f ef       	ldi	r25, 0xFF	; 255
    1394:	23 c0       	rjmp	.+70     	; 0x13dc <vfprintf+0x6f0>
    1396:	b6 01       	movw	r22, r12
    1398:	80 e2       	ldi	r24, 0x20	; 32
    139a:	90 e0       	ldi	r25, 0x00	; 0
    139c:	0e 94 4a 0b 	call	0x1694	; 0x1694 <fputc>
    13a0:	fa 94       	dec	r15
    13a2:	f1 10       	cpse	r15, r1
    13a4:	f8 cf       	rjmp	.-16     	; 0x1396 <vfprintf+0x6aa>
    13a6:	d9 cf       	rjmp	.-78     	; 0x135a <vfprintf+0x66e>
    13a8:	f1 2c       	mov	r15, r1
    13aa:	b6 01       	movw	r22, r12
    13ac:	82 2d       	mov	r24, r2
    13ae:	90 e0       	ldi	r25, 0x00	; 0
    13b0:	0e 94 4a 0b 	call	0x1694	; 0x1694 <fputc>
    13b4:	d4 cf       	rjmp	.-88     	; 0x135e <vfprintf+0x672>
    13b6:	0c e6       	ldi	r16, 0x6C	; 108
    13b8:	10 e0       	ldi	r17, 0x00	; 0
    13ba:	d5 cf       	rjmp	.-86     	; 0x1366 <vfprintf+0x67a>
    13bc:	31 10       	cpse	r3, r1
    13be:	80 52       	subi	r24, 0x20	; 32
    13c0:	b6 01       	movw	r22, r12
    13c2:	90 e0       	ldi	r25, 0x00	; 0
    13c4:	0e 94 4a 0b 	call	0x1694	; 0x1694 <fputc>
    13c8:	0f 5f       	subi	r16, 0xFF	; 255
    13ca:	1f 4f       	sbci	r17, 0xFF	; 255
    13cc:	cf cf       	rjmp	.-98     	; 0x136c <vfprintf+0x680>
    13ce:	23 e0       	ldi	r18, 0x03	; 3
    13d0:	2f 15       	cp	r18, r15
    13d2:	10 f4       	brcc	.+4      	; 0x13d8 <vfprintf+0x6ec>
    13d4:	83 e0       	ldi	r24, 0x03	; 3
    13d6:	be cf       	rjmp	.-132    	; 0x1354 <vfprintf+0x668>
    13d8:	f1 2c       	mov	r15, r1
    13da:	c1 cf       	rjmp	.-126    	; 0x135e <vfprintf+0x672>
    13dc:	63 96       	adiw	r28, 0x13	; 19
    13de:	e2 e1       	ldi	r30, 0x12	; 18
    13e0:	0c 94 30 0a 	jmp	0x1460	; 0x1460 <__epilogue_restores__>

000013e4 <__udivmodsi4>:
    13e4:	a1 e2       	ldi	r26, 0x21	; 33
    13e6:	1a 2e       	mov	r1, r26
    13e8:	aa 1b       	sub	r26, r26
    13ea:	bb 1b       	sub	r27, r27
    13ec:	fd 01       	movw	r30, r26
    13ee:	0d c0       	rjmp	.+26     	; 0x140a <__udivmodsi4_ep>

000013f0 <__udivmodsi4_loop>:
    13f0:	aa 1f       	adc	r26, r26
    13f2:	bb 1f       	adc	r27, r27
    13f4:	ee 1f       	adc	r30, r30
    13f6:	ff 1f       	adc	r31, r31
    13f8:	a2 17       	cp	r26, r18
    13fa:	b3 07       	cpc	r27, r19
    13fc:	e4 07       	cpc	r30, r20
    13fe:	f5 07       	cpc	r31, r21
    1400:	20 f0       	brcs	.+8      	; 0x140a <__udivmodsi4_ep>
    1402:	a2 1b       	sub	r26, r18
    1404:	b3 0b       	sbc	r27, r19
    1406:	e4 0b       	sbc	r30, r20
    1408:	f5 0b       	sbc	r31, r21

0000140a <__udivmodsi4_ep>:
    140a:	66 1f       	adc	r22, r22
    140c:	77 1f       	adc	r23, r23
    140e:	88 1f       	adc	r24, r24
    1410:	99 1f       	adc	r25, r25
    1412:	1a 94       	dec	r1
    1414:	69 f7       	brne	.-38     	; 0x13f0 <__udivmodsi4_loop>
    1416:	60 95       	com	r22
    1418:	70 95       	com	r23
    141a:	80 95       	com	r24
    141c:	90 95       	com	r25
    141e:	9b 01       	movw	r18, r22
    1420:	ac 01       	movw	r20, r24
    1422:	bd 01       	movw	r22, r26
    1424:	cf 01       	movw	r24, r30
    1426:	08 95       	ret

00001428 <__prologue_saves__>:
    1428:	2f 92       	push	r2
    142a:	3f 92       	push	r3
    142c:	4f 92       	push	r4
    142e:	5f 92       	push	r5
    1430:	6f 92       	push	r6
    1432:	7f 92       	push	r7
    1434:	8f 92       	push	r8
    1436:	9f 92       	push	r9
    1438:	af 92       	push	r10
    143a:	bf 92       	push	r11
    143c:	cf 92       	push	r12
    143e:	df 92       	push	r13
    1440:	ef 92       	push	r14
    1442:	ff 92       	push	r15
    1444:	0f 93       	push	r16
    1446:	1f 93       	push	r17
    1448:	cf 93       	push	r28
    144a:	df 93       	push	r29
    144c:	cd b7       	in	r28, 0x3d	; 61
    144e:	de b7       	in	r29, 0x3e	; 62
    1450:	ca 1b       	sub	r28, r26
    1452:	db 0b       	sbc	r29, r27
    1454:	0f b6       	in	r0, 0x3f	; 63
    1456:	f8 94       	cli
    1458:	de bf       	out	0x3e, r29	; 62
    145a:	0f be       	out	0x3f, r0	; 63
    145c:	cd bf       	out	0x3d, r28	; 61
    145e:	09 94       	ijmp

00001460 <__epilogue_restores__>:
    1460:	2a 88       	ldd	r2, Y+18	; 0x12
    1462:	39 88       	ldd	r3, Y+17	; 0x11
    1464:	48 88       	ldd	r4, Y+16	; 0x10
    1466:	5f 84       	ldd	r5, Y+15	; 0x0f
    1468:	6e 84       	ldd	r6, Y+14	; 0x0e
    146a:	7d 84       	ldd	r7, Y+13	; 0x0d
    146c:	8c 84       	ldd	r8, Y+12	; 0x0c
    146e:	9b 84       	ldd	r9, Y+11	; 0x0b
    1470:	aa 84       	ldd	r10, Y+10	; 0x0a
    1472:	b9 84       	ldd	r11, Y+9	; 0x09
    1474:	c8 84       	ldd	r12, Y+8	; 0x08
    1476:	df 80       	ldd	r13, Y+7	; 0x07
    1478:	ee 80       	ldd	r14, Y+6	; 0x06
    147a:	fd 80       	ldd	r15, Y+5	; 0x05
    147c:	0c 81       	ldd	r16, Y+4	; 0x04
    147e:	1b 81       	ldd	r17, Y+3	; 0x03
    1480:	aa 81       	ldd	r26, Y+2	; 0x02
    1482:	b9 81       	ldd	r27, Y+1	; 0x01
    1484:	ce 0f       	add	r28, r30
    1486:	d1 1d       	adc	r29, r1
    1488:	0f b6       	in	r0, 0x3f	; 63
    148a:	f8 94       	cli
    148c:	de bf       	out	0x3e, r29	; 62
    148e:	0f be       	out	0x3f, r0	; 63
    1490:	cd bf       	out	0x3d, r28	; 61
    1492:	ed 01       	movw	r28, r26
    1494:	08 95       	ret

00001496 <__tablejump2__>:
    1496:	ee 0f       	add	r30, r30
    1498:	ff 1f       	adc	r31, r31
    149a:	05 90       	lpm	r0, Z+
    149c:	f4 91       	lpm	r31, Z
    149e:	e0 2d       	mov	r30, r0
    14a0:	09 94       	ijmp

000014a2 <__ftoa_engine>:
    14a2:	28 30       	cpi	r18, 0x08	; 8
    14a4:	08 f0       	brcs	.+2      	; 0x14a8 <__ftoa_engine+0x6>
    14a6:	27 e0       	ldi	r18, 0x07	; 7
    14a8:	33 27       	eor	r19, r19
    14aa:	da 01       	movw	r26, r20
    14ac:	99 0f       	add	r25, r25
    14ae:	31 1d       	adc	r19, r1
    14b0:	87 fd       	sbrc	r24, 7
    14b2:	91 60       	ori	r25, 0x01	; 1
    14b4:	00 96       	adiw	r24, 0x00	; 0
    14b6:	61 05       	cpc	r22, r1
    14b8:	71 05       	cpc	r23, r1
    14ba:	39 f4       	brne	.+14     	; 0x14ca <__ftoa_engine+0x28>
    14bc:	32 60       	ori	r19, 0x02	; 2
    14be:	2e 5f       	subi	r18, 0xFE	; 254
    14c0:	3d 93       	st	X+, r19
    14c2:	30 e3       	ldi	r19, 0x30	; 48
    14c4:	2a 95       	dec	r18
    14c6:	e1 f7       	brne	.-8      	; 0x14c0 <__ftoa_engine+0x1e>
    14c8:	08 95       	ret
    14ca:	9f 3f       	cpi	r25, 0xFF	; 255
    14cc:	30 f0       	brcs	.+12     	; 0x14da <__ftoa_engine+0x38>
    14ce:	80 38       	cpi	r24, 0x80	; 128
    14d0:	71 05       	cpc	r23, r1
    14d2:	61 05       	cpc	r22, r1
    14d4:	09 f0       	breq	.+2      	; 0x14d8 <__ftoa_engine+0x36>
    14d6:	3c 5f       	subi	r19, 0xFC	; 252
    14d8:	3c 5f       	subi	r19, 0xFC	; 252
    14da:	3d 93       	st	X+, r19
    14dc:	91 30       	cpi	r25, 0x01	; 1
    14de:	08 f0       	brcs	.+2      	; 0x14e2 <__ftoa_engine+0x40>
    14e0:	80 68       	ori	r24, 0x80	; 128
    14e2:	91 1d       	adc	r25, r1
    14e4:	df 93       	push	r29
    14e6:	cf 93       	push	r28
    14e8:	1f 93       	push	r17
    14ea:	0f 93       	push	r16
    14ec:	ff 92       	push	r15
    14ee:	ef 92       	push	r14
    14f0:	19 2f       	mov	r17, r25
    14f2:	98 7f       	andi	r25, 0xF8	; 248
    14f4:	96 95       	lsr	r25
    14f6:	e9 2f       	mov	r30, r25
    14f8:	96 95       	lsr	r25
    14fa:	96 95       	lsr	r25
    14fc:	e9 0f       	add	r30, r25
    14fe:	ff 27       	eor	r31, r31
    1500:	e6 53       	subi	r30, 0x36	; 54
    1502:	ff 4f       	sbci	r31, 0xFF	; 255
    1504:	99 27       	eor	r25, r25
    1506:	33 27       	eor	r19, r19
    1508:	ee 24       	eor	r14, r14
    150a:	ff 24       	eor	r15, r15
    150c:	a7 01       	movw	r20, r14
    150e:	e7 01       	movw	r28, r14
    1510:	05 90       	lpm	r0, Z+
    1512:	08 94       	sec
    1514:	07 94       	ror	r0
    1516:	28 f4       	brcc	.+10     	; 0x1522 <__ftoa_engine+0x80>
    1518:	36 0f       	add	r19, r22
    151a:	e7 1e       	adc	r14, r23
    151c:	f8 1e       	adc	r15, r24
    151e:	49 1f       	adc	r20, r25
    1520:	51 1d       	adc	r21, r1
    1522:	66 0f       	add	r22, r22
    1524:	77 1f       	adc	r23, r23
    1526:	88 1f       	adc	r24, r24
    1528:	99 1f       	adc	r25, r25
    152a:	06 94       	lsr	r0
    152c:	a1 f7       	brne	.-24     	; 0x1516 <__ftoa_engine+0x74>
    152e:	05 90       	lpm	r0, Z+
    1530:	07 94       	ror	r0
    1532:	28 f4       	brcc	.+10     	; 0x153e <__ftoa_engine+0x9c>
    1534:	e7 0e       	add	r14, r23
    1536:	f8 1e       	adc	r15, r24
    1538:	49 1f       	adc	r20, r25
    153a:	56 1f       	adc	r21, r22
    153c:	c1 1d       	adc	r28, r1
    153e:	77 0f       	add	r23, r23
    1540:	88 1f       	adc	r24, r24
    1542:	99 1f       	adc	r25, r25
    1544:	66 1f       	adc	r22, r22
    1546:	06 94       	lsr	r0
    1548:	a1 f7       	brne	.-24     	; 0x1532 <__ftoa_engine+0x90>
    154a:	05 90       	lpm	r0, Z+
    154c:	07 94       	ror	r0
    154e:	28 f4       	brcc	.+10     	; 0x155a <__ftoa_engine+0xb8>
    1550:	f8 0e       	add	r15, r24
    1552:	49 1f       	adc	r20, r25
    1554:	56 1f       	adc	r21, r22
    1556:	c7 1f       	adc	r28, r23
    1558:	d1 1d       	adc	r29, r1
    155a:	88 0f       	add	r24, r24
    155c:	99 1f       	adc	r25, r25
    155e:	66 1f       	adc	r22, r22
    1560:	77 1f       	adc	r23, r23
    1562:	06 94       	lsr	r0
    1564:	a1 f7       	brne	.-24     	; 0x154e <__ftoa_engine+0xac>
    1566:	05 90       	lpm	r0, Z+
    1568:	07 94       	ror	r0
    156a:	20 f4       	brcc	.+8      	; 0x1574 <__ftoa_engine+0xd2>
    156c:	49 0f       	add	r20, r25
    156e:	56 1f       	adc	r21, r22
    1570:	c7 1f       	adc	r28, r23
    1572:	d8 1f       	adc	r29, r24
    1574:	99 0f       	add	r25, r25
    1576:	66 1f       	adc	r22, r22
    1578:	77 1f       	adc	r23, r23
    157a:	88 1f       	adc	r24, r24
    157c:	06 94       	lsr	r0
    157e:	a9 f7       	brne	.-22     	; 0x156a <__ftoa_engine+0xc8>
    1580:	84 91       	lpm	r24, Z
    1582:	10 95       	com	r17
    1584:	17 70       	andi	r17, 0x07	; 7
    1586:	41 f0       	breq	.+16     	; 0x1598 <__ftoa_engine+0xf6>
    1588:	d6 95       	lsr	r29
    158a:	c7 95       	ror	r28
    158c:	57 95       	ror	r21
    158e:	47 95       	ror	r20
    1590:	f7 94       	ror	r15
    1592:	e7 94       	ror	r14
    1594:	1a 95       	dec	r17
    1596:	c1 f7       	brne	.-16     	; 0x1588 <__ftoa_engine+0xe6>
    1598:	e0 e7       	ldi	r30, 0x70	; 112
    159a:	f0 e0       	ldi	r31, 0x00	; 0
    159c:	68 94       	set
    159e:	15 90       	lpm	r1, Z+
    15a0:	15 91       	lpm	r17, Z+
    15a2:	35 91       	lpm	r19, Z+
    15a4:	65 91       	lpm	r22, Z+
    15a6:	95 91       	lpm	r25, Z+
    15a8:	05 90       	lpm	r0, Z+
    15aa:	7f e2       	ldi	r23, 0x2F	; 47
    15ac:	73 95       	inc	r23
    15ae:	e1 18       	sub	r14, r1
    15b0:	f1 0a       	sbc	r15, r17
    15b2:	43 0b       	sbc	r20, r19
    15b4:	56 0b       	sbc	r21, r22
    15b6:	c9 0b       	sbc	r28, r25
    15b8:	d0 09       	sbc	r29, r0
    15ba:	c0 f7       	brcc	.-16     	; 0x15ac <__ftoa_engine+0x10a>
    15bc:	e1 0c       	add	r14, r1
    15be:	f1 1e       	adc	r15, r17
    15c0:	43 1f       	adc	r20, r19
    15c2:	56 1f       	adc	r21, r22
    15c4:	c9 1f       	adc	r28, r25
    15c6:	d0 1d       	adc	r29, r0
    15c8:	7e f4       	brtc	.+30     	; 0x15e8 <__ftoa_engine+0x146>
    15ca:	70 33       	cpi	r23, 0x30	; 48
    15cc:	11 f4       	brne	.+4      	; 0x15d2 <__ftoa_engine+0x130>
    15ce:	8a 95       	dec	r24
    15d0:	e6 cf       	rjmp	.-52     	; 0x159e <__ftoa_engine+0xfc>
    15d2:	e8 94       	clt
    15d4:	01 50       	subi	r16, 0x01	; 1
    15d6:	30 f0       	brcs	.+12     	; 0x15e4 <__ftoa_engine+0x142>
    15d8:	08 0f       	add	r16, r24
    15da:	0a f4       	brpl	.+2      	; 0x15de <__ftoa_engine+0x13c>
    15dc:	00 27       	eor	r16, r16
    15de:	02 17       	cp	r16, r18
    15e0:	08 f4       	brcc	.+2      	; 0x15e4 <__ftoa_engine+0x142>
    15e2:	20 2f       	mov	r18, r16
    15e4:	23 95       	inc	r18
    15e6:	02 2f       	mov	r16, r18
    15e8:	7a 33       	cpi	r23, 0x3A	; 58
    15ea:	28 f0       	brcs	.+10     	; 0x15f6 <__ftoa_engine+0x154>
    15ec:	79 e3       	ldi	r23, 0x39	; 57
    15ee:	7d 93       	st	X+, r23
    15f0:	2a 95       	dec	r18
    15f2:	e9 f7       	brne	.-6      	; 0x15ee <__ftoa_engine+0x14c>
    15f4:	10 c0       	rjmp	.+32     	; 0x1616 <__ftoa_engine+0x174>
    15f6:	7d 93       	st	X+, r23
    15f8:	2a 95       	dec	r18
    15fa:	89 f6       	brne	.-94     	; 0x159e <__ftoa_engine+0xfc>
    15fc:	06 94       	lsr	r0
    15fe:	97 95       	ror	r25
    1600:	67 95       	ror	r22
    1602:	37 95       	ror	r19
    1604:	17 95       	ror	r17
    1606:	17 94       	ror	r1
    1608:	e1 18       	sub	r14, r1
    160a:	f1 0a       	sbc	r15, r17
    160c:	43 0b       	sbc	r20, r19
    160e:	56 0b       	sbc	r21, r22
    1610:	c9 0b       	sbc	r28, r25
    1612:	d0 09       	sbc	r29, r0
    1614:	98 f0       	brcs	.+38     	; 0x163c <__ftoa_engine+0x19a>
    1616:	23 95       	inc	r18
    1618:	7e 91       	ld	r23, -X
    161a:	73 95       	inc	r23
    161c:	7a 33       	cpi	r23, 0x3A	; 58
    161e:	08 f0       	brcs	.+2      	; 0x1622 <__ftoa_engine+0x180>
    1620:	70 e3       	ldi	r23, 0x30	; 48
    1622:	7c 93       	st	X, r23
    1624:	20 13       	cpse	r18, r16
    1626:	b8 f7       	brcc	.-18     	; 0x1616 <__ftoa_engine+0x174>
    1628:	7e 91       	ld	r23, -X
    162a:	70 61       	ori	r23, 0x10	; 16
    162c:	7d 93       	st	X+, r23
    162e:	30 f0       	brcs	.+12     	; 0x163c <__ftoa_engine+0x19a>
    1630:	83 95       	inc	r24
    1632:	71 e3       	ldi	r23, 0x31	; 49
    1634:	7d 93       	st	X+, r23
    1636:	70 e3       	ldi	r23, 0x30	; 48
    1638:	2a 95       	dec	r18
    163a:	e1 f7       	brne	.-8      	; 0x1634 <__ftoa_engine+0x192>
    163c:	11 24       	eor	r1, r1
    163e:	ef 90       	pop	r14
    1640:	ff 90       	pop	r15
    1642:	0f 91       	pop	r16
    1644:	1f 91       	pop	r17
    1646:	cf 91       	pop	r28
    1648:	df 91       	pop	r29
    164a:	99 27       	eor	r25, r25
    164c:	87 fd       	sbrc	r24, 7
    164e:	90 95       	com	r25
    1650:	08 95       	ret

00001652 <strnlen_P>:
    1652:	fc 01       	movw	r30, r24
    1654:	05 90       	lpm	r0, Z+
    1656:	61 50       	subi	r22, 0x01	; 1
    1658:	70 40       	sbci	r23, 0x00	; 0
    165a:	01 10       	cpse	r0, r1
    165c:	d8 f7       	brcc	.-10     	; 0x1654 <strnlen_P+0x2>
    165e:	80 95       	com	r24
    1660:	90 95       	com	r25
    1662:	8e 0f       	add	r24, r30
    1664:	9f 1f       	adc	r25, r31
    1666:	08 95       	ret

00001668 <strcat>:
    1668:	fb 01       	movw	r30, r22
    166a:	dc 01       	movw	r26, r24
    166c:	0d 90       	ld	r0, X+
    166e:	00 20       	and	r0, r0
    1670:	e9 f7       	brne	.-6      	; 0x166c <strcat+0x4>
    1672:	11 97       	sbiw	r26, 0x01	; 1
    1674:	01 90       	ld	r0, Z+
    1676:	0d 92       	st	X+, r0
    1678:	00 20       	and	r0, r0
    167a:	e1 f7       	brne	.-8      	; 0x1674 <strcat+0xc>
    167c:	08 95       	ret

0000167e <strnlen>:
    167e:	fc 01       	movw	r30, r24
    1680:	61 50       	subi	r22, 0x01	; 1
    1682:	70 40       	sbci	r23, 0x00	; 0
    1684:	01 90       	ld	r0, Z+
    1686:	01 10       	cpse	r0, r1
    1688:	d8 f7       	brcc	.-10     	; 0x1680 <strnlen+0x2>
    168a:	80 95       	com	r24
    168c:	90 95       	com	r25
    168e:	8e 0f       	add	r24, r30
    1690:	9f 1f       	adc	r25, r31
    1692:	08 95       	ret

00001694 <fputc>:
    1694:	0f 93       	push	r16
    1696:	1f 93       	push	r17
    1698:	cf 93       	push	r28
    169a:	df 93       	push	r29
    169c:	fb 01       	movw	r30, r22
    169e:	23 81       	ldd	r18, Z+3	; 0x03
    16a0:	21 fd       	sbrc	r18, 1
    16a2:	03 c0       	rjmp	.+6      	; 0x16aa <fputc+0x16>
    16a4:	8f ef       	ldi	r24, 0xFF	; 255
    16a6:	9f ef       	ldi	r25, 0xFF	; 255
    16a8:	28 c0       	rjmp	.+80     	; 0x16fa <fputc+0x66>
    16aa:	22 ff       	sbrs	r18, 2
    16ac:	16 c0       	rjmp	.+44     	; 0x16da <fputc+0x46>
    16ae:	46 81       	ldd	r20, Z+6	; 0x06
    16b0:	57 81       	ldd	r21, Z+7	; 0x07
    16b2:	24 81       	ldd	r18, Z+4	; 0x04
    16b4:	35 81       	ldd	r19, Z+5	; 0x05
    16b6:	42 17       	cp	r20, r18
    16b8:	53 07       	cpc	r21, r19
    16ba:	44 f4       	brge	.+16     	; 0x16cc <fputc+0x38>
    16bc:	a0 81       	ld	r26, Z
    16be:	b1 81       	ldd	r27, Z+1	; 0x01
    16c0:	9d 01       	movw	r18, r26
    16c2:	2f 5f       	subi	r18, 0xFF	; 255
    16c4:	3f 4f       	sbci	r19, 0xFF	; 255
    16c6:	31 83       	std	Z+1, r19	; 0x01
    16c8:	20 83       	st	Z, r18
    16ca:	8c 93       	st	X, r24
    16cc:	26 81       	ldd	r18, Z+6	; 0x06
    16ce:	37 81       	ldd	r19, Z+7	; 0x07
    16d0:	2f 5f       	subi	r18, 0xFF	; 255
    16d2:	3f 4f       	sbci	r19, 0xFF	; 255
    16d4:	37 83       	std	Z+7, r19	; 0x07
    16d6:	26 83       	std	Z+6, r18	; 0x06
    16d8:	10 c0       	rjmp	.+32     	; 0x16fa <fputc+0x66>
    16da:	eb 01       	movw	r28, r22
    16dc:	09 2f       	mov	r16, r25
    16de:	18 2f       	mov	r17, r24
    16e0:	00 84       	ldd	r0, Z+8	; 0x08
    16e2:	f1 85       	ldd	r31, Z+9	; 0x09
    16e4:	e0 2d       	mov	r30, r0
    16e6:	09 95       	icall
    16e8:	89 2b       	or	r24, r25
    16ea:	e1 f6       	brne	.-72     	; 0x16a4 <fputc+0x10>
    16ec:	8e 81       	ldd	r24, Y+6	; 0x06
    16ee:	9f 81       	ldd	r25, Y+7	; 0x07
    16f0:	01 96       	adiw	r24, 0x01	; 1
    16f2:	9f 83       	std	Y+7, r25	; 0x07
    16f4:	8e 83       	std	Y+6, r24	; 0x06
    16f6:	81 2f       	mov	r24, r17
    16f8:	90 2f       	mov	r25, r16
    16fa:	df 91       	pop	r29
    16fc:	cf 91       	pop	r28
    16fe:	1f 91       	pop	r17
    1700:	0f 91       	pop	r16
    1702:	08 95       	ret

00001704 <sprintf>:
    1704:	ae e0       	ldi	r26, 0x0E	; 14
    1706:	b0 e0       	ldi	r27, 0x00	; 0
    1708:	e8 e8       	ldi	r30, 0x88	; 136
    170a:	fb e0       	ldi	r31, 0x0B	; 11
    170c:	0c 94 22 0a 	jmp	0x1444	; 0x1444 <__prologue_saves__+0x1c>
    1710:	0d 89       	ldd	r16, Y+21	; 0x15
    1712:	1e 89       	ldd	r17, Y+22	; 0x16
    1714:	86 e0       	ldi	r24, 0x06	; 6
    1716:	8c 83       	std	Y+4, r24	; 0x04
    1718:	1a 83       	std	Y+2, r17	; 0x02
    171a:	09 83       	std	Y+1, r16	; 0x01
    171c:	8f ef       	ldi	r24, 0xFF	; 255
    171e:	9f e7       	ldi	r25, 0x7F	; 127
    1720:	9e 83       	std	Y+6, r25	; 0x06
    1722:	8d 83       	std	Y+5, r24	; 0x05
    1724:	ae 01       	movw	r20, r28
    1726:	47 5e       	subi	r20, 0xE7	; 231
    1728:	5f 4f       	sbci	r21, 0xFF	; 255
    172a:	6f 89       	ldd	r22, Y+23	; 0x17
    172c:	78 8d       	ldd	r23, Y+24	; 0x18
    172e:	ce 01       	movw	r24, r28
    1730:	01 96       	adiw	r24, 0x01	; 1
    1732:	0e 94 76 06 	call	0xcec	; 0xcec <vfprintf>
    1736:	2f 81       	ldd	r18, Y+7	; 0x07
    1738:	38 85       	ldd	r19, Y+8	; 0x08
    173a:	f8 01       	movw	r30, r16
    173c:	e2 0f       	add	r30, r18
    173e:	f3 1f       	adc	r31, r19
    1740:	10 82       	st	Z, r1
    1742:	2e 96       	adiw	r28, 0x0e	; 14
    1744:	e4 e0       	ldi	r30, 0x04	; 4
    1746:	0c 94 3e 0a 	jmp	0x147c	; 0x147c <__epilogue_restores__+0x1c>

0000174a <__ultoa_invert>:
    174a:	fa 01       	movw	r30, r20
    174c:	aa 27       	eor	r26, r26
    174e:	28 30       	cpi	r18, 0x08	; 8
    1750:	51 f1       	breq	.+84     	; 0x17a6 <__ultoa_invert+0x5c>
    1752:	20 31       	cpi	r18, 0x10	; 16
    1754:	81 f1       	breq	.+96     	; 0x17b6 <__ultoa_invert+0x6c>
    1756:	e8 94       	clt
    1758:	6f 93       	push	r22
    175a:	6e 7f       	andi	r22, 0xFE	; 254
    175c:	6e 5f       	subi	r22, 0xFE	; 254
    175e:	7f 4f       	sbci	r23, 0xFF	; 255
    1760:	8f 4f       	sbci	r24, 0xFF	; 255
    1762:	9f 4f       	sbci	r25, 0xFF	; 255
    1764:	af 4f       	sbci	r26, 0xFF	; 255
    1766:	b1 e0       	ldi	r27, 0x01	; 1
    1768:	3e d0       	rcall	.+124    	; 0x17e6 <__ultoa_invert+0x9c>
    176a:	b4 e0       	ldi	r27, 0x04	; 4
    176c:	3c d0       	rcall	.+120    	; 0x17e6 <__ultoa_invert+0x9c>
    176e:	67 0f       	add	r22, r23
    1770:	78 1f       	adc	r23, r24
    1772:	89 1f       	adc	r24, r25
    1774:	9a 1f       	adc	r25, r26
    1776:	a1 1d       	adc	r26, r1
    1778:	68 0f       	add	r22, r24
    177a:	79 1f       	adc	r23, r25
    177c:	8a 1f       	adc	r24, r26
    177e:	91 1d       	adc	r25, r1
    1780:	a1 1d       	adc	r26, r1
    1782:	6a 0f       	add	r22, r26
    1784:	71 1d       	adc	r23, r1
    1786:	81 1d       	adc	r24, r1
    1788:	91 1d       	adc	r25, r1
    178a:	a1 1d       	adc	r26, r1
    178c:	20 d0       	rcall	.+64     	; 0x17ce <__ultoa_invert+0x84>
    178e:	09 f4       	brne	.+2      	; 0x1792 <__ultoa_invert+0x48>
    1790:	68 94       	set
    1792:	3f 91       	pop	r19
    1794:	2a e0       	ldi	r18, 0x0A	; 10
    1796:	26 9f       	mul	r18, r22
    1798:	11 24       	eor	r1, r1
    179a:	30 19       	sub	r19, r0
    179c:	30 5d       	subi	r19, 0xD0	; 208
    179e:	31 93       	st	Z+, r19
    17a0:	de f6       	brtc	.-74     	; 0x1758 <__ultoa_invert+0xe>
    17a2:	cf 01       	movw	r24, r30
    17a4:	08 95       	ret
    17a6:	46 2f       	mov	r20, r22
    17a8:	47 70       	andi	r20, 0x07	; 7
    17aa:	40 5d       	subi	r20, 0xD0	; 208
    17ac:	41 93       	st	Z+, r20
    17ae:	b3 e0       	ldi	r27, 0x03	; 3
    17b0:	0f d0       	rcall	.+30     	; 0x17d0 <__ultoa_invert+0x86>
    17b2:	c9 f7       	brne	.-14     	; 0x17a6 <__ultoa_invert+0x5c>
    17b4:	f6 cf       	rjmp	.-20     	; 0x17a2 <__ultoa_invert+0x58>
    17b6:	46 2f       	mov	r20, r22
    17b8:	4f 70       	andi	r20, 0x0F	; 15
    17ba:	40 5d       	subi	r20, 0xD0	; 208
    17bc:	4a 33       	cpi	r20, 0x3A	; 58
    17be:	18 f0       	brcs	.+6      	; 0x17c6 <__ultoa_invert+0x7c>
    17c0:	49 5d       	subi	r20, 0xD9	; 217
    17c2:	31 fd       	sbrc	r19, 1
    17c4:	40 52       	subi	r20, 0x20	; 32
    17c6:	41 93       	st	Z+, r20
    17c8:	02 d0       	rcall	.+4      	; 0x17ce <__ultoa_invert+0x84>
    17ca:	a9 f7       	brne	.-22     	; 0x17b6 <__ultoa_invert+0x6c>
    17cc:	ea cf       	rjmp	.-44     	; 0x17a2 <__ultoa_invert+0x58>
    17ce:	b4 e0       	ldi	r27, 0x04	; 4
    17d0:	a6 95       	lsr	r26
    17d2:	97 95       	ror	r25
    17d4:	87 95       	ror	r24
    17d6:	77 95       	ror	r23
    17d8:	67 95       	ror	r22
    17da:	ba 95       	dec	r27
    17dc:	c9 f7       	brne	.-14     	; 0x17d0 <__ultoa_invert+0x86>
    17de:	00 97       	sbiw	r24, 0x00	; 0
    17e0:	61 05       	cpc	r22, r1
    17e2:	71 05       	cpc	r23, r1
    17e4:	08 95       	ret
    17e6:	9b 01       	movw	r18, r22
    17e8:	ac 01       	movw	r20, r24
    17ea:	0a 2e       	mov	r0, r26
    17ec:	06 94       	lsr	r0
    17ee:	57 95       	ror	r21
    17f0:	47 95       	ror	r20
    17f2:	37 95       	ror	r19
    17f4:	27 95       	ror	r18
    17f6:	ba 95       	dec	r27
    17f8:	c9 f7       	brne	.-14     	; 0x17ec <__ultoa_invert+0xa2>
    17fa:	62 0f       	add	r22, r18
    17fc:	73 1f       	adc	r23, r19
    17fe:	84 1f       	adc	r24, r20
    1800:	95 1f       	adc	r25, r21
    1802:	a0 1d       	adc	r26, r0
    1804:	08 95       	ret

00001806 <_exit>:
    1806:	f8 94       	cli

00001808 <__stop_program>:
    1808:	ff cf       	rjmp	.-2      	; 0x1808 <__stop_program>
